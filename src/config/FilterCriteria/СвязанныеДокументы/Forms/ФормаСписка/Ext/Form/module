////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мКэшРеквизитовДокумента; //соответствие между именем документа и составом его реквизитов
Перем мУжеВСписке;             //массив документов, выведенных в таблицу
Перем мМассивРеквизитов;       //массив реквизитов, которые необходимо отображать в таблице

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВывестиТаблицуСвязанныхДокументов()
	ТаблицаСвязанныхДокументов.Очистить();
	мУжеВСписке.Очистить();
	ЗаполнитьТаблицуСвязанныхДокументов();
	ЭлементыФормы.ТаблицаСвязанныхДокументов.ОбновитьСтроки();
КонецПроцедуры

Процедура ЗаполнитьТаблицуСвязанныхДокументов()
	Таблица = ПолныеПрава.ПолучитьСписокДокументовПоКритериюОтбора("СвязанныеДокументы", Ссылка);
	
	КэшПоТипамДокументов = Новый Соответствие;

	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		МетаданныеДокумента = СтрокаТаблицы.Ссылка.Метаданные();
		Если Не ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
			Продолжить;
		КонецЕсли;			
		ИмяДокумента = МетаданныеДокумента.Имя;
		СинонимДокумента = МетаданныеДокумента.Синоним;
		
		ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента);
		
		СтруктураТипа = КэшПоТипамДокументов[ИмяДокумента];
		Если СтруктураТипа = Неопределено Тогда
			СтруктураТипа = Новый Структура("Синоним, МассивСсылок", СинонимДокумента, Новый Массив);
			КэшПоТипамДокументов.Вставить(ИмяДокумента, СтруктураТипа);
		КонецЕсли;
		СтруктураТипа.МассивСсылок.Добавить(СтрокаТаблицы.Ссылка);		
	КонецЦикла;
	
	ЕСли КэшПоТипамДокументов.Количество() = 0 ТОгда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаНачало = "ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ (";
	ТекстЗапросаКонец = ") КАК ПодчиненныеДокументы УПОРЯДОЧИТЬ ПО ПодчиненныеДокументы.Дата, ПодчиненныеДокументы.Номер";
	Запрос = Новый Запрос;
	ТекстЗапроса = "";
	Для Каждого КлючИЗначение ИЗ КэшПоТипамДокументов Цикл
		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "
			|ВЫБРАТЬ ", "
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ") + "
			|Дата, Номер, Ссылка, Представление,";
			Для каждого Реквизит из мМассивРеквизитов цикл
				ТекстЗапроса = ТекстЗапроса + "
				|"+?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ][Реквизит], Реквизит, "NULL") + " КАК "+Реквизит+",";
			КонецЦикла;
			ТекстЗапроса = ТекстЗапроса + "
			| """+КлючИЗначение.Значение.Синоним+""" КАК ВидДокумента
			|ИЗ Документ." + КлючИЗначение.Ключ + "
			|ГДЕ Ссылка В (&" + КлючИЗначение.Ключ + ")";
					
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение.МассивСсылок);		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапросаНачало + ТекстЗапроса + ТекстЗапросаКонец;
	
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		Если мУжеВСписке[Выборка.Ссылка] = Неопределено Тогда
			НоваяСтрока = ТаблицаСвязанныхДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
			мУжеВСписке.Вставить(Выборка.Ссылка, Истина);
		КонецЕсли;
	КонецЦикла;		

КонецПроцедуры

Процедура ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента)
	РеквизитыДокумента = мКэшРеквизитовДокумента[ИмяДокумента];
	Если РеквизитыДокумента = Неопределено Тогда
		РеквизитыДокумента = Новый Соответствие;
		Для каждого Реквизит из мМассивРеквизитов цикл
			РеквизитыДокумента.Вставить(Реквизит, МетаданныеДокумента.Реквизиты.Найти(Реквизит) <> Неопределено);
		КонецЦикла;
		
		мКэшРеквизитовДокумента.Вставить(ИмяДокумента, РеквизитыДокумента);
	КонецЕсли;
КонецПроцедуры

//Процедура выполняет проведение или отмену проведения документа
Процедура ЗаписатьВыбранныйДокумент(РежимЗаписи)
	Если ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка = Неопределено тогда
		Возврат
	КонецЕсли;
	ДокОбъект = ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.ПолучитьОбъект();
	ДокОбъект.Записать(РежимЗаписи);
	ЭлементыФормы.ТаблицаСвязанныхДокументов.ОбновитьСтроки();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(ПараметрОтборПоЗначению) Тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	Ссылка = ПараметрОтборПоЗначению;
	ЭтаФорма.Заголовок = "Связанные документы: "+Ссылка;
	ВывестиТаблицуСвязанныхДокументов();
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(ПараметрОтборПоЗначению) Тогда
		ЭтаФорма.Закрыть();
		Возврат;
	КонецЕсли;
	Ссылка = ПараметрОтборПоЗначению;
	ЭтаФорма.Заголовок = "Связанные документы: "+Ссылка;
	ВывестиТаблицуСвязанныхДокументов();
КонецПроцедуры


Процедура ТаблицаСвязанныхДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ЯчейкаКартинки = ОформлениеСтроки.Ячейки.Картинка;
	ЯчейкаКартинки.ОтображатьТекст    = Ложь;
	ЯчейкаКартинки.ОтображатьФлажок   = Ложь;
	ЯчейкаКартинки.ОтображатьКартинку = Истина;
	
	Если ДанныеСтроки.Ссылка = Неопределено Тогда
		ЯчейкаКартинки.ИндексКартинки = 3;
	Иначе
		Если ДанныеСтроки.Ссылка.Проведен Тогда
			ЯчейкаКартинки.ИндексКартинки = 0;
		ИначеЕсли ДанныеСтроки.Ссылка.ПометкаУдаления Тогда
			ЯчейкаКартинки.ИндексКартинки = 1;
		Иначе
			ЯчейкаКартинки.ИндексКартинки = 2;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ТаблицаСвязанныхДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если ВыбраннаяСтрока.Ссылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВыбраннаяСтрока.Ссылка.ПолучитьФорму().Открыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельФормыПровести(Кнопка)
	Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.ПометкаУдаления Тогда
		Предупреждение("Помеченный на удаление документ не может быть проведен!");
		Возврат;
	ИначеЕсли ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.Дата > КонецДня(ТекущаяДата()) Тогда
		Предупреждение("Нельзя проводить документы будущей датой!");
		Возврат;
	КонецЕсли;
	
	Попытка
		ЗаписатьВыбранныйДокумент(РежимЗаписиДокумента.Проведение);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось провести документ: "+ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОтменаПроведения(Кнопка)
	Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если не ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.Проведен Тогда
		Предупреждение("Документ не проведен");
		Возврат;
	КонецЕсли;
	Попытка
		ЗаписатьВыбранныйДокумент(РежимЗаписиДокумента.ОтменаПроведения);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось отменить проведение документа: "+ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

Процедура КоманднаяПанельФормыПометитьНаУдаление(Кнопка)
	Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка = Неопределено тогда
		Возврат
	КонецЕсли;
	ТекущаяПометка = ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.ПометкаУдаления;
	Если ТекущаяПометка Тогда
		ТекстВопроса = "Снять с объекта пометку на удаление?";
		ТекстДействие = "снять с объекта пометку на удаление"
	Иначе
		ТекстВопроса = "Пометить объект на удаление?";
		ТекстДействие = "пометить объект на удаление";
	КонецЕсли;
	Если Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		Попытка
			ДокОбъект = ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(не ТекущаяПометка);
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось "+ТекстДействие+": "+ОписаниеОшибки());
		КонецПопытки;

	КонецЕсли;
	ЭлементыФормы.ТаблицаСвязанныхДокументов.ОбновитьСтроки();
КонецПроцедуры

Процедура КоманднаяПанельФормыОбновить(Кнопка)
	ВывестиТаблицуСвязанныхДокументов();
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура КоманднаяПанельФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура КоманднаяПанельФормыПечать(Кнопка)
    Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()


Процедура КоманднаяПанельФормыНайтиВЖурнале(Кнопка)
	Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
    ФормаСписка = Документы[ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.Метаданные().Имя].ПолучитьФормуСписка();
	ФормаСписка.ПараметрТекущаяСтрока = ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка;
	ФормаСписка.Открыть();
КонецПроцедуры

Процедура КоманднаяПанельФормыОткрытьФорму(Кнопка)
	Если ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
    ЭлементыФормы.ТаблицаСвязанныхДокументов.ТекущиеДанные.Ссылка.ПолучитьФорму().Открыть();
КонецПроцедуры


мКэшРеквизитовДокумента = Новый Соответствие;
мУжеВСписке = Новый Соответствие;
мМассивРеквизитов = новый Массив();
мМассивРеквизитов.Добавить("СуммаДокумента");
мМассивРеквизитов.Добавить("ВалютаДокумента");
мМассивРеквизитов.Добавить("Организация");
мМассивРеквизитов.Добавить("ВидОперации");
мМассивРеквизитов.Добавить("Ответственный");
мМассивРеквизитов.Добавить("ОтражатьВУправленческомУчете");
мМассивРеквизитов.Добавить("ОтражатьВБухгалтерскомУчете");
мМассивРеквизитов.Добавить("ОтражатьВНалоговомУчете");

