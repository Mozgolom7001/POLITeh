
// Процедура устанавливает доступность элементов формы.
//
Процедура УстановитьДоступностьЭлементовФормы()

	ЭлементыФормы.УстановкаЦенНоменклатуры.ТолькоПросмотр = Стартован;
	ЭлементыФормы.Склад.ТолькоПросмотр = Стартован;
	ЭлементыФормы.Настройка.ТолькоПросмотр = Стартован;
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаОК.Доступность = Не Стартован;

КонецПроцедуры // УстановитьДоступностьЭлементовФормы()

// Процедура вызывается при изменении склада.
Процедура ПриИзмененииСклада()

	Если Склад.Пустая() Тогда
		Возврат;
	КонецЕсли;

	Если Склад.ВидСклада <> Перечисления.ВидыСкладов.Розничный Тогда
		Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры // ПриИзмененииСклада()

// Процедура вызывается при изменении настройки.
//
Процедура ПриИзмененииНастройки()

	Если Настройка.Пустая() Тогда
		Возврат;
	КонецЕсли;

	Если Настройка.ВидБизнесПроцесса <> Перечисления.ВидыБизнесПроцессов.ПереоценкаТоваровАТТ Тогда
		Настройка = Справочники.НастройкиБизнесПроцессов.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры // ПриИзмененииНастройки()

// Процедура отображает бизнес-процесс по ведущей задаче.
//
Процедура ОтобразитьДанныеПоПереоценкеТоваровВРознице()

	Если ЗначениеЗаполнено(ВедущаяЗадача) Тогда
		ПереоценкаТоваровРозница = ВедущаяЗадача.БизнесПроцесс;

		Если Не ЗначениеЗаполнено(ПереоценкаТоваровРозница) Тогда
			ЭлементыФормы.ПанельВедущийБизнесПроцесс.Свертка = РежимСверткиЭлементаУправления.Низ;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОтобразитьДанныеПоПереоценкеТоваровВРознице()

// Процедура открывает бизнес-процесс по ведущей задаче.
//
Процедура ОткрытьПереоценкуТоваровВРознице()

	Если ЗначениеЗаполнено(ВедущаяЗадача.БизнесПроцесс) Тогда
		ОткрытьЗначение(ВедущаяЗадача.БизнесПроцесс);
	КонецЕсли;

КонецПроцедуры // ОткрытьПереоценкуТоваровВРознице()
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ
//

// Процедура обработчик действия элемента "КартаМаршрута" панели "ДействияФормы".
//
Процедура ДействияФормыКартаМаршрута(Кнопка)

	РаботаСБизнесПроцессами.ОткрытьКартумаршрута(Ссылка);

КонецПроцедуры // ДействияФормыКартаМаршрута()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ
//

// Процедура - обработчик события "ПриИзменении" поля "Настройка".
//
Процедура НастройкаПриИзменении(Элемент)

	ПриИзмененииНастройки();

КонецПроцедуры // НастройкаПриИзменении()

// Процедура - обработчик события "Нажатие" гиперссылки.
//
Процедура ГиперСсылкаПереоценкаТоваровВРозницеНажатие(Элемент)

	ОткрытьПереоценкуТоваровВРознице();

КонецПроцедуры // ГиперСсылкаПереоценкаТоваровВРозницеНажатие()

// Процедура - обработчик события "ПриИзменении" поля "Склад".
//
Процедура СкладПриИзменении(Элемент)

	ПриИзмененииСклада();

КонецПроцедуры // СкладПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля "Настройка".
//
Процедура НастройкаНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.НастройкиБизнесПроцессов.ПолучитьФормуВыбора(,Элемент,Элемент);
	ФормаВыбора.СправочникСписок.Отбор.ВидБизнесПроцесса.Установить(Перечисления.ВидыБизнесПроцессов.ПереоценкаТоваровАТТ);
	ФормаВыбора.ПараметрТекущаяСтрока = Настройка;
	ФормаВыбора.Открыть();

КонецПроцедуры // НастройкаНачалоВыбора()

// Процедура - обработчик события "НачалоВыбора" поля "Склад".
//
Процедура СкладНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.Склады.ПолучитьФормуВыбора(,Элемент,Элемент);
	ФормаВыбора.СправочникСписок.Отбор.ВидСклада.Установить(Перечисления.ВидыСкладов.Розничный);
	ФормаВыбора.Открыть();

КонецПроцедуры // СкладНачалоВыбора()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	УстановитьДоступностьЭлементовФормы();

	Если ЭтоНовый() Тогда
		Инициатор = ОбщегоНазначения.ПолучитьЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;

	РаботаСБизнесПроцессами.УстановитьЗаголовокБизнесПроцесса(ЭтотОбъект, ЭтаФорма);

	ОтобразитьДанныеПоПереоценкеТоваровВРознице();

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	УстановитьДоступностьЭлементовФормы();

	РаботаСБизнесПроцессами.УстановитьЗаголовокБизнесПроцесса(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ПослеЗаписи()

