
Перем мТекущееТабличноеПоле;

/////////////////////////////////////////////////////////////////
// Общие процедуры и функции

Процедура ОтобразитьСтраницуПанели(ИмяСтраницы)

	ЭлементыФормы.ПанельТабличныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельТабличныхПолей.Страницы[ИмяСтраницы];
	мТекущееТабличноеПоле = ЭлементыФормы["ТабличноеПолеНастройки" + ИмяСтраницы];
	мТекущееТабличноеПоле.ОбновитьСтроки();
	
	Для каждого СтраницаПанели Из ЭлементыФормы.ПанельТабличныхПолей.Страницы Цикл
		
		Если СтраницаПанели = ЭлементыФормы.ПанельТабличныхПолей.ТекущаяСтраница Тогда
			ЭлементыФормы["Картинка" + СтраницаПанели.Имя].Картинка = БиблиотекаКартинок["ОбменДанными" + СтраницаПанели.Имя + "_1"];
		Иначе
			ЭлементыФормы["Картинка" + СтраницаПанели.Имя].Картинка = БиблиотекаКартинок["ОбменДанными" + СтраницаПанели.Имя + "_0"];
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры

Процедура ВыполнитьОбмен()

	Если мТекущееТабличноеПоле.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыОбменаДанными.ВыполнитьОбменДаннымиПоПроизвольнойНастройке(мТекущееТабличноеПоле.ТекущиеДанные.Ссылка, , глЗначениеПеременной("глОбработкаАвтоОбменДанными"));
		
	// после проведения обмена данными, надо обновить список
	мТекущееТабличноеПоле.ОбновитьСтроки();
	
КонецПроцедуры

Процедура ОткрытьМониторСостояния()
	
	Если мТекущееТабличноеПоле.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;		
	
	ПроцедурыОбменаДаннымиКлиент.ОткрытьМониторОбменовДляНастройки(мТекущееТабличноеПоле.ТекущиеДанные.ссылка, ЭтаФорма);
	
КонецПроцедуры

Процедура ОтработатьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, МассивТипов)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ТипПланаОбмена = МассивТипов[0];
	
	Если Копирование Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			НовыйОбъект = Элемент.ТекущиеДанные.Ссылка.Скопировать();
		КонецЕсли; 
		
	ИначеЕсли ТипПланаОбмена = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерия") Тогда
		
		ОбработкаПомощника = Обработки.ПомощникНастройкиОбменаДанными.Создать();
		ФормаНастройки = ОбработкаПомощника.ПолучитьФорму("Форма");
		ФормаНастройки.Открыть();
		Возврат;
	ИначеЕсли ТипПланаОбмена = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияКОРП") Тогда
		
		ОбработкаПомощника = Обработки.ПомощникНастройкиОбменаДаннымиСБухгалтерияПредприятияКОРП.Создать();
		ФормаНастройки = ОбработкаПомощника.ПолучитьФорму("Форма");
		ФормаНастройки.Открыть();
		Возврат;
		
	ИначеЕсли ТипПланаОбмена = Тип("ПланОбменаСсылка.ОбменУправлениеПредприятиемУправлениеТорговлей") Тогда
		
		ОбработкаПомощника = Обработки.ПомощникНастройкиОбменаДаннымиУТУПП.Создать();
		ФормаНастройки = ОбработкаПомощника.ПолучитьФорму("Форма");
		ФормаНастройки.Открыть();
		Возврат;
		
	ИначеЕсли ТипПланаОбмена = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейРозничнаяТорговля") Тогда
		
		ОбработкаПомощника = Обработки.ПомощникНастройкиОбменаДаннымиСРозничнойТорговлей.Создать();
		ФормаНастройки = ОбработкаПомощника.ПолучитьФорму("Форма");
		ФормаНастройки.Открыть();
		Возврат;
		
	Иначе
		
		НовыйОбъект = Справочники.НастройкиОбменаДанными.СоздатьЭлемент();
				
	КонецЕсли;
	
	ФормаЭлемента = НовыйОбъект.ПолучитьФорму(, Элемент);
	
	Если Элемент.ТекущиеДанные <> Неопределено И Копирование Тогда
		ФормаЭлемента.ПараметрОбъектКопирования  = Элемент.ТекущиеДанные.Ссылка;
	КонецЕсли; 
		
	ФормаЭлемента.Открыть();
	
КонецПроцедуры

Процедура ОбработатьПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ПланОбменаСсылка.Полный"));
		
	ФормаЭлемента = Элемент.ТекущиеДанные.Ссылка.ПолучитьФорму(, Элемент);
	ФормаЭлемента.УстановитьНедоступностьИзмененияТипаУзла(МассивТипов);
	ФормаЭлемента.Открыть();

КонецПроцедуры

/////////////////////////////////////////////////////////////////
// Обработчики событий формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ТипОбменаПоУмолчанию = Неопределено Тогда
		
		ИмяСтраницы = ВосстановитьЗначение("ИмяСтраницыСписковОбменовДанными");
		Если ЗначениеЗаполнено(ИмяСтраницы) Тогда
			ОтобразитьСтраницуПанели(ИмяСтраницы);
		Иначе
			ОтобразитьСтраницуПанели("БП8");
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.Полный") Тогда
			ОтобразитьСтраницуПанели("РИБ");
		ИначеЕсли ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерия") Тогда
			ОтобразитьСтраницуПанели("БП8");
		ИначеЕсли ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияКОРП") Тогда
			ОтобразитьСтраницуПанели("БПКОРП8");
		ИначеЕсли ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.ОбменУправлениеПредприятиемУправлениеТорговлей") Тогда
			ОтобразитьСтраницуПанели("УПП8");
		ИначеЕсли ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейРозничнаяТорговля") Тогда
			ОтобразитьСтраницуПанели("РТ8");
		ИначеЕсли ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.ОбменССайтомЗаказами") 
		      Или ТипЗнч(ТипОбменаПоУмолчанию) = Тип("ПланОбменаСсылка.ОбменССайтомТоварами") Тогда
			ОтобразитьСтраницуПанели("ВЕБ");
		Иначе
			ОтобразитьСтраницуПанели("Все");
		КонецЕсли; 
		
	КонецЕсли; 
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы["ТабличноеПолеНастройки" + ЭлементыФормы.ПанельТабличныхПолей.ТекущаяСтраница.Имя];
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если ТипОбменаПоУмолчанию = Неопределено Тогда
		СохранитьЗначение("ИмяСтраницыСписковОбменовДанными", ЭлементыФормы.ПанельТабличныхПолей.ТекущаяСтраница.Имя);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	НастройкиБП8.Отбор.ТипУзлаИнформационнойБазы.Установить(ПланыОбмена.ОбменУправлениеТорговлейБухгалтерия.ПустаяСсылка());
	ЭлементыФормы.ТабличноеПолеНастройкиБП8.НастройкаОтбора.ТипУзлаИнформационнойБазы.Доступность = Ложь;
	
	НастройкиБПКОРП8.Отбор.ТипУзлаИнформационнойБазы.Установить(ПланыОбмена.ОбменУправлениеТорговлейБухгалтерияКОРП.ПустаяСсылка());
	ЭлементыФормы.ТабличноеПолеНастройкиБПКОРП8.НастройкаОтбора.ТипУзлаИнформационнойБазы.Доступность = Ложь;
	
	НастройкиУПП8.Отбор.ТипУзлаИнформационнойБазы.Установить(ПланыОбмена.ОбменУправлениеПредприятиемУправлениеТорговлей.ПустаяСсылка());
	ЭлементыФормы.ТабличноеПолеНастройкиУПП8.НастройкаОтбора.ТипУзлаИнформационнойБазы.Доступность = Ложь;
	
	НастройкиРИБ.Отбор.ТипУзлаИнформационнойБазы.Установить(ПланыОбмена.Полный.ПустаяСсылка());
	ЭлементыФормы.ТабличноеПолеНастройкиРИБ.НастройкаОтбора.ТипУзлаИнформационнойБазы.Доступность = Ложь;
	
	НастройкиРТ8.Отбор.ТипУзлаИнформационнойБазы.Установить(ПланыОбмена.ОбменУправлениеТорговлейРозничнаяТорговля.ПустаяСсылка());
	ЭлементыФормы.ТабличноеПолеНастройкиРТ8.НастройкаОтбора.ТипУзлаИнформационнойБазы.Доступность = Ложь;	
		
КонецПроцедуры

/////////////////////////////////////////////////////////////////
// Обработчики событий элементов формы

Процедура КартинкаБП8Нажатие(Элемент)
	
	ОтобразитьСтраницуПанели("БП8");
	
КонецПроцедуры

Процедура КартинкаБПКОРП8Нажатие(Элемент)
	
	ОтобразитьСтраницуПанели("БПКОРП8");
	
КонецПроцедуры

Процедура КартинкаРТ8Нажатие(Элемент)
	
	ОтобразитьСтраницуПанели("РТ8");
	
КонецПроцедуры

Процедура КартинкаУПП8Нажатие(Элемент)
	
	ОтобразитьСтраницуПанели("УПП8");
	
КонецПроцедуры

Процедура КартинкаВЕБНажатие(Элемент)
	
	ОтобразитьСтраницуПанели("ВЕБ");
	
КонецПроцедуры

Процедура КартинкаРИБНажатие(Элемент)
	
	ОтобразитьСтраницуПанели("РИБ");
	
КонецПроцедуры

Процедура КартинкаВсеНажатие(Элемент)
	
	ОтобразитьСтраницуПанели("Все");
	
КонецПроцедуры


Процедура КоманднаяПанельНастройкиВыполнитьОбмен(Кнопка)
	
	ВыполнитьОбмен();
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиМониторСостояния(Кнопка)
	
	ОткрытьМониторСостояния();
	
КонецПроцедуры


Процедура ТабличноеПолеНастройкиБП8ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерия"));
	
	ОтработатьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, МассивТипов);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБПКОРП8ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияКОРП"));
	
	ОтработатьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, МассивТипов);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиУПП8ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ПланОбменаСсылка.ОбменУправлениеПредприятиемУправлениеТорговлей"));
	
	ОтработатьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, МассивТипов);
	
КонецПроцедуры


Процедура ТабличноеПолеНастройкиРИБПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ПланОбменаСсылка.Полный"));
	
	ОтработатьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, МассивТипов);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБП8ПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Помощник = Обработки.ПомощникНастройкиОбменаДанными.Создать();
	Помощник.УстановитьПараметрыВнешнегоВызоваДляРедактированияНастройки(ЭлементыФормы.ТабличноеПолеНастройкиБП8.ТекущаяСтрока.Ссылка);
	ФормаПомощника = Помощник.ПолучитьФорму("Форма",ЭтаФорма,ЭтаФорма);
	ФормаПомощника.Открыть();
	
	
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБПКОРП8ПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Помощник = Обработки.ПомощникНастройкиОбменаДаннымиСБухгалтерияПредприятияКОРП.Создать();
	Помощник.УстановитьПараметрыВнешнегоВызоваДляРедактированияНастройки(ЭлементыФормы.ТабличноеПолеНастройкиБПКОРП8.ТекущаяСтрока.Ссылка);
	ФормаПомощника = Помощник.ПолучитьФорму("Форма",ЭтаФорма,ЭтаФорма);
	ФормаПомощника.Открыть();
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиУПП8ПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьПередНачаломИзменения(Элемент, Отказ);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРИБПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьПередНачаломИзменения(Элемент, Отказ);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБП8ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБПКОРП8ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиУПП8ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры


Процедура ТабличноеПолеНастройкиБП8ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБПКОРП8ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиУПП8ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРТ8ПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьПередНачаломИзменения(Элемент, Отказ);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРТ8ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРТ8ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРИБПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРИБПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиВсеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиВсеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиВЕБПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриПолученииДанныхОбменСWEB(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиВЕБПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПроцедурыОбменаДаннымиКлиент.ДействияСправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	ОформлениеСтроки.Ячейки.АдресДляОбмена.Значение = ?(ДанныеСтроки.ВыгружатьНаСайт, ДанныеСтроки.HTTPОбменАдресСайта, ДанныеСтроки.КаталогВыгрузки);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиВЕБПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если Копирование Тогда
		
		Возврат;
		
	Иначе
	
		Отказ = Истина;
		ОбработкаПомощника = Обработки.ПомощникНастройкиОбменаДаннымиССайтом.Создать();
		ФормаНастройки = ОбработкаПомощника.ПолучитьФорму("Форма");
		ФормаНастройки.Открыть();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.НастройкиОбменаДанными")
		ИЛИ ТипЗнч(Объект) = Тип("СправочникСсылка.НастройкиОбменаССайтом") Тогда
		
		мТекущееТабличноеПоле.ОбновитьСтроки();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРТ8ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейРозничнаяТорговля"));
	
	ОтработатьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, МассивТипов);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБП8ПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыполненияОбменаБП.Отбор.ЗначениеОтбора.Установить(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиБПКОРП8ПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыполненияОбменаБПКОРП.Отбор.ЗначениеОтбора.Установить(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиУПП8ПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыполненияОбменаУПП.Отбор.ЗначениеОтбора.Установить(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРТ8ПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыполненияОбменаРТ.Отбор.ЗначениеОтбора.Установить(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиРИБПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыполненияОбменаРИБ.Отбор.ЗначениеОтбора.Установить(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура ТабличноеПолеНастройкиВсеПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыполненияОбменаВСЕ.Отбор.ЗначениеОтбора.Установить(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиВыполненеияОбменаПроизвестиОбменДанными(Кнопка)
	
	Если ЭлементыФормы.НастройкиВыполненияОбменаБП.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыОбменаДанными.ВыполнитьОбменПоНастройкеАвтоматическогоВыполненияОбменаДанными(ЭлементыФормы.НастройкиВыполненияОбменаБП.ТекущиеДанные.Ссылка, ,глЗначениеПеременной("глОбработкаАвтоОбменДанными"));
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиВыполненеияОбменаВСЕПроизвестиОбменДаннымиВСЕ(Кнопка)
	
	Если ЭлементыФормы.НастройкиВыполненияОбменаВСЕ.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыОбменаДанными.ВыполнитьОбменПоНастройкеАвтоматическогоВыполненияОбменаДанными(ЭлементыФормы.НастройкиВыполненияОбменаВСЕ.ТекущиеДанные.Ссылка, ,глЗначениеПеременной("глОбработкаАвтоОбменДанными"));
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиВыполненеияОбменаРТПроизвестиОбменДаннымиРТ(Кнопка)
	
	Если ЭлементыФормы.НастройкиВыполненияОбменаРТ.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыОбменаДанными.ВыполнитьОбменПоНастройкеАвтоматическогоВыполненияОбменаДанными(ЭлементыФормы.НастройкиВыполненияОбменаРТ.ТекущиеДанные.Ссылка, ,глЗначениеПеременной("глОбработкаАвтоОбменДанными"));
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиВыполненеияОбменаРИБПроизвестиОбменданнымиРИБ(Кнопка)
	
	Если ЭлементыФормы.НастройкиВыполненияОбменаРИБ.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыОбменаДанными.ВыполнитьОбменПоНастройкеАвтоматическогоВыполненияОбменаДанными(ЭлементыФормы.НастройкиВыполненияОбменаРИБ.ТекущиеДанные.Ссылка, ,глЗначениеПеременной("глОбработкаАвтоОбменДанными"));
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиВыполненеияОбменаУПППроизвестиОбменДаннымиУПП(Кнопка)
	
	Если ЭлементыФормы.НастройкиВыполненияОбменаУПП.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыОбменаДанными.ВыполнитьОбменПоНастройкеАвтоматическогоВыполненияОбменаДанными(ЭлементыФормы.НастройкиВыполненияОбменаУПП.ТекущиеДанные.Ссылка, ,глЗначениеПеременной("глОбработкаАвтоОбменДанными"));
	
КонецПроцедуры

Процедура КоманднаяПанельНастройкиБП8ИзменитьНастройкуОбменаБП(Кнопка)
	Если ЭлементыФормы.ТабличноеПолеНастройкиБП8.ТекущаяСтрока <> Неопределено Тогда
		Помощник = Обработки.ПомощникНастройкиОбменаДанными.Создать();
		Помощник.УстановитьПараметрыВнешнегоВызоваДляРедактированияНастройки(ЭлементыФормы.ТабличноеПолеНастройкиБП8.ТекущаяСтрока.Ссылка);
		ФормаПомощника = Помощник.ПолучитьФорму("Форма",ЭтаФорма,ЭтаФорма);
		ФормаПомощника.Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельНастройкиБПКОРП8ИзменитьНастройкуОбменаБП(Кнопка)
	Если ЭлементыФормы.ТабличноеПолеНастройкиБПКОРП8.ТекущаяСтрока <> Неопределено Тогда
		Помощник = Обработки.ПомощникНастройкиОбменаДаннымиСБухгалтерияПредприятияКОРП.Создать();
		Помощник.УстановитьПараметрыВнешнегоВызоваДляРедактированияНастройки(ЭлементыФормы.ТабличноеПолеНастройкиБПКОРП8.ТекущаяСтрока.Ссылка);
		ФормаПомощника = Помощник.ПолучитьФорму("Форма",ЭтаФорма,ЭтаФорма);
		ФормаПомощника.Открыть();
	КонецЕсли;
КонецПроцедуры


ПроцедурыОбменаДаннымиКлиент.ДобавитьНеобходимыКолонкиДляВыводаСпискаНастроекОбмена(НастройкиУПП8);
ПроцедурыОбменаДаннымиКлиент.ДобавитьНеобходимыКолонкиДляВыводаСпискаНастроекОбмена(НастройкиРТ8);
ПроцедурыОбменаДаннымиКлиент.ДобавитьНеобходимыКолонкиДляВыводаСпискаНастроекОбмена(НастройкиБП8);
ПроцедурыОбменаДаннымиКлиент.ДобавитьНеобходимыКолонкиДляВыводаСпискаНастроекОбмена(НастройкиРИБ);
ПроцедурыОбменаДаннымиКлиент.ДобавитьНеобходимыКолонкиДляВыводаСпискаНастроекОбмена(НастройкиВсе);
ПроцедурыОбменаДаннымиКлиент.ДобавитьНеобходимыКолонкиДляВыводаСпискаНастроекОбмена(НастройкиБПКОРП8);

НастройкиВЕБ.Колонки.Добавить("ИспользоватьРегламентныеЗадания");
НастройкиВЕБ.Колонки.Добавить("HTTPОбменАдресСайта");
НастройкиВЕБ.Колонки.Добавить("КаталогВыгрузки");
НастройкиВЕБ.Колонки.Добавить("ВыгружатьНаСайт");
