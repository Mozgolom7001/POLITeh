////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мВопросыПриЗакрытии;
Перем мКрасныйЦвет;
Перем мСерыйЦвет;
Перем мЖирныйШрифт;
Перем мТолькоСерые;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура выполняет операции при изменении выбранного спец. предложения
//
Процедура ВыбранныйБонусПриИзменении()

	Если ВыбранныйБонус = Неопределено Тогда
		ВыбранныйБонус = ТаблицаСпецПредложений[0];
	КонецЕсли;

	ЭлементыФормы.ТаблицаСпецПредложений.ТекущаяСтрока = ВыбранныйБонус;

	ТаблицаНоменклатуры.Очистить();
	ТаблицаБонуснойНоменклатуры.Очистить();

	СтруктураСтроки = Новый Структура();
	СтруктураСтроки.Вставить("Номенклатура"              , ВыбранныйБонус.Номенклатура);
	СтруктураСтроки.Вставить("ХарактеристикаНоменклатуры", ВыбранныйБонус.ХарактеристикаНоменклатуры);

	МассивБонусов = СпецПредложения.Строки.НайтиСтроки(СтруктураСтроки, Ложь);
	БонусыйКомплект = МассивБонусов[0];

	Для Каждого ТекущаяКомплектующая Из БонусыйКомплект.Строки Цикл
		Если ТекущаяКомплектующая.ЭтоБонус Тогда
			НоваяСтрокаКомплектующей = ТаблицаБонуснойНоменклатуры.Добавить();
		Иначе
			НоваяСтрокаКомплектующей = ТаблицаНоменклатуры.Добавить();
			НоваяСтрокаКомплектующей.КоличествоЕсть = ТекущаяКомплектующая.КоличествоЕсть;
		КонецЕсли;

		НоваяСтрокаКомплектующей.Номенклатура = ТекущаяКомплектующая.Комплектующая;
		НоваяСтрокаКомплектующей.ХарактеристикаНоменклатуры = ТекущаяКомплектующая.ХарактеристикаКомплектующей;
		НоваяСтрокаКомплектующей.Количество = ТекущаяКомплектующая.Количество;
	КонецЦикла;

	ЭлементыФормы.ТаблицаНоменклатуры.Колонки["КоличествоЕсть"].Видимость = ВыбранныйБонус.СерыйБонус;
	ЭлементыФормы.ТаблицаНоменклатуры.Колонки["Нужно"].Видимость = ВыбранныйБонус.СерыйБонус;

КонецПроцедуры //ВыбранныйБонусПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработка события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ТаблицаСпецПредложений.Колонки.Добавить("СерыйБонус");

	мТолькоСерые = Истина;
	Для Каждого СпецПредложение Из СпецПредложения.Строки Цикл
		Бонус = ТаблицаСпецПредложений.Добавить();
		Бонус.Номенклатура = СпецПредложение.Номенклатура;
		Бонус.ХарактеристикаНоменклатуры = СпецПредложение.ХарактеристикаНоменклатуры;
		Бонус.Качество = СпецПредложение.Качество;
		Бонус.Количество = СпецПредложение.Количество;
		Бонус.ВыбранноеКоличество = Бонус.Количество;
		Бонус.СерыйБонус = СпецПредложение.СерыйБонус;

		мТолькоСерые = ?(СпецПредложение.СерыйБонус, мТолькоСерые, Ложь);
	КонецЦикла;

	ТаблицаСпецПредложений.Сортировать("СерыйБонус, Номенклатура");

	ВыбранныйБонусПриИзменении();

	Если ТаблицаСпецПредложений.Количество() = 1 Тогда
		ЭлементыФормы.ТаблицаСпецПредложений.Колонки["ВыбранноеКоличество"].РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	Иначе
		ЭлементыФормы.ТаблицаСпецПредложений.Колонки["ВыбранноеКоличество"].РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
	КонецЕсли;

КонецПроцедуры //ПередОткрытием()

// Обработка события "ПриВыводеСтроки" ТЧ "ТаблицаСпецПредложений"
//
Процедура ТаблицаСпецПредложенийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.ЕдиницаИзмерения.УстановитьТекст(ДанныеСтроки.Номенклатура.ЕдиницаХраненияОстатков);

	Если Не ДанныеСтроки.СерыйБонус Тогда
		ОформлениеСтроки.Шрифт = мЖирныйШрифт;
	Иначе
		ОформлениеСтроки.ЦветТекста = мСерыйЦвет;
	КонецЕсли;

КонецПроцедуры //ТаблицаСпецПредложенийПриВыводеСтроки()

// Обработка события "ПриВыводеСтроки" ТЧ "ТаблицаНоменклатуры"
//
Процедура ТаблицаНоменклатурыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.ЕдиницаИзмерения.УстановитьТекст(ДанныеСтроки.Номенклатура.ЕдиницаХраненияОстатков);

	Нужно = ДанныеСтроки.Количество - ДанныеСтроки.КоличествоЕсть;

	Если Нужно > 0 Тогда
		ОформлениеСтроки.Ячейки.Нужно.УстановитьТекст(Формат(Нужно, "ЧЦ=15; ЧДЦ=3"));
		ОформлениеСтроки.Ячейки.Нужно.Выравнивание = ГоризонтальноеПоложение.Право;
		ОформлениеСтроки.Ячейки.Нужно.ЦветТекста = мКрасныйЦвет;
		ОформлениеСтроки.Шрифт = мЖирныйШрифт;
	КонецЕсли;

КонецПроцедуры //ТаблицаНоменклатурыПриВыводеСтроки()

// Обработка события "ПриВыводеСтроки" ТЧ "ТаблицаБонуснойНоменклатуры"
//
Процедура ТаблицаБонуснойНоменклатурыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.ЕдиницаИзмерения.УстановитьТекст(ДанныеСтроки.Номенклатура.ЕдиницаХраненияОстатков);

КонецПроцедуры //ТаблицаБонуснойНоменклатурыПриВыводеСтроки()

// Обработка события "ПриАктивизацииСтроки" в ТЧ "ТаблицаСпецПредложений"
//
Процедура ТаблицаСпецПредложенийПриАктивизацииСтроки(Элемент)
    
    ПодключитьОбработчикОжидания("ОбработчикОжиданияТаблицаСпецПредложенийПриАктивизацииСтроки", 0.1, Истина);	 

КонецПроцедуры //ТаблицаСпецПредложенийПриАктивизацииСтроки()

// Процедура - обработчик ожидания для события ПриАктивизацииСтроки
// табличного поля ТаблицаСпецПредложений
//
Процедура ОбработчикОжиданияТаблицаСпецПредложенийПриАктивизацииСтроки()
    ВыбранныйБонус = ЭлементыФормы.ТаблицаСпецПредложений.ТекущиеДанные;
	ВыбранныйБонусПриИзменении();
КонецПроцедуры // ОбработчикОжиданияТаблицаСпецПредложенийПриАктивизацииСтроки

 
// Обработка события "ПриАктивизацииЯчейки" ТЧ "ТаблицаСпецПредложений"
//
Процедура ТаблицаСпецПредложенийПриАктивизацииЯчейки(Элемент)

	Если Элемент.ТекущаяКолонка <> Неопределено
	   И Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущаяКолонка.Имя = "ВыбранноеКоличество" Тогда
			ТекущаяСтрока = Элемент.ТекущиеДанные;

			Если ТекущаяСтрока.Количество = 1 Или ТекущаяСтрока.Количество = 0 Тогда
				Элемент.ТекущаяКолонка.ТолькоПросмотр = Истина;
			Иначе
				Элемент.ТекущаяКолонка.ТолькоПросмотр = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры //ТаблицаСпецПредложенийПриАктивизацииЯчейки()

// Обработка события "ПриИзменении" элемента "ВыбранноеКоличество" ТЧ "ТаблицаСпецПредложений"
//
Процедура ТаблицаБонусовВыбранноеКоличествоПриИзменении(Элемент)

	ТекущаяСтрока = ЭлементыФормы.ТаблицаСпецПредложений.ТекущиеДанные;

	Если Элемент.Значение = 0 Тогда
		Элемент.Значение = 1;
	ИначеЕсли Элемент.Значение > ТекущаяСтрока.Количество Тогда
		Элемент.Значение = ТекущаяСтрока.Количество;
	КонецЕсли;

КонецПроцедуры //ТаблицаБонусовВыбранноеКоличествоПриИзменении()

// Обработка события "Нажатие" кнопки "ВыбратьБонус"
//
Процедура ОсновныеДействияФормыКнопкаВыбратьБонус(Кнопка)

	Если ВыбранныйБонус.СерыйБонус Тогда
		Предупреждение("Нельзя выбрать неполный комплект!");
	Иначе
		мВопросыПриЗакрытии = Ложь;
		Закрыть(ВыбранныйБонус);
	КонецЕсли;

КонецПроцедуры //ОсновныеДействияФормыКнопкаВыбратьБонус()

// Обработка события "ПередЗакрытием" формы
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если мВопросыПриЗакрытии Тогда
		Если Не ВыбранныйБонус.СерыйБонус Тогда
			Ответ = Вопрос("Выбрать установленный бонус и количество?", РежимДиалогаВопрос.ДаНетОтмена);

			Если Ответ = КодВозвратаДиалога.Да Тогда
				Закрыть(ВыбранныйБонус);
			ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли Не мТолькоСерые Тогда
			Ответ = Вопрос("Вернуться к редактированию документа?", РежимДиалогаВопрос.ДаНет);

			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры //ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВопросыПриЗакрытии = Истина;
мЖирныйШрифт = Новый Шрифт(, , Истина);
мКрасныйЦвет = Новый Цвет(255, 0, 0);
мСерыйЦвет = Новый Цвет(127, 127, 127);
