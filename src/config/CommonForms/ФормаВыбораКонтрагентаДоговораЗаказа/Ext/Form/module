Перем мДеревоЗаказов;
Перем мТолькоОдинЗаказ;

Процедура УстановитьПометкиВСпискеЗаказов()

	Для Каждого ЭлемСписка Из СписокЗаказов Цикл
		ЭлемСписка.Пометка = Истина;
		Если мТолькоОдинЗаказ Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // УстановитьПометкиВСпискеЗаказов()

Процедура ПолеВводаКонтрагентПриИзменении(Элемент)

	ЗаполнитьСписокВыбора(Контрагент, "Договор");
	СписокЗаказов = ЗаполнитьСписокВыбора(Договор, "Заказ");
	УстановитьПометкиВСпискеЗаказов();
	
КонецПроцедуры // ПолеВыбораКонтрагентПриИзменении()

Процедура ПолеВводаДоговорПриИзменении(Элемент)

	СписокЗаказов = ЗаполнитьСписокВыбора(Договор, "Заказ");
	УстановитьПометкиВСпискеЗаказов();
	
КонецПроцедуры // ПолеВводаДоговорПриИзменении()

Функция НайтиВетвьРодителя(ЗначРодителя)
	
	Если ЗначРодителя = Неопределено Тогда
		Возврат мДеревоЗаказов.Строки[0];
	КонецЕсли;
	
	ВетвьКонтрагенты = мДеревоЗаказов.Строки[0];
	СтрокаДерева = ВетвьКонтрагенты.Строки.Найти(ЗначРодителя, "Контрагент", Ложь);
	Если СтрокаДерева <> Неопределено Тогда
		Возврат СтрокаДерева;
	КонецЕсли;
	
	Для Каждого Ветвь Из ВетвьКонтрагенты.Строки Цикл
		СтрокаДерева = Ветвь.Строки.Найти(ЗначРодителя, "Договор", Ложь);
		Если СтрокаДерева <> Неопределено Тогда
			Возврат СтрокаДерева;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено; // Не нашли

КонецФункции // НайтиВетвьРодителя()

Функция ЗаполнитьСписокВыбора(Родитель, ИмяПоля)

	ВетвьРодителя = НайтиВетвьРодителя(Родитель);

	Список = Новый СписокЗначений;
	Если ВетвьРодителя = Неопределено Тогда // Например очистили какое-либо поле.
		// Оставляем список пустым
	Иначе
		Для Каждого СтрокаДерева Из ВетвьРодителя.Строки Цикл
			Список.Добавить(СтрокаДерева[ИмяПоля], СтрокаДерева[ИмяПоля + "Представление"]);
		КонецЦикла;
	КонецЕсли;
	
	Если ЭлементыФормы.Найти("ПолеВвода" + ИмяПоля) <> Неопределено Тогда
		ЭлементыФормы["ПолеВвода" + ИмяПоля].СписокВыбора = Список;
		Если Список.Количество() = 0 Тогда
			ЭлементыФормы["ПолеВвода" + ИмяПоля].Значение = Неопределено;
		Иначе
			ЭлементыФормы["ПолеВвода" + ИмяПоля].Значение = Список[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Список;

КонецФункции // ЗаполнитьСписокВыбора()

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если НачальноеЗначениеВыбора = Неопределено Тогда
		Отказ = Истина; // Запрет интерактивного использования
	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	мТолькоОдинЗаказ = НачальноеЗначениеВыбора.ТолькоОдинЗаказ;
	мДеревоЗаказов   = НачальноеЗначениеВыбора.ДеревоЗаказов;
	ВетвьКонтрагенты = мДеревоЗаказов.Строки[0];
	
	ЗаполнитьСписокВыбора(Неопределено, "Контрагент");
	Если НачальноеЗначениеВыбора.Контрагент <> Неопределено Тогда
		ЭлементыФормы.ПолеВводаКонтрагент.Доступность = Ложь;
		ЭлементыФормы.ПолеВводаКонтрагент.Значение    = НачальноеЗначениеВыбора.Контрагент;
	КонецЕсли;
	
	ЗаполнитьСписокВыбора(Контрагент, "Договор");
	Если НачальноеЗначениеВыбора.Договор <> Неопределено Тогда
		ЭлементыФормы.ПолеВводаДоговор.Доступность = Ложь;
		ЭлементыФормы.ПолеВводаДоговор.Значение    = НачальноеЗначениеВыбора.Договор;
	КонецЕсли;
	
	СписокЗаказов = ЗаполнитьСписокВыбора(Договор, "Заказ");
	УстановитьПометкиВСпискеЗаказов();
	
КонецПроцедуры // ПриОткрытии()

Процедура ОсновныеДействияФормыОК(Кнопка)

	СтруктВозврат = Новый Структура;
	МассивЗаказы  = Новый Массив;
	Для Каждого ЭлемСписка Из СписокЗаказов Цикл
		Если ЭлемСписка.Пометка Тогда
			МассивЗаказы.Добавить(ЭлемСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СтруктВозврат.Вставить("Контрагент",  Контрагент);
	СтруктВозврат.Вставить("Договор",     Договор);
	СтруктВозврат.Вставить("Заказ",       МассивЗаказы);
	СтруктВозврат.Вставить("ВыборСделан", Истина);
	
	Закрыть(СтруктВозврат);
		
КонецПроцедуры

Процедура ПолеВводаКонтрагентНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВводаКонтрагентНачалоВыбора()

Процедура ПолеВводаКонтрагентОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВводаКонтрагентОчистка()

Процедура ПолеВводаДоговорНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВводаДоговорНачалоВыбора()

Процедура ПолеВводаДоговорОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВводаДоговорОчистка()

Процедура ПолеСпискаЗаказыПриИзмененииФлажка(Элемент)

	Если мТолькоОдинЗаказ Тогда
		ТекСтрока = Элемент.ТекущаяСтрока;
		Если ТекСтрока.Пометка Тогда // Тогда надо убедится что нет больше других пометок в списке
			Для Каждого ЭлемСписка Из СписокЗаказов Цикл
				Если ЭлемСписка.Пометка И ЭлемСписка <> ТекСтрока Тогда
					ЭлемСписка.Пометка = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
