Процедура ЗаполнитьСписокВыбора(ДокОснование, ТабЧасти, ТипыВозможныхЗаказов)

	Запрос = Новый Запрос;
	ТекстЗапроса = "";
	МетаДок = ДокОснование.Метаданные();
	Для Каждого ТабЧасть Из ТабЧасти Цикл
		
		УсловиеПоТипу = "";
		Для Каждого ВозможныйТип Из ТипыВозможныхЗаказов Цикл
			
			УсловиеПоТипу = УсловиеПоТипу + Символы.ПС+"И  ДокОснование." + ТабЧасть.Значение + " ССЫЛКА "+ ВозможныйТип.Значение;
			
		КонецЦикла;	
		
		ТипЗаказов = МетаДок.ТабличныеЧасти[ТабЧасть.Ключ].Реквизиты[ТабЧасть.Значение].Тип;
		МассивПустыхЗаказов = ОбщегоНазначения.МассивПустыхЗначений(ТипЗаказов);
		Запрос.УстановитьПараметр("ПустойЗаказ"+ТабЧасть.Ключ,МассивПустыхЗаказов);
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			    |
				|ОБЪЕДИНИТЬ ВСЕ
				|";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	" + ТабЧасть.Значение + " КАК Заказ,
			|	" + ТабЧасть.Значение + ".Представление КАК ЗаказПредставление
			|ИЗ
			|	Документ." + МетаДок.Имя + "." + ТабЧасть.Ключ + " КАК ДокОснование
			|ГДЕ
			|	ДокОснование.Ссылка = &ДокОснование
			|	" + УсловиеПоТипу + "
			|   И НЕ ДокОснование." + ТабЧасть.Значение + " В (&ПустойЗаказ"+ТабЧасть.Ключ+")";
	КонецЦикла;	
	
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Заказ,
		|	ЗаказПредставление
		|ИЗ
		|	(" + ТекстЗапроса + ") КАК Док
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказПредставление";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДокОснование", ДокОснование.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементыФормы.ПолеВводаЗаказ.СписокВыбора.Добавить(Выборка.Заказ, Выборка.ЗаказПредставление);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьСписокВыбора

Процедура ОсновныеДействияФормыОК(Кнопка)

	ВыбранноеЗначение = Заказ;
	ВыбраноЗначение = Истина;
	Закрыть();

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка, ЗаполнитьСписокВыбора)

	ВыбранноеЗначение = Неопределено;
	Если НачальноеЗначениеВыбора.ЗаполнитьСписокВыбора Тогда
		ЗаполнитьСписокВыбора(НачальноеЗначениеВыбора.Основание, НачальноеЗначениеВыбора.ТабЧасти, НачальноеЗначениеВыбора.ТипыВозможныхЗаказов);
	Иначе
		ЭлементыФормы.ПолеВводаЗаказ.СписокВыбора = НачальноеЗначениеВыбора.СписокВыбора;
	КонецЕсли;

	ВсегоЗаказов = ЭлементыФормы.ПолеВводаЗаказ.СписокВыбора.Количество();
	Если ВсегоЗаказов = 0 Тогда
		Отказ = Истина;
	ИначеЕсли ВсегоЗаказов = 1 Тогда
		ВыбранноеЗначение = ЭлементыФормы.ПолеВводаЗаказ.СписокВыбора.Получить(0).Значение;
		Отказ = Истина;
	Иначе
		Заказ = ЭлементыФормы.ПолеВводаЗаказ.СписокВыбора.Получить(0).Значение;
	КонецЕсли;

КонецПроцедуры


