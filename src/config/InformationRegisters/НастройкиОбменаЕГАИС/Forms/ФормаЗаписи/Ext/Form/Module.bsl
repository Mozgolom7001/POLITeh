
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Запись.ИдентификаторФСРАР) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИдентификаторФСРАР", Запись.ИдентификаторФСРАР);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОбменаЕГАИС.ОбработкаОбслуживания
		|ИЗ
		|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		|ГДЕ
		|	НастройкиОбменаЕГАИС.ИдентификаторФСРАР = &ИдентификаторФСРАР";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОбработкаОбслуживания = Выборка.ОбработкаОбслуживания.Получить();
			Если ОбработкаОбслуживания <> Неопределено Тогда
				АдресОбработкиОбслуживания = ПоместитьВоВременноеХранилище(ОбработкаОбслуживания, УникальныйИдентификатор);
				ВерсияОбработки = ПолучитьВерсиюОбработки(АдресОбработкиОбслуживания);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ИспользоватьОбработкуОбслуживания = НЕ ПустаяСтрока(АдресОбработкиОбслуживания);
	
	ТорговыйОбъект = НайтиТорговыйОбъект(Запись.ИдентификаторФСРАР);
	
	Если НЕ ПустаяСтрока(Запись.ИдентификаторФСРАР) Тогда
		ФорматОбмена = ИспользуемыйФорматОбмена(Запись.ИдентификаторФСРАР);
	Иначе
		ФорматОбмена = Перечисления.ФорматыОбменаЕГАИС.V1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьОбработкиОбслуживания();
	УстановитьЗаголовокОбработкиОбслуживания();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИспользоватьОбработкуОбслуживания Тогда
		ТекущийОбъект.ОбработкаОбслуживания = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресОбработкиОбслуживания));
	Иначе
		ТекущийОбъект.ОбработкаОбслуживания = Неопределено;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ФорматыОбменаЕГАИС.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИдентификаторФСРАР = Запись.ИдентификаторФСРАР;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() И МенеджерЗаписи.ФорматОбмена = ФорматОбмена Тогда
		ИзмененФорматОбмена = Ложь;
	Иначе
		ИзмененФорматОбмена = Истина;
		МенеджерЗаписи.ИдентификаторФСРАР = Запись.ИдентификаторФСРАР;
		МенеджерЗаписи.ФорматОбмена = ФорматОбмена;
		МенеджерЗаписи.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ИспользоватьОбработкуОбслуживания И ПустаяСтрока(АдресОбработкиОбслуживания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана обработка обслуживания.'"),,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если НЕ ИзмененФорматОбмена Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененФорматОбмена = Ложь;
	
	РезультатВопроса = Вопрос(НСтр("ru='Изменился формат обмена с ЕГАИС. Выгрузить информацию об изменении формата в УТМ?'"),
		РежимДиалогаВопрос.ДаНет);
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Массив;
	Отбор.Добавить(Новый Структура("Поле, Значение", "ИдентификаторФСРАР", Запись.ИдентификаторФСРАР));
	
	ДоступныеМодули = ИнтеграцияЕГАИСВызовСервера.ДоступныеТранспортныеМодули(Отбор);
	Если ДоступныеМодули.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТранспортныйМодуль = ДоступныеМодули[0];
	
	ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ИнформацияОФорматеОбмена");
	
	ВходныеПараметры = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ВходныеПараметры.ИдентификаторФСРАР = ТранспортныйМодуль.ИдентификаторФСРАР;
	ВходныеПараметры.ФорматОбмена = ТранспортныйМодуль.ФорматОбмена;
	
	Результат = ИнтеграцияЕГАИСКлиент.СформироватьИсходящийЗапрос(
		ВидДокумента,
		ВходныеПараметры,
		ТранспортныйМодуль);
		
	Если НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	Предупреждение(НСтр("ru='Информация об изменении формата обмена успешно выгружена в УТМ.'"), 10);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ИзмененФорматОбмена Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьОбработку(Команда)
	
	Если Не РаботаСДиалогами.ПоказатьПредупреждениеБезопасности(1) Тогда
		Возврат;
	КонецЕсли;

	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Фильтр = "Внешняя обработка (*.epf)|*.epf";
	ДиалогВыбора.Заголовок = НСтр("ru = 'Укажите файл'");
	
	Если НЕ ДиалогВыбора.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	АдресОбработкиОбслуживания = "";
	ПоместитьФайл(АдресОбработкиОбслуживания, ДиалогВыбора.ПолноеИмяФайла,, Ложь, УникальныйИдентификатор);
	ВерсияОбработки = ПолучитьВерсиюОбработки(АдресОбработкиОбслуживания);
	
	Модифицированность = Истина;
	
	УстановитьЗаголовокОбработкиОбслуживания();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбработку(Команда)
	
	Если ПустаяСтрока(АдресОбработкиОбслуживания) Тогда
		Возврат;
	КонецЕсли;
	
	ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохранения.ПолноеИмяФайла = "ОбработкаОбслуживанияЕГАИС";
	ДиалогСохранения.Фильтр = "Внешняя обработка (*.epf)|*.epf";
	ДиалогСохранения.Заголовок = НСтр("ru = 'Укажите файл'");
	
	Если НЕ ДиалогСохранения.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьФайл(АдресОбработкиОбслуживания, ДиалогСохранения.ПолноеИмяФайла, Ложь);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьОбработкуОбслуживанияПриИзменении(Элемент)
	
	УстановитьВидимостьОбработкиОбслуживания();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторФСРАРПриИзменении(Элемент)
	ТорговыйОбъект = НайтиТорговыйОбъект(Запись.ИдентификаторФСРАР);
	ФорматОбмена = ИспользуемыйФорматОбмена(Запись.ИдентификаторФСРАР);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьВидимостьОбработкиОбслуживания()
	
	Элементы.ГруппаОбработкаОбслуживания.Видимость = ИспользоватьОбработкуОбслуживания;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокОбработкиОбслуживания()
	
	ЦветТекста = Новый Цвет();
	ЦветОшибки = Новый Цвет(178, 34, 34);
	
	Подсказка = НСтр("ru = 'Используемая версия актуальна'");
	
	Если НЕ ПустаяСтрока(АдресОбработкиОбслуживания) Тогда
		НадписьВерсия = НСтр("ru = 'Версия: %1'");
		НадписьВерсия = СтрЗаменить(НадписьВерсия, "%1", ВерсияОбработки);
		
		Элементы.НадписьВерсияОбработкиОбслуживания.Заголовок = НадписьВерсия;
		Если ИнтеграцияЕГАИСКлиентСервер.СравнитьВерсии(ВерсияОбработки, ИнтеграцияЕГАИСКлиентСервер.ВерсияПодсистемыЕГАИС()) < 0 Тогда
			ЦветТекста = ЦветОшибки;
			Подсказка = НСтр("ru = 'Используется устаревшая версия обработки'");
		КонецЕсли;
	Иначе
		Элементы.НадписьВерсияОбработкиОбслуживания.Заголовок = НСтр("ru = 'Версия: <не выбрана>'");
		ЦветТекста = ЦветОшибки;
		Подсказка = НСтр("ru = 'Загрузите обработку из файла командой ""Загрузить обработку""'");
	КонецЕсли;
	
	Элементы.НадписьВерсияОбработкиОбслуживания.ЦветТекста = ЦветТекста;
	Элементы.НадписьВерсияОбработкиОбслуживания.Подсказка = Подсказка;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВерсиюОбработки(Адрес)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Попытка
		Обработка = ВнешниеОбработки.Создать(ИмяВременногоФайла);
		Сведения  = Обработка.СведенияОВнешнейОбработке();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось получить сведения о внешней обработке.'") + Символы.ПС + КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат "";
	КонецПопытки;
	
	Возврат Сведения.Версия;
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиТорговыйОбъект(ИдентификаторФСРАР)
	ТО = Справочники.КлассификаторОрганизацийЕГАИС.НайтиПоКоду(ИдентификаторФСРАР);
	Возврат ТО;
КонецФункции

&НаКлиенте
Процедура СкладОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение.ВидСклада = ПредопределенноеЗначение("Перечисление.ВидыСкладов.НТТ") Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Использование складов с видом ""НТТ"" не поддерживается.");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуемыйФорматОбмена(ИдентификаторФСРАР)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторФСРАР", ИдентификаторФСРАР);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФорматыОбменаЕГАИС.ФорматОбмена КАК ФорматОбмена
	|ИЗ
	|	РегистрСведений.ФорматыОбменаЕГАИС КАК ФорматыОбменаЕГАИС
	|ГДЕ
	|	ФорматыОбменаЕГАИС.ИдентификаторФСРАР = &ИдентификаторФСРАР";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат РезультатЗапроса.Выгрузить()[0].ФорматОбмена;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
