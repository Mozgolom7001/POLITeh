// Процедура управляет доступностью элементов в форме.
//
Процедура УправлениеДиалогом()

	ЭлементыФормы.ИспользоватьНакопительныеСкидкиПоДисконтнымКартам.Видимость = ИспользоватьСкидкиПоДисконтнойКарте;

	ВидимостьНакопительныхСкидок = (ИспользоватьСкидкиПоДисконтнойКарте И ИспользоватьНакопительныеСкидкиПоДисконтнымКартам);

	ЭлементыФормы.СпособИспользованияНакопительныхСкидок.Видимость = ВидимостьНакопительныхСкидок;
	ЭлементыФормы.НадписьСпособИспользованияНакопительныхСкидок.Видимость = ВидимостьНакопительныхСкидок;

	ЭлементыФормы.ПериодичностьРасчетаНакопленияСкидок.Видимость = ВидимостьНакопительныхСкидок;
	ЭлементыФормы.НадписьПериодичностьРасчетаНакопленияСкидок.Видимость = ВидимостьНакопительныхСкидок;

	ЭлементыФормы.АнализироватьПрошлыйПериодНакопленияСкидок.Видимость = ВидимостьНакопительныхСкидок
	   И ПериодичностьРасчетаНакопленияСкидок <> Перечисления.ПериодичностьНакопленияСкидок.ВТечениеВсегоПериода;

КонецПроцедуры // УправлениеДиалогом()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" флажка "ИспользоватьСкидкиПоДисконтнойКарте".
//
Процедура ИспользоватьСкидкиПоДисконтнойКартеПриИзменении(Элемент)

	УправлениеДиалогом();

КонецПроцедуры // ИспользоватьСкидкиПоДисконтнойКартеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИспользоватьНакопительныеСкидкиПоДисконтнымКартамПриИзменении".
//
Процедура ИспользоватьНакопительныеСкидкиПоДисконтнымКартамПриИзменении(Элемент)

	УправлениеДиалогом();

КонецПроцедуры // ИспользоватьНакопительныеСкидкиПоДисконтнымКартамПриИзменении()

// Процедура - обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)

	ЗаголовокСообщения = "Учетная политика";

	Если ИспользоватьНакопительныеСкидкиПоДисконтнымКартам Тогда
		Если НЕ ЗначениеЗаполнено(СпособИспользованияНакопительныхСкидок) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("На закладке ""Скидки"" не пополнено поле ""Способ использования накопительных скидок""", Отказ, ЗаголовокСообщения);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ПериодичностьРасчетаНакопленияСкидок) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("На закладке ""Скидки"" не пополнено поле ""Периодичность расчета накопления скидок""", Отказ, ЗаголовокСообщения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПриИзменении" реквизита "ПериодичностьРасчетаНакопленияСкидок".
//
Процедура ПериодичностьРасчетаНакопленияСкидокПриИзменении(Элемент)

	УправлениеДиалогом();

КонецПроцедуры // ПериодичностьРасчетаНакопленияСкидокПриИзменении()
