Перем СписокКБ;
Перем СписокКодировок;
Перем мВалютаРегламентированногоУчета;




Процедура РегистрСведенийСписокФайлВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогФыбораФайла.Фильтр                      = "Текстовый файл (*.txt)|*.txt";
	ДиалогФыбораФайла.Заголовок                   = "Выберите файл для выгрузки данных из клиента банка";
	ДиалогФыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогФыбораФайла.Расширение                  = "txt";
	ДиалогФыбораФайла.ИндексФильтра               = 0;
	ДиалогФыбораФайла.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла = ложь;
	
	Если ДиалогФыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогФыбораФайла.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

Процедура РегистрСведенийСписокФайдЗагрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогФыбораФайла.Фильтр                      = "Текстовый файл (*.txt)|*.txt";
	ДиалогФыбораФайла.Заголовок                   = "Выберите файл для загрузки данных из клиента банка";
	ДиалогФыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогФыбораФайла.Расширение                  = "txt";
	ДиалогФыбораФайла.ИндексФильтра               = 0;
	ДиалогФыбораФайла.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогФыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогФыбораФайла.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

Процедура РегистрСведенийСписокПрограммаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора = СписокКБ;

КонецПроцедуры

Процедура РегистрСведенийСписокКодировкаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора = СписокКодировок;

КонецПроцедуры

Процедура РегистрСведенийСписокФайдЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФайлНаДиске = Новый Файл(Элемент.Значение);
	Если Не ФайлНаДиске.Существует() Тогда
		Предупреждение("Не найден файл!");
		Возврат;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент();
	Если ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.Кодировка = "DOS" Тогда
		Кодир = КодировкаТекста.OEM;
	Иначе
		Кодир = КодировкаТекста.ANSI;
	КонецЕсли;
	Текст.Прочитать(Элемент.Значение, Кодир);
	Текст.Показать(Элемент.Значение,Элемент.Значение);

	
КонецПроцедуры

Процедура РегистрСведенийСписокБанковскийСчетПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.БанковскийСчет) Тогда
		ТекущиеДанные.Организация = ТекущиеДанные.БанковскийСчет.Владелец;
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрСведенийСписокОрганизацияПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Организация) Тогда
		УправлениеДенежнымиСредствами.УстановитьБанковскийСчет(ТекущиеДанные.БанковскийСчет,ТекущиеДанные.Организация, мВалютаРегламентированногоУчета); 
	КонецЕсли;

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.ПараметрОтборПоИзмерению<>неопределено И ЭтаФорма.ПараметрОтборПоИзмерению.Свойство("БанковскийСчет") Тогда
		ОтборПоБанковскомуСчету = ЭтаФорма.ПараметрОтборПоИзмерению.БанковскийСчет;
		Если ТипЗнч(ОтборПоБанковскомуСчету.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
			Предупреждение("Настройка обмена данными производится только для счетов организаций.");
			Отказ=Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры



	СписокКБ = Новый СписокЗначений;
	СписокКБ.Добавить("АРМ ""Клиент"" АС ""Клиент-Сбербанк"" Сбербанка России");
	СписокКБ.Добавить("""АРМ удаленного клиента СПЭД""  ВКФ АО ""Банк ТуранАлем""");
	СписокКБ.Добавить("Банк-клиент АКБ ""Лефко-Банк""");
	СписокКБ.Добавить("ИНИСТ Банк-Клиент ЗАО ИНИСТ");
	СписокКБ.Добавить("Клиент банка InterBank v.5.1 R-Style Software Lab");
	СписокКБ.Добавить("Клиент-банк ""BARS"" фирмы ""Оникс Капитал""");
	СписокКБ.Добавить("Клиент-Банк ""ВЕДАНА""");
	СписокКБ.Добавить("Клиент-банк МИБ");
	СписокКБ.Добавить("Клиент-Банк ОАО ""Прио-Внешторгбанк""");	
	СписокКБ.Добавить("Клиент-Банк РФК");
	СписокКБ.Добавить("""Клиент-ТЕЛЕБАНК"" АОЗТ Степ Ап");
	СписокКБ.Добавить("Комплекс обмена платежными документами Курьер. АОЗТ АстраСофт");
	СписокКБ.Добавить("Система ""iBank 2"" ООО ""БИФИТ""");
	СписокКБ.Добавить("Система ""MailBank"" фирмы ""Системные технологии"" Минск");
	СписокКБ.Добавить("Система ""PSB On-Line"" ОАО ""ПРОМСВЯЗЬБАНК""");
	СписокКБ.Добавить("Система ""Клиент-Банк Плюс"" ОАО ""Уралвнешторгбанка""");
	СписокКБ.Добавить("Система ""Клиент-Банк"" АРМ ""Украина-Клиент""");
	СписокКБ.Добавить("Система ""Клиент-Банк"" ЗАО ""Банк ""Новый Символ""");
	СписокКБ.Добавить("Система Банк-Клиент АКБ ""София""");
	СписокКБ.Добавить("Система ДБО BS-Client");
	СписокКБ.Добавить("Система Клиент-Банк ""BClient""");
	СписокКБ.Добавить("Система клиент-банк TIVAL");
	СписокКБ.Добавить("Система клиент-банк ""Электронный Офис"" ЗАО ""Райффайзенбанк""");
	СписокКБ.Добавить("Система электронных расчетов QuickPay ЗАО АО Кворум");
	СписокКБ.Добавить("ЦФТ - Интернет-банк (Faktura.ru)");
	СписокКБ.Добавить("""Электронный клиент"" АКБ Автобанк");
	СписокКБ.Добавить("""Электронный Офис"" фирмы ""ИМПЭКСБАНК""");
	СписокКБ.Добавить("DiasoftCLIENT 4x4 for Windows Диасофт");
	СписокКБ.Добавить("LanVisit DOS 4.90 Ланит");
	СписокКБ.Добавить("On-Soft Клиент-Банк КБ ""ЛОКО-Банк""");
	СписокКБ.Добавить("WinClient фирмы МПИ-Банк");
	СписокКБ.Добавить("""Yugo-Vostok Online"" ОАО БАНК ""ЮГО-ВОСТОК""");	

	
	СписокКодировок = Новый СписокЗначений;
	СписокКодировок.Добавить("DOS");
	СписокКодировок.Добавить("Windows");
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

