Перем мИспользоватьХарактеристики;
Перем мИспользоватьСерии;

// Процедура управляет видимостью на форме.
//
Процедура УстановитьВидимость()

	ЭлементыФормы.ИспользоватьХарактеристики.Видимость = мИспользоватьХарактеристики;
	ЭлементыФормы.ИспользоватьСерии.Видимость          = мИспользоватьСерии;

КонецПроцедуры // УстановитВидимость()

// Процедура заполняет построитель отчета.
//
Процедура ЗаполнитьПостроительОтчета()

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ном.*
	|ИЗ
	|	(
	|";

	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|";

	Если ИспользоватьЕдиницыИзмерения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(СпрЕдиницы.Ссылка, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрНоменклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
		|";
	КонецЕсли;

	Если ИспользоватьКачество Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрКачество.Ссылка КАК Качество,
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
		|";
	КонецЕсли;

	Если ИспользоватьХарактеристики Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(СпрХарактеристики.Ссылка, СпрНоменклатура.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрНоменклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|";
	КонецЕсли;

	Если ИспользоватьСерии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(СпрСерии.Ссылка, СпрНоменклатура.СерияНоменклатуры) КАК СерияНоменклатуры
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрНоменклатура.СерияНоменклатуры КАК СерияНоменклатуры
		|";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	(ВЫБРАТЬ
	|		СпрНоменклатура.Ссылка КАК Ссылка,
	|		СпрНоменклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры
	|	ИЗ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ГДЕ
	|		НЕ СпрНоменклатура.ЭтоГруппа
	|		{ГДЕ СпрНоменклатура.Ссылка.* КАК Номенклатура}
	|	) КАК СпрНоменклатура
	|";

	Если ИспользоватьЕдиницыИзмерения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.ЕдиницыИзмерения КАК СпрЕдиницы
		|ПО
		|	СпрЕдиницы.Владелец = СпрНоменклатура.Ссылка
		|";
	КонецЕсли;

	Если ИспользоватьКачество Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.Качество КАК СпрКачество
		|ПО
		|	СпрКачество.Ссылка = ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|	ИЛИ НЕ (СпрНоменклатура.Ссылка.Услуга
		|	Или СпрНоменклатура.Ссылка.Набор
		|	Или СпрНоменклатура.Ссылка.Комплект)
		|";
	КонецЕсли;

	Если ИспользоватьХарактеристики Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		СпрХарактеристики.Ссылка КАК Ссылка,
		|		СпрХарактеристики.Владелец КАК Владелец
		|	ИЗ
		|		Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
		|	ОБЪЕДИНИТЬ
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|		NULL
		|	)КАК СпрХарактеристики
		|ПО
		|	СпрХарактеристики.Владелец = СпрНоменклатура.Ссылка
		|	ИЛИ СпрХарактеристики.Ссылка = СпрНоменклатура.ХарактеристикаНоменклатуры
		|";
	КонецЕсли;

	Если ИспользоватьСерии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		СпрСерии.Ссылка КАК Ссылка,
		|		СпрСерии.Владелец КАК Владелец
		|	ИЗ
		|		Справочник.СерииНоменклатуры КАК СпрСерии
		|	ОБЪЕДИНИТЬ
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		NULL
		|	)КАК СпрСерии
		|ПО
		|	СпрСерии.Владелец = СпрНоменклатура.Ссылка
		|	ИЛИ СпрСерии.Ссылка = СпрНоменклатура.СерияНоменклатуры
		|";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|) КАК Ном
	|";

	ТекстЗапроса = ТекстЗапроса + "
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ШтрихКоды КАК ШтрихКоды
	|ПО
	|	ШтрихКоды.Владелец = Ном.Номенклатура
	|	И ШтрихКоды.ХарактеристикаНоменклатуры = Ном.ХарактеристикаНоменклатуры
	|	И ШтрихКоды.СерияНоменклатуры = Ном.СерияНоменклатуры
	|	И ШтрихКоды.ЕдиницаИзмерения = Ном.ЕдиницаИзмерения
	|	И ШтрихКоды.Качество = Ном.Качество
	|";

	Если ТолькоИмеющиесяВНаличии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		РегТоварыНаСкладах.Номенклатура КАК Номенклатура,
		|		РегТоварыНаСкладах.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		РегТоварыНаСкладах.СерияНоменклатуры КАК СерияНоменклатуры,
		|		РегТоварыНаСкладах.Качество КАК Качество,
		|		РегТоварыНаСкладах.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.* КАК Номенклатура,
		|		   Склад.* КАК Склад}) КАК РегТоварыНаСкладах
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		РегТоварыВНТТ.Номенклатура КАК Номенклатура,
		|		РегТоварыВНТТ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		РегТоварыВНТТ.СерияНоменклатуры КАК СерияНоменклатуры,
		|		ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
		|		РегТоварыВНТТ.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыВНТТ.Остатки(, {Номенклатура.* КАК Номенклатура,
		|		   Склад.* КАК Склад}) КАК РегТоварыВНТТ
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		РегТоварыВРознице.Номенклатура КАК Номенклатура,
		|		РегТоварыВРознице.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		РегТоварыВРознице.СерияНоменклатуры КАК СерияНоменклатуры,
		|		РегТоварыВРознице.Качество КАК Качество,
		|		РегТоварыВРознице.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыВРознице.Остатки(, {Номенклатура.* КАК Номенклатура,
		|		   Склад.* КАК Склад}) КАК РегТоварыВРознице
		|	) КАК Остатки
		|ПО
		|	Остатки.Номенклатура = Ном.Номенклатура
		|	И Остатки.ХарактеристикаНоменклатуры = Ном.ХарактеристикаНоменклатуры
		|	И Остатки.СерияНоменклатуры = Ном.СерияНоменклатуры
		|	И Остатки.Качество = Ном.Качество
		|ГДЕ
		|	(ЕСТЬNULL(Остатки.Количество, 0) > 0
		|	ИЛИ Ном.Номенклатура.Услуга)
		|	И ШтрихКоды.Качество ЕСТЬ NULL
		//|	И Не Ном.Номенклатура.Набор
		|	И Не Ном.Номенклатура.Весовой
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	ШтрихКоды.Качество ЕСТЬ NULL
		//|	И Не Ном.Номенклатура.Набор
		|	И Не Ном.Номенклатура.Весовой
		|";
	КонецЕсли;

	ПостроительОтчета.Текст = ТекстЗапроса;

	ПостроительОтчета.ЗаполнитьНастройки();

	// Создадим список доступных отборов.
	СоответствиеДоступныхОтборов = Новый Соответствие;
	СоответствиеДоступныхОтборов.Вставить("Номенклатура", 0);
	СоответствиеДоступныхОтборов.Вставить("Склад", 0);

	Для Каждого ДоступноеПоле Из ПостроительОтчета.ДоступныеПоля Цикл
		Если СоответствиеДоступныхОтборов[ДоступноеПоле.Имя] = Неопределено Тогда
			ДоступноеПоле.Отбор = Ложь;
		Иначе
			ДоступноеПоле.Отбор = Истина;
		КонецЕсли;
	КонецЦикла;

	// Создадим массив отборов.
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Номенклатура");

	Если ТолькоИмеющиесяВНаличии Тогда
		МассивОтбора.Добавить("Склад");
	КонецЕсли;

	Для Каждого ЭлементОтбора Из МассивОтбора Цикл
		Если ПостроительОтчета.Отбор.Найти(ЭлементОтбора) = Неопределено Тогда
			ПостроительОтчета.Отбор.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПостроительОтчета()

// Обработчик события "Нажатие" кнопки "Заполнить".
//
Процедура ОсновныеДействияФормыЗаполнить(Кнопка)

	Результат = ПостроительОтчета.Результат;

	Закрыть(Результат);

КонецПроцедуры // ОсновныеДействияФормыЗаполнить()

// Обработчик события "ПриИзменении" флажка "ИспользоватьЕдиницыИзмерения".
//
Процедура ИспользоватьЕдиницыИзмеренияПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ИспользоватьЕдиницыИзмеренияПриИзменении()

// Обработчик события "ПриИзменении" флажка "ИспользоватьХарактеристики".
//
Процедура ИспользоватьХарактеристикиПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ИспользоватьХарактеристикиПриИзменении()

// Обработчик события "ПриИзменении" флажка "ИспользоватьСерии".
//
Процедура ИспользоватьСерииПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ИспользоватьСерииПриИзменении()

// Обработчик события "ПриИзменении" флажка "ТолькоИмеющиесяВНаличии".
//
Процедура ТолькоИмеющиесяВНаличииПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ТолькоИмеющиесяВНаличииПриИзменении()

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Перем НастройкиПостроителя;

	СтруктураНастроек = ВосстановитьЗначение("РегистрСведений.ШтрихКоды.ФормаЗаполнения.Настройки");
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		СтруктураНастроек.Свойство("ИспользоватьЕдиницыИзмерения", ИспользоватьЕдиницыИзмерения);
		СтруктураНастроек.Свойство("ИспользоватьКачество", ИспользоватьКачество);
		СтруктураНастроек.Свойство("ИспользоватьХарактеристики", ИспользоватьХарактеристики);
		СтруктураНастроек.Свойство("ИспользоватьСерии", ИспользоватьСерии);
		СтруктураНастроек.Свойство("ТолькоИмеющиесяВНаличии", ТолькоИмеющиесяВНаличии);
		СтруктураНастроек.Свойство("НастройкиПостроителя", НастройкиПостроителя);
	КонецЕсли;

	Если Не мИспользоватьХарактеристики Тогда
		ИспользоватьХарактеристики = Ложь;
	КонецЕсли;

	Если Не мИспользоватьСерии Тогда
		ИспользоватьСерии = Ложь;
	КонецЕсли;

	ЗаполнитьПостроительОтчета();

	Если НастройкиПостроителя <> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя);
	КонецЕсли;

	УстановитьВидимость();

КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()

	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьЕдиницыИзмерения", ИспользоватьЕдиницыИзмерения);
	СтруктураНастроек.Вставить("ИспользоватьКачество", ИспользоватьКачество);
	СтруктураНастроек.Вставить("ИспользоватьХарактеристики", ИспользоватьХарактеристики);
	СтруктураНастроек.Вставить("ИспользоватьСерии", ИспользоватьСерии);
	СтруктураНастроек.Вставить("ТолькоИмеющиесяВНаличии", ТолькоИмеющиесяВНаличии);
	СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь));

	СохранитьЗначение("РегистрСведений.ШтрихКоды.ФормаЗаполнения.Настройки", СтруктураНастроек);

КонецПроцедуры // ПриЗакрытии()

мИспользоватьХарактеристики = глЗначениеПеременной("ИспользоватьХарактеристикиНоменклатуры");
мИспользоватьСерии          = глЗначениеПеременной("ИспользоватьСерииНоменклатуры");
