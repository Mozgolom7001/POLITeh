Перем мИспользоватьХарактеристики;
Перем мИспользоватьСерии;

// Проверяет, что ни один источник данных не выбран.
//
//
// Возвращаемое значение:
//  Истина, если не выбрано ни одного источника данных.
//
Функция ИсточникиДанныхНеВыбраны()

	Результат = Не(ЗаполнитьПоШтрихКодам Или ЗаполнитьПоКодамВесовогоТовара Или ЗаполнитьПоСправочникуНоменклатуры);

	Возврат Результат;

КонецФункции // ИсточникиДанныхНеВыбраны()

// Процедура управляет видимостью на форме.
//
Процедура УстановитьВидимость()

	ЭлементыФормы.ИспользоватьХарактеристики.Видимость     = мИспользоватьХарактеристики;
	ЭлементыФормы.ИспользоватьСерии.Видимость              = мИспользоватьСерии;

	ЭлементыФормы.ИспользоватьЕдиницыИзмерения.Доступность = ЗаполнитьПоСправочникуНоменклатуры;
	ЭлементыФормы.ИспользоватьХарактеристики.Доступность   = ЗаполнитьПоСправочникуНоменклатуры;
	ЭлементыФормы.ИспользоватьСерии.Доступность            = ЗаполнитьПоСправочникуНоменклатуры;

	ЭлементыФормы.ТолькоИмеющиесяВНаличии.Доступность      = Не ИсточникиДанныхНеВыбраны();

КонецПроцедуры // УстановитВидимость()

// Процедура заполняет построитель отчета.
//
Процедура ЗаполнитьПостроительОтчета()

	ПостроительОтчета.Параметры.Вставить("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	ПостроительОтчета.Параметры.Вставить("КассыККМ", КассыККМ);

	Если ИсточникиДанныхНеВыбраны() Тогда
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	0
		|";
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ном.*,
		|	СпрКассы.Ссылка КАК Касса
		|ИЗ
		|	(
		|";

		Если ЗаполнитьПоШтрихКодам Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	РегШтрихКоды.Владелец КАК Номенклатура,
			|	РегШтрихКоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	РегШтрихКоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	РегШтрихКоды.СерияНоменклатуры КАК СерияНоменклатуры
			|ИЗ
			|	РегистрСведений.Штрихкоды КАК РегШтрихКоды
			|ГДЕ
			|	РегШтрихКоды.Владелец Ссылка Справочник.Номенклатура
			|{ГДЕ РегШтрихКоды.Владелец.* КАК Номенклатура}
			|";
		КонецЕсли;

		Если ЗаполнитьПоКодамВесовогоТовара Тогда
			Если ЗаполнитьПоШтрихКодам Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ОБЪЕДИНИТЬ";
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	РегВесовыеКоды.Номенклатура КАК Номенклатура,
			|	РегВесовыеКоды.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
			|	РегВесовыеКоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	РегВесовыеКоды.СерияНоменклатуры КАК СерияНоменклатуры
			|ИЗ
			|	РегистрСведений.КодыВесовогоТовара КАК РегВесовыеКоды
			|{ГДЕ РегВесовыеКоды.Номенклатура.* КАК Номенклатура}
			|";
		КонецЕсли;

		Если ЗаполнитьПоСправочникуНоменклатуры Тогда
			Если ЗаполнитьПоШтрихКодам Или ЗаполнитьПоКодамВесовогоТовара Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ОБЪЕДИНИТЬ";
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	СпрНоменклатура.Ссылка КАК Номенклатура,
			|";

			Если ИспользоватьЕдиницыИзмерения Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|	СпрЕдиницы.Ссылка КАК ЕдиницаИзмерения,
				|";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|	СпрНоменклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
				|";
			КонецЕсли;

			Если ИспользоватьХарактеристики Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|	ЕСТЬNULL(СпрХарактеристики.Ссылка, СпрНоменклатура.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
				|";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|	СпрНоменклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				|";
			КонецЕсли;

			Если ИспользоватьСерии Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|	ЕСТЬNULL(СпрСерии.Ссылка, СпрНоменклатура.СерияНоменклатуры) КАК СерияНоменклатуры
				|";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|	СпрНоменклатура.СерияНоменклатуры КАК СерияНоменклатуры
				|";
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|ИЗ
			|	(ВЫБРАТЬ
			|		СпрНоменклатура.Ссылка КАК Ссылка,
			|		СпрНоменклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
			|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
			|		&ПустаяСерия КАК СерияНоменклатуры
			|	ИЗ
			|		Справочник.Номенклатура КАК СпрНоменклатура
			|	ГДЕ
			|		НЕ СпрНоменклатура.ЭтоГруппа
			|		{ГДЕ СпрНоменклатура.Ссылка.* КАК Номенклатура}
			|	) КАК СпрНоменклатура
			|";

			Если ИспользоватьЕдиницыИзмерения Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|	Справочник.ЕдиницыИзмерения КАК СпрЕдиницы
				|ПО
				|	СпрЕдиницы.Владелец = СпрНоменклатура.Ссылка
				|";
			КонецЕсли;

			Если ИспользоватьХарактеристики Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|	(ВЫБРАТЬ
				|		СпрХарактеристики.Ссылка КАК Ссылка,
				|		СпрХарактеристики.Владелец КАК Владелец
				|	ИЗ
				|		Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
				|	ОБЪЕДИНИТЬ
				|	ВЫБРАТЬ
				|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
				|		NULL
				|	)КАК СпрХарактеристики
				|ПО
				|	СпрХарактеристики.Владелец = СпрНоменклатура.Ссылка
				|	ИЛИ СпрХарактеристики.Ссылка = СпрНоменклатура.ХарактеристикаНоменклатуры
				|";
			КонецЕсли;

			Если ИспользоватьСерии Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|	(ВЫБРАТЬ
				|		СпрСерии.Ссылка КАК Ссылка,
				|		СпрСерии.Владелец КАК Владелец
				|	ИЗ
				|		Справочник.СерииНоменклатуры КАК СпрСерии
				|	ОБЪЕДИНИТЬ
				|	ВЫБРАТЬ
				|		&ПустаяСерия,
				|		NULL
				|	)КАК СпрСерии
				|ПО
				|	СпрСерии.Владелец = СпрНоменклатура.Ссылка
				|	ИЛИ СпрСерии.Ссылка = СпрНоменклатура.СерияНоменклатуры
				|";
			КонецЕсли;
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|) КАК Ном
		|";

		ТекстЗапроса = ТекстЗапроса + "
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.КассыККМ КАК СпрКассы
		|ПО
		|	СпрКассы.Ссылка В (&КассыККМ)
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ТоварыНаККМ КАК ТоварыНаККМ
		|ПО
		|	ТоварыНаККМ.Номенклатура = Ном.Номенклатура
		|	И ТоварыНаККМ.ХарактеристикаНоменклатуры = Ном.ХарактеристикаНоменклатуры
		|	И ТоварыНаККМ.СерияНоменклатуры = Ном.СерияНоменклатуры
		|	И ТоварыНаККМ.ЕдиницаИзмерения = Ном.ЕдиницаИзмерения
		|	И ТоварыНаККМ.КассаККМ = СпрКассы.Ссылка
		|";

		Если ТолькоИмеющиесяВНаличии Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(ВЫБРАТЬ
			|		Остатки.Номенклатура КАК Номенклатура,
			|		Остатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|		Остатки.СерияНоменклатуры КАК СерияНоменклатуры,
			|		СУММА(Остатки.Количество) КАК Количество
			|	ИЗ
			|		(ВЫБРАТЬ
			|			РегТоварыНаСкладах.Номенклатура КАК Номенклатура,
			|			РегТоварыНаСкладах.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|			РегТоварыНаСкладах.СерияНоменклатуры КАК СерияНоменклатуры,
			|			РегТоварыНаСкладах.КоличествоОстаток КАК Количество
			|		ИЗ
			|			РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.* КАК Номенклатура,
			|			   Склад.* КАК Склад}) КАК РегТоварыНаСкладах
			|		ОБЪЕДИНИТЬ ВСЕ
			|		ВЫБРАТЬ
			|			РегТоварыВРознице.Номенклатура КАК Номенклатура,
			|			РегТоварыВРознице.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|			РегТоварыВРознице.СерияНоменклатуры КАК СерияНоменклатуры,
			|			РегТоварыВРознице.КоличествоОстаток КАК Количество
			|		ИЗ
			|			РегистрНакопления.ТоварыВРознице.Остатки(, {Номенклатура.* КАК Номенклатура,
			|			   Склад.* КАК Склад}) КАК РегТоварыВРознице
			|		) КАК Остатки
			|	СГРУППИРОВАТЬ ПО
			|		Остатки.Номенклатура,
			|		Остатки.ХарактеристикаНоменклатуры,
			|		Остатки.СерияНоменклатуры
			|	) КАК Остатки
			|ПО
			|	Остатки.Номенклатура = Ном.Номенклатура
			|	И Остатки.ХарактеристикаНоменклатуры = Ном.ХарактеристикаНоменклатуры
			|	И Остатки.СерияНоменклатуры = Ном.СерияНоменклатуры
			|ГДЕ
			|	(ЕСТЬNULL(Остатки.Количество, 0) > 0
			|	ИЛИ Ном.Номенклатура.Услуга)
			|	И ТоварыНаККМ.Номенклатура ЕСТЬ NULL
			|	И Не Ном.Номенклатура.Набор
			|";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	ТоварыНаККМ.Номенклатура ЕСТЬ NULL
			|	И Не Ном.Номенклатура.Набор
			|";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|";
	КонецЕсли;

	ПостроительОтчета.Текст = ТекстЗапроса;

	ПостроительОтчета.ЗаполнитьНастройки();

	// Создадим список доступных отборов.
	СоответствиеДоступныхОтборов = Новый Соответствие;
	СоответствиеДоступныхОтборов.Вставить("Номенклатура", 0);
	СоответствиеДоступныхОтборов.Вставить("Склад", 0);

	Для Каждого ДоступноеПоле Из ПостроительОтчета.ДоступныеПоля Цикл
		Если СоответствиеДоступныхОтборов[ДоступноеПоле.Имя] = Неопределено Тогда
			ДоступноеПоле.Отбор = Ложь;
		Иначе
			ДоступноеПоле.Отбор = Истина;
		КонецЕсли;
	КонецЦикла;

	// Создадим массив отборов.
	МассивОтбора = Новый Массив;

	Если Не ИсточникиДанныхНеВыбраны() Тогда
		МассивОтбора.Добавить("Номенклатура");

		Если ТолькоИмеющиесяВНаличии Тогда
			МассивОтбора.Добавить("Склад");
		КонецЕсли;
	КонецЕсли;

	Для Каждого ЭлементОтбора Из МассивОтбора Цикл
		Если ПостроительОтчета.Отбор.Найти(ЭлементОтбора) = Неопределено Тогда
			ПостроительОтчета.Отбор.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПостроительОтчета()

// Обработчик события "Нажатие" кнопки "Заполнить".
//
Процедура ОсновныеДействияФормыЗаполнить(Кнопка)

	Если ИсточникиДанныхНеВыбраны() Тогда
		Предупреждение("Не выбрано ни одного источника данных!");
		Возврат;
	КонецЕсли;

	Если КассыККМ.Количество() = 0 Тогда
		Предупреждение("Не выбрана касса ККМ!");
		Возврат;
	КонецЕсли;

	ЗаполнитьПостроительОтчета();

	Результат = ПостроительОтчета.Результат;

	Закрыть(Результат);

КонецПроцедуры // ОсновныеДействияФормыЗаполнить()

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Перем НастройкиПостроителя;

	СтруктураНастроек = ВосстановитьЗначение("РегистрСведений.ТоварыНаККМ.ФормаЗаполнения.Настройки");
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		СтруктураНастроек.Свойство("ЗаполнитьПоШтрихКодам", ЗаполнитьПоШтрихКодам);
		СтруктураНастроек.Свойство("ЗаполнитьПоКодамВесовогоТовара", ЗаполнитьПоКодамВесовогоТовара);
		СтруктураНастроек.Свойство("ЗаполнитьПоСправочникуНоменклатуры", ЗаполнитьПоСправочникуНоменклатуры);
		СтруктураНастроек.Свойство("ИспользоватьЕдиницыИзмерения", ИспользоватьЕдиницыИзмерения);
		СтруктураНастроек.Свойство("ИспользоватьХарактеристики", ИспользоватьХарактеристики);
		СтруктураНастроек.Свойство("ИспользоватьСерии", ИспользоватьСерии);
		СтруктураНастроек.Свойство("ТолькоИмеющиесяВНаличии", ТолькоИмеющиесяВНаличии);
		СтруктураНастроек.Свойство("НастройкиПостроителя", НастройкиПостроителя);
		СтруктураНастроек.Свойство("КассыККМ", КассыККМ);
	КонецЕсли;

	Если Не мИспользоватьХарактеристики Тогда
		ИспользоватьХарактеристики = Ложь;
	КонецЕсли;

	Если Не мИспользоватьСерии Тогда
		ИспользоватьСерии = Ложь;
	КонецЕсли;

	ЗаполнитьПостроительОтчета();

	Если НастройкиПостроителя <> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя);
	КонецЕсли;

	УстановитьВидимость();

КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПриИзменении" флажка "ЗаполнитьПоСправочникуНоменклатуры".
//
Процедура ЗаполнитьПоСправочникуНоменклатурыПриИзменении(Элемент)

	Если Не ЗаполнитьПоСправочникуНоменклатуры Тогда
		ИспользоватьЕдиницыИзмерения = Ложь;
		ИспользоватьХарактеристики   = Ложь;
		ИспользоватьСерии            = Ложь;
	КонецЕсли;

	Если ИсточникиДанныхНеВыбраны() Тогда
		ТолькоИмеющиесяВНаличии = Ложь;
	КонецЕсли;

	УстановитьВидимость();

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ЗаполнитьПоСправочникуНоменклатурыПриИзменении()

// Обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()

	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ЗаполнитьПоШтрихКодам", ЗаполнитьПоШтрихКодам);
	СтруктураНастроек.Вставить("ЗаполнитьПоКодамВесовогоТовара", ЗаполнитьПоКодамВесовогоТовара);
	СтруктураНастроек.Вставить("ЗаполнитьПоСправочникуНоменклатуры", ЗаполнитьПоСправочникуНоменклатуры);
	СтруктураНастроек.Вставить("ИспользоватьЕдиницыИзмерения", ИспользоватьЕдиницыИзмерения);
	СтруктураНастроек.Вставить("ИспользоватьХарактеристики", ИспользоватьХарактеристики);
	СтруктураНастроек.Вставить("ИспользоватьСерии", ИспользоватьСерии);
	СтруктураНастроек.Вставить("ТолькоИмеющиесяВНаличии", ТолькоИмеющиесяВНаличии);
	СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь));
	СтруктураНастроек.Вставить("КассыККМ", КассыККМ);

	СохранитьЗначение("РегистрСведений.ТоварыНаККМ.ФормаЗаполнения.Настройки", СтруктураНастроек);

КонецПроцедуры // ПриЗакрытии()

// Обработчик события "ПриИзменении" флажка "ИспользоватьЕдиницыИзмерения".
//
Процедура ИспользоватьЕдиницыИзмеренияПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ИспользоватьЕдиницыИзмеренияПриИзменении()

// Обработчик события "ПриИзменении" флажка "ИспользоватьХарактеристики".
//
Процедура ИспользоватьХарактеристикиПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ИспользоватьХарактеристикиПриИзменении()

// Обработчик события "ПриИзменении" флажка "ИспользоватьСерии".
//
Процедура ИспользоватьСерииПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ИспользоватьСерииПриИзменении()

// Обработчик события "ПриИзменении" флажка "ТолькоИмеющиесяВНаличии".
//
Процедура ТолькоИмеющиесяВНаличииПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ТолькоИмеющиесяВНаличииПриИзменении()

// Обработчик события "ПриИзменении" флажка "ЗаполнитьПоШтрихКодам".
//
Процедура ЗаполнитьПоШтрихКодамПриИзменении(Элемент)

	Если ИсточникиДанныхНеВыбраны() Тогда
		ТолькоИмеющиесяВНаличии = Ложь;
	КонецЕсли;

	УстановитьВидимость();

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ЗаполнитьПоШтрихКодамПриИзменении()

// Обработчик события "ПриИзменении" флажка "ЗаполнитьПоКодамВесовогоТовара".
//
Процедура ЗаполнитьПоКодамВесовогоТовараПриИзменении(Элемент)

	Если ИсточникиДанныхНеВыбраны() Тогда
		ТолькоИмеющиесяВНаличии = Ложь;
	КонецЕсли;

	УстановитьВидимость();

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ЗаполнитьПоКодамВесовогоТовараПриИзменении()

мИспользоватьХарактеристики = глЗначениеПеременной("ИспользоватьХарактеристикиНоменклатуры");
мИспользоватьСерии          = глЗначениеПеременной("ИспользоватьСерииНоменклатуры");
