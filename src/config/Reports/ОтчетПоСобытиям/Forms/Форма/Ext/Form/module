
// Структура содержащая данные о связи элементов управления быстрых отборов с данными
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);

КонецПроцедуры // ОбновитьОтчет()

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Процедура заполняет данными ПолеТабличногоДокумента отчета
//
Процедура Сформировать(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНачальныеНастройки();
	НП.УстановитьПериод(ДатаНачала, ДатаОкончания);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными, "ОбработкаОбъект.ПостроительОтчета.Отбор");
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
	СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
		
	Если УниверсальныеМеханизмы.ПолучитьНастройкуИспользоватьПриОткрытии(СтруктураНастройки) Тогда
		
		мТекущаяНастройка = СтруктураНастройки;
		ВосстановитьНастройкиИзСтруктуры(СтруктураНастройки.СохраненнаяНастройка);
		
	Иначе
		
		ДатаНачала = НачалоДня(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		ДатаОкончания = КонецДня(ТекущаяДата());
		
	КонецЕсли;
	
	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	
	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	Перем СохраненнаяНастройка;
	
	Если мТекущаяНастройка <> Неопределено
		И мТекущаяНастройка.НаименованиеНастройки <> Неопределено
		И мТекущаяНастройка.Свойство("СохранятьАвтоматически")
		И мТекущаяНастройка.СохранятьАвтоматически Тогда
		
		СформироватьСтруктуруДляСохраненияНастроек(СохраненнаяНастройка);
		
		СтруктураНастройки = Новый Структура;
		СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
		СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
		СтруктураНастройки.Вставить("НаименованиеНастройки", мТекущаяНастройка.НаименованиеНастройки);
		СтруктураНастройки.Вставить("СохраненнаяНастройка", СохраненнаяНастройка);
		СтруктураНастройки.Вставить("ИспользоватьПриОткрытии", мТекущаяНастройка.ИспользоватьПриОткрытии);
		СтруктураНастройки.Вставить("СохранятьАвтоматически", мТекущаяНастройка.СохранятьАвтоматически);
		
		УниверсальныеМеханизмы.СохранитьНастройку(СтруктураНастройки);
		
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

// Обработчик события ОбработкаОповещения формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененТекстЗапроса" Тогда

		// Перезаполним привязку отбора к данным
		Для Каждого Элемент Из СтруктураСвязиЭлементовСДанными Цикл
		
			ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;
		
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)

	
	ОтветОтФормы = ОбработкаОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма).ОткрытьМодально();
	
	Если ОтветОтФормы = Истина Тогда
		СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанель.Заголовок.
//
Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	ИзменитьВидимостьЗаголовка(ЭлементыФормы.ПолеТабличногоДокумента);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Отбор.
//
Процедура КоманднаяПанельОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ОбработкаРасшифровки элемента формы ПолеТабличногоДокумента.
//
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	Если Элемент.ТекущаяОбласть.Текст = "Открыть список" Тогда
	
		СтандартнаяОбработка = Ложь;

		Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда

			ЗначениеРасшифровки = Неопределено;
			Расшифровка.Свойство("ЗначениеРасшифровки", ЗначениеРасшифровки);

			Если ЗначениеРасшифровки = Неопределено Тогда
				Возврат;
			КонецЕсли; 
			
			ФормаФайлов = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСпискаФайловИИзображений", ЭтаФорма);
			
			ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Использование                       = Истина;
			ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Значение                            = ЗначениеРасшифровки;
			ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.НастройкаОтбора.Объект.Доступность = Ложь;
			ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.Колонки.Объект.Видимость           = Ложь;

			ОбязательныеОтборы = Новый Структура;

			Если ЗначениеРасшифровки.ВидСобытия = Перечисления.ВидыСобытий.ЭлектронноеПисьмо
			   И ЗначениеРасшифровки.ТипСобытия = Перечисления.ВходящееИсходящееСобытие.Входящее Тогда
			
				ФормаФайлов.ЭлементыФормы.ПанельЗакладок.ТекущаяСтраница = ФормаФайлов.ЭлементыФормы.ПанельЗакладок.Страницы.Файлы;
				ФормаФайлов.ЭлементыФормы.ПанельЗакладок.Страницы.Изображения.Видимость = Ложь;
				ОбязательныеОтборы.Вставить("ВидДанных",Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл);

			Иначе

				ФормаФайлов.Изображения.Отбор.Объект.Использование                       = Истина;
				ФормаФайлов.Изображения.Отбор.Объект.Значение                            = ЗначениеРасшифровки;
				ФормаФайлов.ЭлементыФормы.Изображения.НастройкаОтбора.Объект.Доступность = Ложь;
				ФормаФайлов.ЭлементыФормы.Изображения.Колонки.Объект.Видимость           = Ложь;
				
			КонецЕсли; 

			ОбязательныеОтборы.Вставить("Объект",ЗначениеРасшифровки);

			ФормаФайлов.ОбязательныеОтборы = ОбязательныеОтборы;
			
			ФормаФайлов.Открыть();
		
		КонецЕсли; 
	
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП.УстановитьПериод(ДатаНачала, ?(ДатаОкончания='0001-01-01', ДатаОкончания, КонецДня(ДатаОкончания)));
	НП.РедактироватьКакИнтервал = Истина;
	НП.РедактироватьКакПериод = Истина;
	НП.ВариантНастройки = ВариантНастройкиПериода.Интервал;
	НП.Редактировать();
	ДатаНачала = НП.ПолучитьДатуНачала();
	ДатаОкончания = НП.ПолучитьДатуОкончания();
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияКонтрагент.
//
Процедура ПолеВидаСравненияКонтрагентПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияКонтактноеЛицо.
//
Процедура ПолеВидаСравненияКонтактноеЛицоПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиКонтрагент.
//
Процедура ПолеНастройкиКонтрагентПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиКонтактноеЛицо.
//
Процедура ПолеНастройкиКонтактноеЛицоПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки ВосстановитьНастройку
//
Процедура КоманднаяПанельВосстановитьНастройку(Кнопка)
	
	ВосстановитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельВосстановитьНастройку()

// Процедура - обработчик нажатия кнопки СохранитьНастройку
//
Процедура КоманднаяПанельСохранитьНастройку(Кнопка)
	
	СохранитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельСохранитьНастройку()

// Процедура - обработчик нажатия кнопки ВосстановитьНастройку из меню Действия
//
Процедура КоманднаяПанельДействияВосстановитьНастройку(Кнопка)
	
	ВосстановитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельДействияВосстановитьНастройку()

// Процедура - обработчик нажатия кнопки СохранитьНастройку из меню Действия
//
Процедура КоманднаяПанельДействияСохранитьНастройку(Кнопка)
	
	СохранитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельДействияСохранитьНастройку()