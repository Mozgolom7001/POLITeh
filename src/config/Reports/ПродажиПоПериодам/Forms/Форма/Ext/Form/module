Процедура ПриОткрытии()
	
	ЭлементыФормы.ТабличноеПолеТовары.Вывод = ИспользованиеВывода.Разрешить;
	
	ДатаФормирования = ТекущаяДата();
	
	Если НЕ ЗначениеЗаполнено(ПериодичностьПродаж) Тогда
		
		ПериодичностьПродаж = 1;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КоличествоПериодов) Тогда
		
		КоличествоПериодов = 1;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КоличествоРабочихДней) Тогда
		
		КоличествоРабочихДней = 5;
		
	КонецЕсли;
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
	СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
		
	Если УниверсальныеМеханизмы.ПолучитьНастройкуИспользоватьПриОткрытии(СтруктураНастройки) Тогда
			
		мТекущаяНастройка = СтруктураНастройки;
		ВосстановитьНастройкиИзСтруктуры(СтруктураНастройки.СохраненнаяНастройка);
		
		Если СтруктураНастройки.СохраненнаяНастройка.Свойство("НастройкиКолонокТабличноеПолеТовары") Тогда
			
			УстановитьНастройкиКолонок(ЭлементыФормы.ТабличноеПолеТовары, СтруктураНастройки.СохраненнаяНастройка.НастройкиКолонокТабличноеПолеТовары);
			
		КонецЕсли;
		
	Иначе
		
		ИнициализацияПостроителяОтчета();
		
	КонецЕсли;
	
	УстановитьДоступностьОтборов();
	УстановитьПредставленияОтборов();
	
	УправлениеОтображениемКолонок(ЭлементыФормы.ТабличноеПолеТовары);
	УстановитьПредставленияКолонок(ЭлементыФормы.ТабличноеПолеТовары);
	
КонецПроцедуры // ПриОткрытии()

Процедура ПриЗакрытии()
	
	Перем СохраненнаяНастройка;
	
	Если мТекущаяНастройка <> Неопределено И мТекущаяНастройка.НаименованиеНастройки <> Неопределено И мТекущаяНастройка.Свойство("СохранятьАвтоматически") И мТекущаяНастройка.СохранятьАвтоматически Тогда
	
		СформироватьСтруктуруДляСохраненияНастроек(СохраненнаяНастройка);
		СохраненнаяНастройка.Вставить("НастройкиКолонокТабличноеПолеТовары", ПолучитьНастройкиКолонок(ЭлементыФормы.ТабличноеПолеТовары));
		
		СтруктураНастройки = Новый Структура;
		СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
		СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
		СтруктураНастройки.Вставить("НаименованиеНастройки", мТекущаяНастройка.НаименованиеНастройки);
		СтруктураНастройки.Вставить("СохраненнаяНастройка", СохраненнаяНастройка);
		СтруктураНастройки.Вставить("ИспользоватьПриОткрытии", мТекущаяНастройка.ИспользоватьПриОткрытии);
		СтруктураНастройки.Вставить("СохранятьАвтоматически", мТекущаяНастройка.СохранятьАвтоматически);
		
		УниверсальныеМеханизмы.СохранитьНастройку(СтруктураНастройки);

	КонецЕсли;

КонецПроцедуры // ПриЗакрытии()

Процедура ОбновлениеОтображения()
	
	УстановитьДоступностьОтборов();
	УстановитьПредставленияОтборов();
	
	ЭлементыФормы.НадписьРабочихДней.Видимость = ПериодичностьПродаж = 0;
	ЭлементыФормы.КоличествоРабочихДней.Видимость = ПериодичностьПродаж = 0;
	
КонецПроцедуры // ОбновлениеОтображения()

Процедура КоманднаяПанельФормыДействиеЗаполнить(Кнопка)
	
	НастроитьПостроительОтчета();
	
	ВывестиРезультат();
	
	УправлениеОтображениемКолонок(ЭлементыФормы.ТабличноеПолеТовары);
	УстановитьПредставленияКолонок(ЭлементыФормы.ТабличноеПолеТовары);
	
	ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Товары;
	
КонецПроцедуры // КоманднаяПанельФормыДействиеЗаполнить()

Процедура ТабличноеПолеТоварыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.Имя = "Номенклатура" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(ВыбраннаяСтрока.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры // ТабличноеПолеТоварыВыбор()

Процедура ТабличноеПолеТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		Если ДанныеСтроки.Номенклатура.Пустая() Тогда
			
			ОформлениеСтроки.ЦветФона = WebЦвета.ГолубойСКраснымОттенком;
			
			Для Индекс = 1 по КоличествоЦены Цикл
				
				Представление = "Цена_" + Формат(Индекс, "ЧЦ=2; ЧВН=; ЧГ=0");
				ОформлениеСтроки.Ячейки["Цена_" + Формат(Индекс, "ЧЦ=2; ЧВН=; ЧГ=0")].УстановитьТекст(Представление);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ТабличноеПолеТоварыПриПолученииДанных()

Процедура КоманднаяПанельФормыВосстановитьНастройку(Кнопка)
	
	ВосстановитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельФормыВосстановитьНастройку()

Процедура КоманднаяПанельФормыСохранитьНастройку(Кнопка)
	
	СохранитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельФормыСохранитьНастройку()

Процедура ПериодичностьПродажОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПериодичностьПродажОчистка()

Процедура КоманднаяПанельТоварыДействиеЗафиксировать(Кнопка)
	
	ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеТовары.ТекущаяКолонка;
	
	Если ТекущаяКолонка = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Индекс = 0;
	
	Для каждого Колонка из ЭлементыФормы.ТабличноеПолеТовары.Колонки Цикл
		
		Если Колонка.Видимость Тогда
			
			Индекс = Индекс + 1;
			
		КонецЕсли;
		
		Если Колонка = ТекущаяКолонка Тогда
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПолеТовары.ФиксацияСлева = Индекс;
	
КонецПроцедуры // КоманднаяПанельТоварыДействиеЗафиксировать()

Процедура ТабличноеПолеВыбранныеПоляПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		
		ОформлениеСтроки.Ячейки.Формат.УстановитьТекст(ПолучитьСвойствоВыбранногоПоля(ОформлениеСтроки.ДанныеСтроки.Имя, "Формат"));
		
	КонецЦикла;
	
КонецПроцедуры // ТабличноеПолеВыбранныеПоляПриПолученииДанных()

Процедура ТабличноеПолеВыбранныеПоляФорматНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	КонструкторФорматнойСтроки = Новый КонструкторФорматнойСтроки;
	КонструкторФорматнойСтроки.Текст = ПолучитьСвойствоВыбранногоПоля(ЭлементыФормы.ТабличноеПолеВыбранныеПоля.ТекущиеДанные.Имя, "Формат");
	
	Если КонструкторФорматнойСтроки.ОткрытьМодально() Тогда
		
		УстановитьСвойствоВыбранногоПоля(ЭлементыФормы.ТабличноеПолеВыбранныеПоля.ТекущиеДанные.Имя, "Формат", КонструкторФорматнойСтроки.Текст);
		
	КонецЕсли;
	
КонецПроцедуры // ТабличноеПолеВыбранныеПоляФорматНачалоВыбора()

Процедура ТабличноеПолеВыбранныеПоляФорматПриИзменении(Элемент)
	
	УстановитьСвойствоВыбранногоПоля(ЭлементыФормы.ТабличноеПолеВыбранныеПоля.ТекущиеДанные.Имя, "Формат", Элемент.Значение);
	
КонецПроцедуры // ТабличноеПолеВыбранныеПоляФорматПриИзменении()

Процедура ТабличноеПолеВыбранныеПоляФорматОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьСвойствоВыбранногоПоля(ЭлементыФормы.ТабличноеПолеВыбранныеПоля.ТекущиеДанные.Имя, "Формат", "");
	
КонецПроцедуры // ТабличноеПолеВыбранныеПоляФорматОчистка()
