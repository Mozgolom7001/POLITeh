
// Осуществляет проверку значений "НачалоПериода" и "КонецПериода"
// введенных пользователем.
Функция ПроверкаПериода()
	
	ПроверкаПройдена=Истина;
	
	Если НачалоПериода > КонецПериода Тогда
		
		Предупреждение("Неправильно задан период формирования отчета!"+Символы.ПС+
		               "Дата начала больше даты окончания периода.");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли НачалоПериода='00010101' Тогда
		
		Предупреждение("Не указана дата начала отчета");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли КонецПериода='00010101' Тогда
		
		Предупреждение("Не указана дата конца отчета");
					   
		ПроверкаПройдена=Ложь;
		
	КонецЕсли;
	
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

Процедура ВыбПериодНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(НачалоПериода, КонецПериода);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	НачалоПериода = НачалоКвартала(РабочаяДата);
	КонецПериода = КонецКвартала(РабочаяДата);

	СформироватьОтчетПоСтандартнойФорме = Истина;
	СкрытьКолонкиПоСтавке20 = Истина;
	
	// Установка настроек печати по умолчанию. Если настройки были изменены, они будут загружены при формировании отчета
	ЭлементыФормы.ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ЭлементыФормы.ТабличныйДокумент.АвтоМасштаб = Истина;
	
	УстановитьВидимость();
	УстановитьРуководителя();

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
КонецПроцедуры

Процедура КоманднаяПанельСформировать(Кнопка) Экспорт
	
	СформироватьОтчет();
	
КонецПроцедуры

Процедура СформироватьОтчет()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация.");
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(КонецПериода, Ложь, Организация, "регл");
	
	Если УчетнаяПолитика = Неопределено ИЛИ УчетнаяПолитика.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
	ОсновнойРаздел = ПанельРазделовКниги.Страницы.ОсновнойРаздел;
	КоличествоОтображаемыхРазделов = ПанельРазделовКниги.Страницы.Количество();
	
	Для НомерСтраницы = 1 по КоличествоОтображаемыхРазделов Цикл
		Если ПанельРазделовКниги.Страницы[КоличествоОтображаемыхРазделов - НомерСтраницы] = ОсновнойРаздел Тогда
			Продолжить;
		КонецЕсли; 
		ПанельРазделовКниги.Страницы.Удалить(КоличествоОтображаемыхРазделов - НомерСтраницы);
	КонецЦикла;
	
	ЭлементыФормы.ПанельРазделовКниги.Страницы.ОсновнойРаздел.Видимость = НЕ (ФормироватьДополнительныеЛисты И ВыводитьТолькоДопЛисты);
	
	ПараметрыОтчета = ПодготовитьПараметрыОтчета();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор());
	Отчеты.КнигаПокупок1137.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	
	ЗагрузитьПодготовленныеДанные(АдресХранилища);
	
КонецПроцедуры

Функция ПодготовитьПараметрыОтчета()

	ДействуетПостановление1137 = УчетНДС.ВерсияПостановленияНДС1137(КонецПериода) >= 3;
	Если ДействуетПостановление1137 Тогда
		СкрытьКолонкиПоСтавке20ВМакете = Ложь;
	Иначе
		СкрытьКолонкиПоСтавке20ВМакете = СкрытьКолонкиПоСтавке20;
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура;
	
	ПараметрыОтчета.Вставить("Организация",                        Организация);
	ПараметрыОтчета.Вставить("НачалоПериода",                      НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода",                       КонецПериода);
	ПараметрыОтчета.Вставить("ФормироватьДополнительныеЛисты",     ФормироватьДополнительныеЛисты);
	ПараметрыОтчета.Вставить("ДополнительныеЛистыЗаТекущийПериод", ДополнительныеЛистыЗаТекущийПериод);
	ПараметрыОтчета.Вставить("ГруппироватьПоКонтрагентам",         ГруппироватьПоКонтрагентам);
	ПараметрыОтчета.Вставить("КонтрагентДляОтбора",                КонтрагентДляОтбора);
	ПараметрыОтчета.Вставить("ВыводитьТолькоДопЛисты",             ВыводитьТолькоДопЛисты);
	ПараметрыОтчета.Вставить("ВыводитьПокупателейПоАвансам",       ВыводитьПокупателейПоАвансам);
	ПараметрыОтчета.Вставить("ВключатьОбособленныеПодразделения",  Ложь);
	ПараметрыОтчета.Вставить("СписокСформированныхЛистов",         СписокСформированныхЛистов);
	ПараметрыОтчета.Вставить("ЗаполнениеДокумента",                Ложь);
	ПараметрыОтчета.Вставить("ЗаполнениеДекларации",               Ложь);
	ПараметрыОтчета.Вставить("ЕстьЗаписиПоКолонке20",              Ложь);
	ПараметрыОтчета.Вставить("СкрытьКолонкиПоСтавке20",            СкрытьКолонкиПоСтавке20ВМакете);
	ПараметрыОтчета.Вставить("ОтбиратьПоКонтрагенту",              ЗначениеЗаполнено(КонтрагентДляОтбора));
	ПараметрыОтчета.Вставить("ФормироватьТабличныйДокумент",       Истина);
	ПараметрыОтчета.Вставить("СформироватьОтчетПоСтандартнойФорме");
	ПараметрыОтчета.Вставить("СписокОрганизаций");
	ПараметрыОтчета.Вставить("ДатаФормированияДопЛиста");
	
	Возврат ПараметрыОтчета;

КонецФункции

Процедура ЗагрузитьПодготовленныеДанные(АдресХранилища)

	Перем ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент, ГраницаВторогоЭлемента;
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если РезультатВыполнения.Свойство("СписокСформированныхЛистов") Тогда
		
		СписокСформированныхЛистов = РезультатВыполнения.СписокСформированныхЛистов;
		
		ОпределитьИндексОсновногоРаздела();
		
		Если ЕстьОсновнойРаздел Тогда
			
			ЭлементыФормы.ПанельРазделовКниги.ТекущаяСтраница = ЭлементыФормы.ПанельРазделовКниги.Страницы.ОсновнойРаздел;
			
			СформированныйЛист = СписокСформированныхЛистов.Получить(ИндексОсновногоРаздела).Значение;
			
			ЭлементыФормы.ТабличныйДокумент.Очистить();
			ЭлементыФормы.ТабличныйДокумент.Вывести(СформированныйЛист);
			
			ТекущийЭлемент = ЭлементыФормы.ТабличныйДокумент;
			
		КонецЕсли;
		
		Если СписокСформированныхЛистов.Количество() <> 0 Тогда
			
			НомерОтображаемогоПериода = 0;
			
			Для Каждого Лист Из СписокСформированныхЛистов Цикл
				
				Если Лист.Представление <> "Основной раздел" Тогда
					
					НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
					
					// Вывод дополнительных листов
					
					ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
					НоваяСтраница = ПанельРазделовКниги.Страницы.Добавить("ДопЛист" + НомерОтображаемогоПериода, Лист.Представление);
					ПанельРазделовКниги.ТекущаяСтраница = НоваяСтраница;
					
					ТабличныйДокументДопЛист = ЭлементыФормы.Добавить(
						Тип("ПолеТабличногоДокумента"), "ТД_ДопЛист" + НомерОтображаемогоПериода, Истина, ПанельРазделовКниги);
						
					ТабличныйДокументДопЛист.Лево = ЭлементыФормы.ТабличныйДокумент.Лево;
					ТабличныйДокументДопЛист.Верх = ЭлементыФормы.ТабличныйДокумент.Верх;
					ТабличныйДокументДопЛист.Высота = ЭлементыФормы.ТабличныйДокумент.Высота;
					ТабличныйДокументДопЛист.Ширина = ЭлементыФормы.ТабличныйДокумент.Ширина;
					ТабличныйДокументДопЛист.Очистить();
					ТабличныйДокументДопЛист.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
					ТабличныйДокументДопЛист.АвтоМасштаб = Истина;
					ТабличныйДокументДопЛист.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупокДопЛист";
					
					ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(
						ГраницаЭлементаУправления.Низ, ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент, ГраницаВторогоЭлемента);
					ТабличныйДокументДопЛист.УстановитьПривязку(
						ГраницаЭлементаУправления.Низ, ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент, ГраницаВторогоЭлемента);
					ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(
						ГраницаЭлементаУправления.Право, ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент, ГраницаВторогоЭлемента);
					ТабличныйДокументДопЛист.УстановитьПривязку(
						ГраницаЭлементаУправления.Право, ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент, ГраницаВторогоЭлемента);
					ТабличныйДокументДопЛист.ТолькоПросмотр = Истина;
					
					ТабличныйДокументДопЛист.Вывести(Лист.Значение);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РезультатВыполнения.Свойство("СписокСообщений") Тогда
		Для Каждого Сообщение Из РезультатВыполнения.СписокСообщений Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение.Значение);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьИндексОсновногоРаздела()

	Индекс = ПолучитьИндексСформированногоЛиста("Основной раздел", СписокСформированныхЛистов);
	
	Если Индекс = Неопределено Тогда
		ИндексОсновногоРаздела = 0;
		ЕстьОсновнойРаздел     = Ложь;
	Иначе
		ИндексОсновногоРаздела = Индекс;
		ЕстьОсновнойРаздел     = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИндексСформированногоЛиста(ИмяЛиста, СписокСформированныхЛистов)

	Если ИмяЛиста = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Для Каждого Лист Из СписокСформированныхЛистов Цикл
		Если Лист.Представление = ИмяЛиста Тогда
			Возврат СписокСформированныхЛистов.Индекс(Лист);
		КонецЕсли;
	КонецЦикла;

	Возврат Неопределено;

КонецФункции

Процедура УстановитьВидимость()
	
	ЭлементыФормы.ДополнительныеЛистыЗаТекущийПериод.Доступность = ФормироватьДополнительныеЛисты;
	ЭлементыФормы.ВыводитьТолькоДопЛисты.Доступность = ФормироватьДополнительныеЛисты;
	
КонецПроцедуры

Процедура ФормироватьДополнительныеЛистыПриИзменении(Элемент)
	
	Если Не ФормироватьДополнительныеЛисты И ВыводитьТолькоДопЛисты Тогда
		ВыводитьТолькоДопЛисты = Ложь;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура КоманднаяПанельДействиеНастройка(Кнопка)
	
	ФормаНастройки = ПолучитьФорму("ФормаНастройки");
	ФормаНастройки.ГруппироватьПоКонтрагентам = ГруппироватьПоКонтрагентам;
	ФормаНастройки.КонтрагентДляОтбора = КонтрагентДляОтбора;
	ФормаНастройки.ОтбиратьПоКонтрагенту = ОтбиратьПоКонтрагенту;
	ФормаНастройки.СкрытьКолонкиПоСтавке20 = СкрытьКолонкиПоСтавке20;
	ФормаНастройки.СформироватьОтчетПоСтандартнойФорме = СформироватьОтчетПоСтандартнойФорме;
	ФормаНастройки.ВыводитьПокупателейПоАвансам = ВыводитьПокупателейПоАвансам;
	ФормаНастройки.Руководитель = Руководитель;
	
	Если ФормаНастройки.ОткрытьМодально() = Истина Тогда
		ГруппироватьПоКонтрагентам = ФормаНастройки.ГруппироватьПоКонтрагентам;
		КонтрагентДляОтбора = ФормаНастройки.КонтрагентДляОтбора;
		ОтбиратьПоКонтрагенту = ФормаНастройки.ОтбиратьПоКонтрагенту;
		СкрытьКолонкиПоСтавке20 = ФормаНастройки.СкрытьКолонкиПоСтавке20;
		СформироватьОтчетПоСтандартнойФорме = ФормаНастройки.СформироватьОтчетПоСтандартнойФорме;
		ВыводитьПокупателейПоАвансам = ФормаНастройки.ВыводитьПокупателейПоАвансам;
		Руководитель = ФормаНастройки.Руководитель;
		
		СформироватьОтчет();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементВыбора = Расшифровка.ВыбратьЭлемент("Выберите счет-фактуру");
		
		Если ЭлементВыбора <> Неопределено Тогда
			ФормаДокумента = ЭлементВыбора.Значение.ПолучитьФорму("ФормаДокумента");
			ФормаДокумента.Открыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьРуководителя()
	
	Организация = ЭтотОбъект.Организация;
	Если Организация = Справочники.Организации.ПустаяСсылка() Тогда 
		Возврат;
	КонецЕсли;
	
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Организация, ТекущаяДата());
	ЭтотОбъект.Руководитель = ОтветственныеЛица.Руководитель;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьРуководителя();
	
КонецПроцедуры

