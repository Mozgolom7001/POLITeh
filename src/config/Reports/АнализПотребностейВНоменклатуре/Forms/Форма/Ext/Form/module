
// Структура содержащая данные о связи элементов управления быстрых отборов с данными
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Обновление результата отчета
//
Процедура ОбновитьОтчет() Экспорт
	
	СформироватьОтчет(ЭлементыФормы.ТабличныйДокумент);
	
КонецПроцедуры // ОбновитьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Сформировать.
//
Процедура КоманднаяПанельФормыСформировать(Элемент)
	
	СформироватьОтчет(ЭлементыФормы.ТабличныйДокумент);
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	ФормаНастройки = ОбработкаОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	
	ВозвращенноеЗначение = ФормаНастройки.ОткрытьМодально();
	
	Если ВозвращенноеЗначение = Истина Тогда
	
		УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, Отбор, СтруктураСвязиЭлементовСДанными, "ОбработкаОбъект.Отбор");
		ЭлементыФормы.КнопкаВыборПериода.Видимость = НЕ ЭлементыФормы.ПолеНастройкиДатаПотребности.Видимость;

		СформироватьОтчет(ЭлементыФормы.ТабличныйДокумент);
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Отбор.
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Заголовок.
//
Процедура КоманднаяПанельФормыЗаголовок(Кнопка)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	ИзменитьВидимостьЗаголовка(ЭлементыФормы.ТабличныйДокумент);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПередСохранениемЗначений.
//
Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = Новый Структура;
	
	СохраненныеНастройки.Вставить("РаскрашиватьГруппировки", РаскрашиватьГруппировки);
	СохраненныеНастройки.Вставить("ПоказыватьЗаголовок"    , ПоказыватьЗаголовок);
	СохраненныеНастройки.Вставить("СтруктураОтбора"        , УправлениеОтчетами.ПолучитьСтруктуруОтбора(Отбор));
	СохраненныеНастройки.Вставить("Группировки"            , Группировки.Выгрузить());
	
КонецПроцедуры

// Обработчик события формы ПослеВосстановленияЗначений.
//
Процедура ПослеВосстановленияЗначений()
	
	Перем СтруктураОтбора;
	
	Перем ТаблицаНастройки;
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		СохраненныеНастройки.Свойство("РаскрашиватьГруппировки", РаскрашиватьГруппировки);
		СохраненныеНастройки.Свойство("ПоказыватьЗаголовок", ПоказыватьЗаголовок);
		
		СохраненныеНастройки.Свойство("Группировки", ТаблицаНастройки);
		Группировки.Загрузить(ТаблицаНастройки);
		
		СохраненныеНастройки.Свойство("СтруктураОтбора", СтруктураОтбора);
		УправлениеОтчетами.ЗаполнитьОтборИзСтруктуры(Отбор, СтруктураОтбора);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события формы ПриОткрытии.
//
Процедура ПриОткрытии()
	
	Для каждого ЭлементСписка Из мСписокОтборов Цикл
		Если Отбор.Найти(ЭлементСписка.Значение) = Неопределено Тогда
			Отбор.Добавить(ЭлементСписка.Значение);
		КонецЕсли; 
	КонецЦикла;
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, Отбор, СтруктураСвязиЭлементовСДанными, "ОбработкаОбъект.Отбор");
	ЭлементыФормы.КнопкаВыборПериода.Видимость = НЕ ЭлементыФормы.ПолеНастройкиДатаПотребности.Видимость;
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ДатаНачала    = НачалоДня(ТекущаяДата());
		ДатаОкончания = КонецДня(ДобавитьМесяц(ТекущаяДата(), 1));
		ДатаОтчета    = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	
	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияНоменклатура.
//
Процедура ПолеВидаСравненияНоменклатураПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияДатаПотребности.
//
Процедура ПолеВидаСравненияДатаПотребностиПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
	ЭлементыФормы.КнопкаВыборПериода.Видимость = НЕ ЭлементыФормы.ПолеНастройкиДатаПотребности.Видимость;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиСНоменклатура.
//
Процедура ПолеНастройкиСНоменклатураПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиСПриИзменении(Элемент, Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиСДатаПотребности.
//
Процедура ПолеНастройкиСДатаПотребностиПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиСПриИзменении(Элемент, Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиПоНоменклатура.
//
Процедура ПолеНастройкиПоНоменклатураПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПоПриИзменении(Элемент, Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиПоДатаПотребности.
//
Процедура ПолеНастройкиПоДатаПотребностиПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПоПриИзменении(Элемент, Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиНоменклатура.
//
Процедура ПолеНастройкиНоменклатураПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиДатаПотребности.
//
Процедура ПолеНастройкиДатаПотребностиПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, Отбор);
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КнопкаВыборПериода.
//
Процедура КнопкаВыборПериодаНажатие(Элемент)
	
	МассивВозврата = УправлениеОтчетами.ВвестиПериод(ЭлементыФормы.ПолеНастройкиСДатаПотребности.Значение, ЭлементыФормы.ПолеНастройкиПоДатаПотребности.Значение);
	
	Если ТипЗнч(МассивВозврата) = Тип("Массив") Тогда
		ЭлементыФормы.ПолеНастройкиСДатаПотребности.Значение  = МассивВозврата[0];
		ЭлементыФормы.ПолеНастройкиПоДатаПотребности.Значение = МассивВозврата[1];
	КонецЕсли; 
	
КонецПроцедуры
