
Процедура ПриОткрытии()

	Период = НачалоКвартала(ТекущаяДата());
	СформироватьОтчетПоСтандартнойФорме = Истина;
	ОбновитьНадписьКвартал();
	
	// Установка настроек печати по умолчанию. Если настройки были изменены, они будут загружены при формировании отчета
	ЭлементыФормы.Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ЭлементыФормы.Результат.АвтоМасштаб = Истина;

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	
	УстановитьРуководителя();
	
КонецПроцедуры

Процедура ОбновитьНадписьКвартал()
	
	ЭлементыФормы.НадписьКвартал.Заголовок = ПредставлениеПериода(НачалоКвартала(Период), КонецКвартала(Период), "ФП = Истина");

КонецПроцедуры

Процедура КнопкаКварталНазадНажатие(Элемент)
	
	Период = КонецКвартала(ДобавитьМесяц(Период, -3));
	ОбновитьНадписьКвартал();
	
КонецПроцедуры

Процедура КнопкаКварталВпередНажатие(Элемент)
	
	Период = КонецКвартала(ДобавитьМесяц(Период, 3));
	ОбновитьНадписьКвартал();
	
КонецПроцедуры

Процедура Сформировать(Кнопка) Экспорт
	
	СформироватьОтчет();
	
КонецПроцедуры

Процедура СформироватьОтчет()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация.");
		Возврат;
	КонецЕсли;
	
	ПараметрыОтчета = ПодготовитьПараметрыОтчета();
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор());
	
	Отчеты.ЖурналУчетаСчетовФактур1137.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	
	ЗагрузитьПодготовленныеДанные(АдресХранилища);
	
КонецПроцедуры

Функция ПодготовитьПараметрыОтчета()
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация",                         Организация);
	ПараметрыОтчета.Вставить("НалоговыйПериод",                     НачалоКвартала(Период));
	ПараметрыОтчета.Вставить("ГруппироватьПоКонтрагентам",          ГруппироватьПоКонтрагентам);
	ПараметрыОтчета.Вставить("СформироватьОтчетПоСтандартнойФорме", СформироватьОтчетПоСтандартнойФорме);
	ПараметрыОтчета.Вставить("КонтрагентДляОтбора",                 КонтрагентДляОтбора);
	ПараметрыОтчета.Вставить("ОтбиратьПоКонтрагенту",               ОтбиратьПоКонтрагенту);
	ПараметрыОтчета.Вставить("ВключатьОбособленныеПодразделения",   Истина);
	ПараметрыОтчета.Вставить("ЗаполнениеДекларации",                Ложь);
	ПараметрыОтчета.Вставить("ФормироватьТабличныйДокумент",        Истина);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

Процедура ЗагрузитьПодготовленныеДанные(АдресХранилища)

	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);

	Если РезультатВыполнения.Свойство("СформированныйЖурнал") Тогда
		
		ЖурналУчетаСчетовФактур = РезультатВыполнения.СформированныйЖурнал;
		
		Результат = ЭлементыФормы.Результат;
		
		Результат.Очистить();
		Результат.АвтоМасштаб = Истина;
		Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		Результат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";
		Результат.ЧерноБелаяПечать = Истина;
		
		Результат.Вывести(ЖурналУчетаСчетовФактур);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельНастройка(Кнопка)
	
	ФормаНастройки = ПолучитьФорму("ФормаНастройки");
	
	ФормаНастройки.ГруппироватьПоКонтрагентам = ГруппироватьПоКонтрагентам;
	ФормаНастройки.КонтрагентДляОтбора = КонтрагентДляОтбора;
	ФормаНастройки.ОтбиратьПоКонтрагенту = ОтбиратьПоКонтрагенту;
	ФормаНастройки.СформироватьОтчетПоСтандартнойФорме = СформироватьОтчетПоСтандартнойФорме;
	ФормаНастройки.Руководитель = Руководитель;
	
	Если ФормаНастройки.ОткрытьМодально() = Истина Тогда
		
		ГруппироватьПоКонтрагентам = ФормаНастройки.ГруппироватьПоКонтрагентам;
		КонтрагентДляОтбора = ФормаНастройки.КонтрагентДляОтбора;
		ОтбиратьПоКонтрагенту = ФормаНастройки.ОтбиратьПоКонтрагенту;
		СформироватьОтчетПоСтандартнойФорме = ФормаНастройки.СформироватьОтчетПоСтандартнойФорме;
		ФормаНастройки.Руководитель = Руководитель;
	
		СформироватьОтчет();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьРуководителя()
	
	Организация = ЭтотОбъект.Организация;
	Если Организация = Справочники.Организации.ПустаяСсылка() Тогда 
		Возврат;
	КонецЕсли;
	
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Организация, ТекущаяДата());
	ЭтотОбъект.Руководитель = ОтветственныеЛица.Руководитель;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьРуководителя();
	
КонецПроцедуры

