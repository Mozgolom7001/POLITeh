
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);

КонецПроцедуры // ОбновитьОтчет()

// Процедура заполняет данными ПолеТабличногоДокумента отчета
//
Процедура Сформировать(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НП.УстановитьПериод(ДатаНачала, ДатаКонца);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ОтборМенеджер,, "ОбработкаОбъект.ОтборМенеджер");
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
	СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
		
	Если УниверсальныеМеханизмы.ПолучитьНастройкуИспользоватьПриОткрытии(СтруктураНастройки) Тогда
		
		мТекущаяНастройка = СтруктураНастройки;
		ВосстановитьНастройкиИзСтруктуры(СтруктураНастройки.СохраненнаяНастройка);
		
	Иначе
		
		ДатаНачала = НачалоДня(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		ДатаОкончания = КонецДня(ТекущаяДата());
		ПоказыватьЗаголовок = Истина;
		
	КонецЕсли;
	
	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	Перем СохраненнаяНастройка;
	
	Если мТекущаяНастройка <> Неопределено
		И мТекущаяНастройка.НаименованиеНастройки <> Неопределено
		И мТекущаяНастройка.Свойство("СохранятьАвтоматически")
		И мТекущаяНастройка.СохранятьАвтоматически Тогда
		
		СформироватьСтруктуруДляСохраненияНастроек(СохраненнаяНастройка);
		
		СтруктураНастройки = Новый Структура;
		СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
		СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
		СтруктураНастройки.Вставить("НаименованиеНастройки", мТекущаяНастройка.НаименованиеНастройки);
		СтруктураНастройки.Вставить("СохраненнаяНастройка", СохраненнаяНастройка);
		СтруктураНастройки.Вставить("ИспользоватьПриОткрытии", мТекущаяНастройка.ИспользоватьПриОткрытии);
		СтруктураНастройки.Вставить("СохранятьАвтоматически", мТекущаяНастройка.СохранятьАвтоматически);
		
		УниверсальныеМеханизмы.СохранитьНастройку(СтруктураНастройки);
		
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаДополнительно = ПолучитьФорму("ФормаДополнительно", ЭтаФорма);
	РезультатГруппировок = ФормаДополнительно.ОткрытьМодально();

	Если РезультатГруппировок <> Неопределено И РезультатГруппировок Тогда
		СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанель.Заголовок.
//
Процедура КоманднаяПанельФормыЗаголовок(Кнопка)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	ИзменитьВидимостьЗаголовка(ЭлементыФормы.ПолеТабличногоДокумента);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Отбор.
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Диаграмма.
//
Процедура КоманднаяПанельФормыДиаграмма(Кнопка)
	
	Если ТипЗнч(мСтруктураТаблицДанныхДиаграммы) <> Тип("Структура") Тогда
		Предупреждение("Отсутствуют данные в отчете. Формирование диаграммы невозможно.");
		Возврат;
	КонецЕсли; 
	
	ФормаНастройкиДиаграммы = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиДиаграммы", ЭтаФорма);
	
	ФормаНастройкиДиаграммы.ОткрытьМодально();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.ВыгрузитьВЗУП.
//
Процедура КоманднаяПанельФормыВыгрузитьВЗУП(Кнопка)
	
	ВыгрузкаВЗУП = Обработки.ВыгрузкаПоказателейВЗУП.Создать();
	ВыгрузкаВЗУП.ОтборМенеджер = ОтборМенеджер;
	
	Если ЗначениеЗаполнено(ДатаКонца) Тогда
		ВыгрузкаВЗУП.Период = КонецМесяца(ДатаКонца);
	ИначеЕсли ЗначениеЗаполнено(ДатаНачала) Тогда
		ВыгрузкаВЗУП.Период = КонецМесяца(ДатаНачала);
	КонецЕсли;
	
	// Показатели
	ТаблицаСписокВсехПоказателей = ПоказателиОтчета.Выгрузить();
	Для каждого Строки Из ТаблицаСписокВсехПоказателей Цикл
		СтрокаОтчета = ВыгрузкаВЗУП.ПоказателиОтчета.Найти(Строки.ИмяПоказателя,"ИмяПоказателя");
		Если СтрокаОтчета <> Неопределено Тогда
			СтрокаОтчета.ИспользованиеПоказателя = Строки.ИспользованиеПоказателя;
		КонецЕсли;
	КонецЦикла;
		
	ВыгрузкаВЗУПФорма = ВыгрузкаВЗУП.ПолучитьФорму();
	ВыгрузкаВЗУПФорма.Открыть();
	
КонецПроцедуры //КоманднаяПанельФормыВыгрузитьВЗУП

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаКонца = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияМенеджер.
//
Процедура ПолеВидаСравненияМенеджерПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиМенеджер.
//
Процедура ПолеНастройкиМенеджерПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ОтборМенеджер);
	
КонецПроцедуры

// Обработчик события вызова расшифровки поля табличного документа.
//
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Расшифровка[0].ПараметрЧисло = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ФлагВозврата = Ложь;
	ТабличнаяРасшифровка = ЭтотОбъект.ПолучитьФорму("ФормаРасшифровок");
	СформироватьРасшифровкуПоказателя(ТабличнаяРасшифровка.ЭлементыФормы.ПолеТабличногоДокументаРасшифровки, Расшифровка[0].ПараметрИмя, Расшифровка[0].Менеджер, ФлагВозврата);
	Если НЕ ФлагВозврата Тогда
		ТабличнаяРасшифровка.Открыть();
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки ВосстановитьНастройку
//
Процедура КоманднаяПанельФормыВосстановитьНастройку(Кнопка)
	
	ВосстановитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельФормыВосстановитьНастройку()

// Процедура - обработчик нажатия кнопки СохранитьНастройку
//
Процедура КоманднаяПанельФормыСохранитьНастройку(Кнопка)
	
	СохранитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельФормыСохранитьНастройку()

// Процедура - обработчик нажатия кнопки ВосстановитьНастройку из меню Действия
//
Процедура КоманднаяПанельФормыДействияВосстановитьНастройки(Кнопка)
	
	ВосстановитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельФормыДействияВосстановитьНастройки()

// Процедура - обработчик нажатия кнопки СохранитьНастройку из меню Действия
//
Процедура КоманднаяПанельФормыДействияСохранитьНастройки(Кнопка)
	
	СохранитьНастройки(ЭлементыФормы);
	
КонецПроцедуры // КоманднаяПанельФормыДействияСохранитьНастройки()