// Вызывается из тела процедуры "Сформировать"
// осуществляет проверку значений "НачалоПериода" и "КонецПериода"
// введенных пользователем.
Функция ПроверкаПериода()
	
	ПроверкаПройдена=Истина;
	
	Если НачалоПериода > КонецПериода Тогда
		
		Предупреждение("Неправильно задан период формирования отчета!"+Символы.ПС+
		               "Дата начала больше даты окончания периода.");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли НачалоПериода='00010101' Тогда
		
		Предупреждение("Не указана дата начала отчета");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли КонецПериода='00010101' Тогда
		
		Предупреждение("Не указана дата конца отчета");
					   
		ПроверкаПройдена=Ложь;
	
	КонецЕсли;
		
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

// Процедура вызывается при нажатии кнопки настройки периода в диалоге документа.
// Позволяет в удобном диалоговом окне задать значения реквизитов НачалоПериода
// и КонецПериода
Процедура ВыбПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	
КонецПроцедуры

// Обновляет таблицу отчета
//
Процедура ОбновитьОтчет() Экспорт

	Если Не ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация.");
		Возврат;
	КонецЕсли;

	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьОтчет(ЭлементыФормы.ТабличныйДокумент );
	
КонецПроцедуры // ОбновитьОтчет()

Процедура Сформировать(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
		НачалоПериода = НачалоМесяца(РабочаяДата);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда
		КонецПериода = КонецМесяца(РабочаяДата);
	КонецЕсли;
	
	НП = Новый НастройкаПериода;
	
	// Параметры для выбора организации
	УчетПоВсемОрганизациям = Истина; // Для совместимости с БП

	// Проверка ведения однофирменности
	ЭлементыФормы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;

	УстановитьВидимостьДоступность();
	
КонецПроцедуры

Процедура СформироватьОтчетПоСтандартнойФормеПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();

КонецПроцедуры

Процедура ОтбиратьПоКонтрагентуПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();

КонецПроцедуры

Процедура УстановитьВидимостьДоступность()
	
	ЭлементыФормы.КонтрагентДляОтбора.Доступность = ОтбиратьПоКонтрагенту;
	ЭлементыФормы.ПанельДополнительныхНастроек.ТекущаяСтраница = ЭлементыФормы.ПанельДополнительныхНастроек.Страницы[?(СформироватьОтчетПоСтандартнойФорме,"СтандартныеНастройки","ДополнительныеНастройки")];
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
		
	УстановитьВидимостьДоступность();

КонецПроцедуры
