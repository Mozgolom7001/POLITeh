////////////////////////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	Фильтр = СписокДокументов.ВыгрузитьКолонку("Документ");
	
	ТаблицаРезультат = УчетНДС.ОпределитьНаличиеСчетовФактурПолученных(?(Не ЗначениеЗаполнено(НачалоПериода), Неопределено, НачалоПериода), 
                                                               ?(Не ЗначениеЗаполнено(КонецПериода), Неопределено, КонецПериода),
                                                               ?(Не ЗначениеЗаполнено(Организация), Неопределено, Организация),
                                                               ?(Фильтр.Количество() > 0, Фильтр, Неопределено),
															   ВсеКромеСпискаДокументов,
                                                               НаличиеСчетаФактуры);
															   
	СформироватьОтчетПоНаличиюСчетовФактур(ЭлементыФормы.ТабличныйДокумент, ТаблицаРезультат);
	
	ЭлементыФормы.ТабличныйДокумент.Области.Заголовок.Видимость = ВыводЗаголовка;

КонецПроцедуры // ОбновитьОтчет()

// Обработчик действия "СформироватьНажатие" командной панели формы.
//
Процедура СформироватьНажатие(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // СформироватьНажатие()

// Обработчик действия "ЗаголовокНажатие" командной панели формы.
//
Процедура ЗаголовокНажатие(Кнопка)
	
	ВыводЗаголовка = НЕ ВыводЗаголовка;
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = ВыводЗаголовка;
	
	Если ЭлементыФормы.ТабличныйДокумент.Области.Найти("Заголовок") <> Неопределено Тогда
		ЭлементыФормы.ТабличныйДокумент.Области.Заголовок.Видимость = ВыводЗаголовка;
	КонецЕсли;
	
КонецПроцедуры // ЗаголовокНажатие()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	// Параметры для выбора организации
	УчетПоВсемОрганизациям = Истина; // Для совместимости с БП
	
	// Проверка ведения однофирменности
	ЭлементыФормы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
	
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
	ЭлементыФормы.СчетФактура.СписокВыбора.Добавить(Истина,       "Есть");
	ЭлементыФормы.СчетФактура.СписокВыбора.Добавить(Ложь,         "Нет");
	ЭлементыФормы.СчетФактура.СписокВыбора.Добавить(Неопределено, "Не имеет значения");
	
	ЭлементыФормы.ВсеКромеСпискаДокументов.СписокВыбора.Добавить(Ложь,   "Один из:");
	ЭлементыФормы.ВсеКромеСпискаДокументов.СписокВыбора.Добавить(Истина, "Все, кроме:");
	
	НаличиеСчетаФактуры      = Неопределено;
	ВсеКромеСпискаДокументов = Ложь;
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = ВыводЗаголовка;
	
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

// Обработчик события "Нажатие" кнопки "ВыбПериод". 
// Вызывает диалог выбора периода.
//
Процедура ВыбПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	
КонецПроцедуры // ВыбПериодНажатие()

// Обработчик события "НачалоВыбора" реквизита "Документ" ТЧ "СписокДокументов"
//
Процедура СписокДокументовДокументНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.СписокДокументов.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;

	Отбор = Новый Структура("Организация, Дата, КонецПериода", Организация, КонецПериода, КонецПериода);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "СписокДокументов");
	
КонецПроцедуры



