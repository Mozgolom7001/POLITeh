
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ОпределитьТипЗначенияОтбораКласса();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события Нажатие кнопки КнопкаВыполнить командной панели ОсновныеДействияФормы.
//
Процедура КнопкаВыполнитьНажатие(Элемент)
	
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриИзменении элемента формы ИспользоватьСвойстваИКатегории.
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина);

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки, Истина, Истина, Истина, Истина);
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы Показатели.
//
Процедура ПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы Показатели.
//
Процедура ПоказателиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ОбъектАнализа.
//
Процедура ОбъектАнализаПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина);

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки, Истина, Истина, Истина, Истина);
	
	// установим группировку по объекту анализа
	Если ПостроительОтчета.ИзмеренияСтроки.Найти(ОбъектАнализа) = Неопределено Тогда
		ПостроительОтчета.ИзмеренияСтроки.Очистить();
		ПостроительОтчета.ИзмеренияСтроки.Добавить(ОбъектАнализа);	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события Нажатие кнопки командной панели КоманднаяПанельПоказатели.УстановитьФлажки.
//
Процедура КоманднаяПанельПоказателиУстановитьФлажки(Кнопка)
	
	Для каждого Строка Из Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события Нажатие кнопки командной панели КоманднаяПанельПоказатели.СнятьФлажки.
//
Процедура КоманднаяПанельПоказателиСнятьФлажки(Кнопка)
	
	Для каждого Строка Из Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ОтборЗначениеКласс.
//
Процедура ОтборЗначениеКлассПриИзменении(Элемент)
	
	ОпределитьТипЗначенияОтбораКласса();
	
	ОтборФлагКласс = Истина;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ОтборВидСравненияКласс.
//
Процедура ОтборВидСравненияКлассПриИзменении(Элемент)
	
	ОпределитьТипЗначенияОтбораКласса();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КнопкаНастройкаПериода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаОкончания = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры

// Обработчик события ПередНачаломИзменения табличного поля ИзмеренияСтроки.
//
Процедура ИзмеренияСтрокиПередНачаломИзменения(Элемент, Отказ)

	ДобавитьСписокТиповГруппировки(ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные);

КонецПроцедуры // ИзмеренияСтрокиПередНачаломИзменения()

// Обработчик события ПриАктивизацииКолонки табличного поля ИзмеренияСтроки.
//
Процедура ИзмеренияСтрокиПриАктивизацииКолонки(Элемент)

	Если ЭлементыФормы.ИзмеренияСтроки.ТекущаяКолонка <> Неопределено И ЭлементыФормы.ИзмеренияСтроки.ТекущаяКолонка.Имя = "Тип" Тогда
	
		ДобавитьСписокТиповГруппировки(ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные);
	
	КонецЕсли;

КонецПроцедуры // ИзмеренияСтрокиПриАктивизацииКолонки()

// Процедура добавляет тип измерения для группировки "Элементы"
//
// Параметры
//  ТекущиеДанные элемента формы ИзмеренияСтроки
//
Процедура ДобавитьСписокТиповГруппировки(ИзмеренияСтрокиТекущиеДанные)

	Если ИзмеренияСтрокиТекущиеДанные <> Неопределено Тогда
		ЭлементыФормы.ИзмеренияСтроки.ТекущаяКолонка.ЭлементУправления.СписокВыбора.Очистить();
		ЭлементыФормы.ИзмеренияСтроки.ТекущаяКолонка.ЭлементУправления.СписокВыбора.Добавить(ТипИзмеренияПостроителяОтчета.Элементы);
	КонецЕсли;

КонецПроцедуры // ДобавитьСписокТиповГруппировки()


// Заполним список выбора для элемента формы ПараметрАнализа
Для каждого СтрокаТаблицы Из Показатели Цикл
	ЭлементыФормы.ПараметрАнализа.СписокВыбора.Добавить(СтрокаТаблицы.Имя, СтрокаТаблицы.Представление);
КонецЦикла;

// Заполним список выбора для элемента формы ОбъектАнализа
ЭлементыФормы.ОбъектАнализа.СписокВыбора = мСписокОбъектов;

// Заполним список выбора для элемента формы ОтборВидСравненияКласс
ЭлементыФормы.ОтборВидСравненияКласс.СписокВыбора.Добавить(ВидСравнения.Равно);
ЭлементыФормы.ОтборВидСравненияКласс.СписокВыбора.Добавить(ВидСравнения.НеРавно);
ЭлементыФормы.ОтборВидСравненияКласс.СписокВыбора.Добавить(ВидСравнения.ВСписке);
ЭлементыФормы.ОтборВидСравненияКласс.СписокВыбора.Добавить(ВидСравнения.НеВСписке);
