// Настройка периода
Перем НП;
// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

Процедура ДокументПланированияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы["ПланируемоеПоступлениеДенежныхСредств"].ПолучитьФормуВыбора(,Элемент,);
	
	ФормаВыбора.Отбор.ЦФО.Значение = ЦФО;
	ФормаВыбора.Отбор.ЦФО.Использование = ОтборЦФО;
	ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.ЦФО.Доступность=НЕ ОтборЦФО;
	
	Если НЕ (ОтборДатаНач='00010101' ИЛИ ОтборДатаКон='00010101') Тогда
		
		ФормаВыбора.Отбор.ДатаПоступления.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
		ФормаВыбора.Отбор.ДатаПоступления.ЗначениеС=НачалоДня(ОтборДатаНач);
		ФормаВыбора.Отбор.ДатаПоступления.ЗначениеПо=КонецДня(ОтборДатаКон);
		ФормаВыбора.Отбор.ДатаПоступления.Использование=Истина;
		ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.ДатаПоступления.Доступность=Ложь;
		
	ИначеЕсли НЕ ОтборДатаНач='00010101' Тогда
		
		ФормаВыбора.Отбор.ДатаПоступления.ВидСравнения=ВидСравнения.БольшеИлиРавно;
		ФормаВыбора.Отбор.ДатаПоступления.Значение=НачалоДня(ОтборДатаНач);
		ФормаВыбора.Отбор.ДатаПоступления.Использование=Истина;
		ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.ДатаПоступления.Доступность=Ложь;
		
	ИначеЕсли НЕ ОтборДатаКон='00010101' Тогда
		
		ФормаВыбора.Отбор.ДатаПоступления.ВидСравнения=ВидСравнения.МеньшеИлиРавно;
		ФормаВыбора.Отбор.ДатаПоступления.Значение=КонецДня(ОтборДатаКон);
		ФормаВыбора.Отбор.ДатаПоступления.Использование=Истина;
		ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.ДатаПоступления.Доступность=Ложь;
		
	КонецЕсли;

	ФормаВыбора.Отбор.Контрагент.Значение = Контрагент;
	ФормаВыбора.Отбор.Контрагент.Использование = ОтборКонтрагент;
	ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.Контрагент.Доступность=НЕ ОтборКонтрагент;
			
	ФормаВыбора.Отбор.Ответственный.Значение = ОтветственныйПоступление;
	ФормаВыбора.Отбор.Ответственный.Использование = ОтборОтветственный;
	ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.Ответственный.Доступность=НЕ ОтборОтветственный;
	
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.ДокументПланирования)Тогда
		ФормаВыбора.ПараметрТекущаяСтрока=ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.ДокументПланирования;
	КонецЕсли;
	
	ФормаВыбора.Открыть();
		
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить(Кнопка)
	
	Если ПланируемыеПоступленияДС.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		ПланируемыеПоступленияДС.Очистить();
		
	КонецЕсли;

	ЗаполнитьДокументыПланированияПоОстаткам();
		
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
		
	Если НП.Редактировать() Тогда
		
		ОтборДатаНач = НП.ПолучитьДатуНачала();
		ОтборДатаКон = НП.ПолучитьДатуОкончания();
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ДокументПланированияПриИзменении(Элемент)
	
	Запрос=СформироватьЗапрос(Элемент.Значение);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.ДокументПланирования = Выборка.ДокументПланирования;
		ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.ВалютаПоступление=Выборка.ВалютаПоступление;
		ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.ОстатокПоступление=Выборка.ОстатокПоступление;
		ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.ОстатокРазмещение=Выборка.ОстатокРазмещение;
		ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.Контрагент=Выборка.Контрагент;
		ЭлементыФормы.ПланируемыеПоступленияДС.ТекущиеДанные.Ответственный=Выборка.Ответственный;

	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный     = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	Если ЭтоНовый() Тогда
		ЭтотОбъект.УстановитьВремя(РежимАвтоВремя.ТекущееИлиПоследним);

		Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
			Ответственный = глЗначениеПеременной("глТекущийПользователь");
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Состояние) Тогда
			Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
		КонецЕсли;

	Иначе

		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);

	КонецЕсли;

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа.
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)

	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры

Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

НП = Новый НастройкаПериода;








