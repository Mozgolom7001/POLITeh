
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ТТНИсходящаяЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокЗапросовЕГАИС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыгрузитьТТН(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьАктРасхождений(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ПодтверждениеАктаРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтАктаРасхождений(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтказОтАктаРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОснование(Команда)
	
	СтрокаТТН = Элементы.Список.ТекущиеДанные;
	
	Если СтрокаТТН = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТТН.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВозврата = ИнтеграцияЕГАИСПереопределяемый.НайтиДокументИБПоДокументуЕГАИС
		(СтрокаТТН.Ссылка, "Исходящий");
	
	Если ЗначениеЗаполнено(СтруктураВозврата.Ссылка) Тогда
		ФормаДокумента = СтруктураВозврата.Ссылка.ПолучитьФорму();
		ФормаДокумента.Открыть();
	Иначе
		ОбщегоНазначения.СообщитьИнформациюПользователю("Документ-основание не найден");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктОтказаОтТТН"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыгрузитьДокумент(ВидДокумента)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Элементы.Список.ТекущиеДанные.Ссылка;
	
	Результат = ИнтеграцияЕГАИСКлиент.СформироватьИсходящийЗапрос(ВидДокумента, ПараметрыЗапроса);
	
	Если Результат.Результат Тогда
		Элементы.Список.Обновить();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно выгружен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнтеграцияЕГАИСКлиентСерверПереопределяемый.ПроверитьИспользованиеПодсистемы(Отказ);
КонецПроцедуры
