
// Хранит текущую дату документа
Перем мДатаДокумента;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));

	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.СоставКосвенныхРасходов, ЭлементыФормы.КоманднаяПанель.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(мКнопкиЗаполненияТЧ, СоответствиеТЧ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , "Продажа", ПараметрОбъектКопирования, ПараметрОснование);

		НачалоПериода = УчетНДС.ПолучитьНачалоПериодаПоУчетнойПолитике(Организация, Дата); 
		
	Иначе
		
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);

	КонецЕсли;
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	мДатаДокумента = Дата;
	
	Если Не ЭтоНовый() Тогда
		ПроверкаНалоговогоПериода();
	КонецЕсли;
	
	ОтобразитьНалоговыйПериод();

	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении реквизита Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект);

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода ставки НДС
// в строке табличной части "Товары".
//
Процедура СтавкаНДСПриИзменении(Элемент)

	// Рассчитать реквизиты табличной части.
	ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.НДСВсего = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.СуммаВсего, TRUE, FALSE, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры // ТоварыСтавкаНДСПриИзменении()

Процедура ОтобразитьНалоговыйПериод()
	                                                                 
	КонецПериода = УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(Организация, Дата);
	
	ЭлементыФормы.НалоговыйПериод.Заголовок = "Налоговый период: " + ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");;
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа.
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)

	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается по кнопке "Заполнить" в форме диалога документа.
// В процедуре реализуется алгоритм автоматического заполнения строк табличной части документа.
//
Процедура КоманднаяПанельЗаполнить(Кнопка)

	Если Ссылка.Проведен Тогда
		Предупреждение("Заполнение возможно только в непроведенном документе" , 60,);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачалоПериода)Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не установлен период заполнения документа!");
		Возврат;
	КонецЕсли;

	Если СоставКосвенныхРасходов.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ЗаполнитьТабличныеЧастиПоКосвеннымРасходам();

КонецПроцедуры  // КоманднаяПанельЗаполнить(Кнопка)

// Процедура вызывается по кнопке "Распределить" в форме диалога документа.
// В процедуре реализуется алгоритм распределения косвенных расходов в табличной
// части "СоставКосвенныхРасходов" на различные виды реализации в текущем периоде.
//
Процедура КоманднаяПанельРаспределить(Кнопка)

	РаспределитьПоВыручке();

КонецПроцедуры

// Процедура вызывается по кнопке "Рассчитать" из формы диалога документа.
// Выполняется расчет объемов реализации в текущем периоде по данным
// регистра НДСПродажи в разрезе различных ставок НДС.
//
Процедура КоманднаяПанельВыручкиРассчитать(Кнопка)

	РассчитатьВыручку();

КонецПроцедуры // КоманднаяПанельВыручкиРассчитать()

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)

	ПроверкаНалоговогоПериода();
	
	УстановитьВремя(РежимАвтоВремя.Последним);
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мДатаДокумента = Дата;
	ОтобразитьНалоговыйПериод();

	УстановитьВидимость();

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

Процедура ПроверкаНалоговогоПериода()
	
	НовоеНачалоПериода = УчетНДС.ПолучитьНачалоПериодаПоУчетнойПолитике(Организация, Дата);
	
	Если (НачалоПериода <> НовоеНачалоПериода) Тогда
	 
	 	Ответ = Вопрос("Установить значение периода документа по текущей дате?", РежимДиалогаВопрос.ДаНет,,,);

		Если Ответ = КодВозвратаДиалога.Нет Тогда
			
			Если ЗначениеЗаполнено(мДатаДокумента) И Не Дата = мДатаДокумента Тогда
				Дата = мДатаДокумента;
			КонецЕсли;			
			
		Иначе
			
			НачалоПериода = НовоеНачалоПериода;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	Если Дата < '20160701' Тогда
		ЭлементыФормы.СтруктураВыручки.ТекущаяСтраница = ЭлементыФормы.СтруктураВыручки.Страницы.Страница2кв2016;
	Иначе
		ЭлементыФормы.СтруктураВыручки.ТекущаяСтраница = ЭлементыФормы.СтруктураВыручки.Страницы.Страница3кв2016;
	КонецЕсли;
	
КонецПроцедуры

// Инициализация списка выбора для реквизита "ВидЦенности"
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.ПосредническиеУслуги);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.Товары);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежи);

