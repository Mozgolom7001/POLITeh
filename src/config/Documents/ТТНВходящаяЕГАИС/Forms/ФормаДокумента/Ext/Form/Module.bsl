
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ТТНВходящаяЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтаФорма, "СтатусОбработки", "Объект.СтатусОбработки");
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПроверитьИнформациюОбОшибке();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодтвердитьТТН(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктПодтвержденияТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьТТНСРасхождениями(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктОтказаОтТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьОтменуПроведения(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТоварыКоличествоФактПриИзменении(Элемент)
	
	МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("КоличествоФакт", 0));
	
	Если МассивСтрок.Количество() = Объект.Товары.Количество() Тогда
		Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = Ложь;
		Элементы.ФормаПодтвердитьТТН.Видимость = Истина;
	Иначе
		Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = Истина;
		Элементы.ФормаПодтвердитьТТН.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДоступностьЭлементовФормы()
	
	РедактируемыеСтатусы = Новый Массив;
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаПодтверждения);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаОтказа);
	РедактируемыеСтатусы.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаРасхождений);
	
	ТолькоПросмотр = РедактируемыеСтатусы.Найти(Объект.СтатусОбработки) = Неопределено;
	
	Элементы.ФормаПодтвердитьТТН.Видимость = НЕ ТолькоПросмотр;
	Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = НЕ ТолькоПросмотр;
	Элементы.ФормаОтказатьсяОтТТН.Видимость = НЕ ТолькоПросмотр;
	Элементы.ФормаЗапроситьОтменуПроведения.Видимость = Объект.СтатусОбработки = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктПодтверждения
		ИЛИ Объект.СтатусОбработки = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений;
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("КоличествоФакт", 0));
	
	Если МассивСтрок.Количество() = Объект.Товары.Количество() Тогда
		Элементы.ФормаПодтвердитьТТНСРасхождениями.Видимость = Ложь;
	Иначе
		Элементы.ФормаПодтвердитьТТН.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДокумент(ВидДокумента)
	
	Если Модифицированность ИЛИ НЕ Объект.Проведен Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не проведен.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	Результат = ИнтеграцияЕГАИСКлиент.СформироватьИсходящийЗапрос(ВидДокумента, ПараметрыЗапроса);
	
	Если Результат.Результат Тогда
		Прочитать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно подтвержден.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИнформациюОбОшибке()

	ИнформацияОбОшибке = РегистрыСведений.ПротоколОбменаЕГАИС.ТекстПоследнейОшибки(Объект.Ссылка);
	Элементы.ГруппаИнформацияОбОшибке.Видимость = НЕ ПустаяСтрока(ИнформацияОбОшибке);

КонецПроцедуры