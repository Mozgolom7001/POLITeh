
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ТТНВходящаяЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокЗапросовЕГАИС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьТТН(Команда)
	
	Результат = ИнтеграцияЕГАИСКлиент.ЗагрузитьДокументы();
	
	Если НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
	ТекстСообщения = НСтр("ru = 'Загрузка завершена.
								|Загружено документов: %ЗагруженоДокументов%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗагруженоДокументов%", Результат.ЗагруженоДокументов);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьТТН(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктПодтвержденияТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьТТНСРасхождениями(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктРасхожденийТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктОтказаОтТТН"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьОтменуПроведения(Команда)
	
	ВыгрузитьДокумент(ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыгрузитьДокумент(ВидДокумента)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Элементы.Список.ТекущиеДанные.Ссылка;
	
	Результат = ИнтеграцияЕГАИСКлиент.СформироватьИсходящийЗапрос(ВидДокумента, ПараметрыЗапроса);
	
	Если Результат.Результат Тогда
		Элементы.Список.Обновить();
		Если ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Запрос на отмену проведения отправлен.'"));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно подтвержден.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнтеграцияЕГАИСКлиентСерверПереопределяемый.ПроверитьИспользованиеПодсистемы(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНайтиДокументИБ(Команда)
		
	ТТНВходящаяЕГАИС = Элементы.Список.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТТНВходящаяЕГАИС) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПолучитьДополнительныеДанныеПриОтказе(ТТНВходящаяЕГАИС);
	
	ПереданОтветВЕГАИС = Ложь;
	ПереданОтказВЕГАИС = Ложь;
	ТолькоПоиск        = Ложь;
	
	Если ДополнительныеПараметры.СтатусОбработки = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктПодтверждения") Тогда
		ПереданОтветВЕГАИС = Истина;
		ТолькоПоиск        = Истина;
	ИначеЕсли ДополнительныеПараметры.СтатусОбработки = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктОтказа") Тогда
		ПереданОтказВЕГАИС = Истина;
		ТолькоПоиск        = Истина;
	КонецЕсли;
	
	ДокументИБ = ИнтеграцияЕГАИСПереопределяемый.СоздатьНайтиДокументИнформационнойБазы(ТТНВходящаяЕГАИС, ТолькоПоиск);
	Элементы.Список.Обновить();
	Если ДокументИБ = Неопределено И ТолькоПоиск Тогда
		Если ДополнительныеПараметры.СтатусОбработки = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктПодтверждения") Тогда
			СтрокаСообщения = НСтр("ru = 'Накладная уже подтверждена актом, создание не возможно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
			Возврат;
		ИначеЕсли ДополнительныеПараметры.СтатусОбработки = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктОтказа") Тогда
			СтрокаСообщения = НСтр("ru = 'В ЕГАИС уже передан отказ от накладной, создание не возможно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
			Возврат;
		КонецЕсли;
	ИначеЕсли ДокументИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", ДокументИБ);
	
	ОткрытьФорму("Документ."+ДокументИБ.Метаданные().Имя+".ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДополнительныеДанныеПриОтказе(ДокументСсылка)
	
	ДополнительныеПараметры = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.Ссылка,
	|	ТТНВходящаяЕГАИС.СтатусОбработки
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДополнительныеПараметры.Вставить("Ссылка", Выборка.Ссылка);
		ДополнительныеПараметры.Вставить("СтатусОбработки", Выборка.СтатусОбработки);
		
	КонецЕсли;
	
	Возврат ДополнительныеПараметры
	
КонецФункции
