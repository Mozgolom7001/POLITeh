////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// хранит старое значение элемент "Типовая анкета"
Перем мСтараяТиповаяАнкета;

// Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мТекущаяДатаДокумента;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ВопросыИОтветы,ЭлементыФормы.КоманднаяПанельВопросыИОтветы);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры


// Функция проверяет пустая строка или нет.
// Используется для формирования представления телефона
//
// Параметры
//	ВыбСтрока		– Строка – проверяемая строка
//	ПризнакЗапятой	– Булево
//
// Возвращаемое значение:
//	Строка			– пустая строка
//
Функция ПроверкаПустойСтроки(ВыбСтрока, ПризнакЗапятой = Истина)
	
	Если ПустаяСтрока(ВыбСтрока) Тогда
		Возврат "";
		
	Иначе
		Возврат ?(ПризнакЗапятой,",","")+" ";
		
	КонецЕсли;
	
КонецФункции // ПроверкаПустойСтроки()

// Процедура изменяет видимость и доступность элементов управления в зависимости от вида анкеты
//
Процедура ИзменитьВидимостьДоступностьПоВидуАнкеты()
	
	Если РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ПравоАдминистрирования") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТиповаяАнкета.Пустая() И ТиповаяАнкета.ВидАнкеты = Перечисления.ВидыАнкет.Тестирование Тогда
		ЭлементыФормы.ПанельОтветов.ТекущаяСтраница		= ЭлементыФормы.ПанельОтветов.Страницы.Тестирование;
		ЭлементыФормы.ОпрашиваемоеЛицо.ТолькоПросмотр	= Истина;
		ЭлементыФормы.ТиповаяАнкета.ТолькоПросмотр		= Истина;
		
	Иначе
		ЭлементыФормы.ПанельОтветов.ТекущаяСтраница		= ЭлементыФормы.ПанельОтветов.Страницы.Опрос;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура АктуализироватьТЧСоставногоОтвета(Элемент, Отказ)
	
	ДанныеСтроки = ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вопрос",	ДанныеСтроки.Вопрос);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыДляАнкетирования.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетирования.КолонкиТаблицы.(
	|		Ссылка,
	|		НомерСтроки,
	|		КолонкаТаблицы
	|	)
	|ИЗ
	|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|ГДЕ
	|	ВопросыДляАнкетирования.Ссылка = &Вопрос";
	
	Вопрос = Запрос.Выполнить().Выбрать();
	Вопрос.Следующий();
	
	Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
		НомерСтроки = Элемент.ТекущаяСтрока.НомерСтроки;
	КонецЕсли;
	
	Если ТаблицаСоставногоОтвета.Количество() = 0 тогда
		СтрокиКУдалению = СоставнойОтвет.НайтиСтроки(Новый Структура("ВопросВладелец", Вопрос));
		Для Каждого СтрокаДляУдаления Из СтрокиКУдалению Цикл
			СоставнойОтвет.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
	Иначе
		// здесь при редактировании составного ответа удаляем все строки соответствуюшие вопросу владельцу
		// и заново их добавляем
		// для табличного вопроса удаляем все ответы соответствующие данной строке таблицы и заново их добавляем
		// связано с тем, что у табличного вопроса строки фиксированы, а у составного их может быть в общем случае
		// столько, сколько у него вариантов ответа
		
		Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
			СтруктураПоиска = Новый Структура("НомерСтрокиВТаблице,ВопросВладелец");
			//для табличного вопроса будем искать еще и по номеру строки (это ноер строки в таблице табличного вопроса)
			СтруктураПоиска.Вставить("НомерСтрокиВТаблице", НомерСтроки);
			
		Иначе
			СтруктураПоиска = Новый Структура("ВопросВладелец");
			
		КонецЕсли;
		
		СтруктураПоиска.Вставить("ВопросВладелец", ДанныеСтроки.Вопрос);
		
		СтрокиКУдалению = СоставнойОтвет.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаДляУдаления Из СтрокиКУдалению Цикл
			СоставнойОтвет.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
		СтрокаСоставногоВопроса					= Элемент.ТекущаяСтрока;
		
		Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
			Для Каждого СтрокаОтвета Из ТаблицаСоставногоОтвета Цикл
				НоваяСтрокаОтвета						= СоставнойОтвет.Добавить();
				НоваяСтрокаОтвета.Вопрос				= ДанныеСтроки.Вопрос;
				НоваяСтрокаОтвета.ВопросВладелец		= ДанныеСтроки.Вопрос;
				НоваяСтрокаОтвета.НомерСтрокиВТаблице	= СтрокаОтвета.НомерСтроки;
				НоваяСтрокаОтвета.ТиповойОтвет			= СтрокаОтвета.ВариантОтвета;
				НоваяСтрокаОтвета.Ответ					= СтрокаОтвета.Ответ;
			КонецЦикла;
			
		Иначе
			Для Каждого КолонкаОтвета Из Вопрос.КолонкиТаблицы.Выгрузить() Цикл
				НоваяСтрокаОтвета = СоставнойОтвет.Добавить();
				НоваяСтрокаОтвета.Вопрос				= КолонкаОтвета.КолонкаТаблицы;
				НоваяСтрокаОтвета.ВопросВладелец		= ДанныеСтроки.Вопрос;
				НоваяСтрокаОтвета.НомерСтрокиВТаблице	= НомерСтроки;
				НоваяСтрокаОтвета.ТиповойОтвет			= СтрокаСоставногоВопроса["колонка"+КолонкаОтвета.НомерСтроки];
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСписокВопросов()
	
	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументОпрос",	Ссылка);
	Запрос.УстановитьПараметр("ТиповаяАнкета",	ТиповаяАнкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|	ВопросыАнкеты.Раздел КАК Раздел,
	|	ВопросыАнкеты.Вопрос КАК Вопрос,
	|	ОпросВопросы.Ответ,
	|	ОпросВопросы.ТиповойОтвет,
	|	NULL КАК НомерСтрокиВТаблице,
	|	NULL КАК КолонкаТаблицы,
	|	ВопросыАнкеты.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос,
	|	NULL КАК НомерСтрокиКолонки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|		ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос
	|	ИЗ
	|		Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|	ГДЕ
	|		ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета) КАК ВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.Вопросы КАК ОпросВопросы
	|		ПО ВопросыАнкеты.Вопрос = ОпросВопросы.Вопрос
	|			И (ОпросВопросы.Ссылка = &ДокументОпрос)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВопросыАнкеты.НомерСтроки,
	|	ВопросыАнкеты.Раздел,
	|	ВопросыАнкеты.Вопрос,
	|	ОпросСоставнойОтвет.Ответ,
	|	ОпросСоставнойОтвет.ТиповойОтвет,
	|	ОпросСоставнойОтвет.НомерСтрокиВТаблице,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы,
	|	ВопросыАнкеты.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|		ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос
	|	ИЗ
	|		Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|	ГДЕ
	|		ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета) КАК ВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.СоставнойОтвет КАК ОпросСоставнойОтвет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы КАК КолонкаТаблицы,
	|				ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки КАК НомерСтроки,
	|				ВопросыДляАнкетированияКолонкиТаблицы.Ссылка.КоличествоСтрокТаблицы КАК КоличествоСтрокТаблицы
	|			ИЗ
	|				ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
	|			ГДЕ
	|				ВопросыДляАнкетированияКолонкиТаблицы.Ссылка В
	|						(ВЫБРАТЬ
	|							ТиповыеАнкетыВопросыАнкеты.Вопрос
	|						ИЗ
	|							Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|						ГДЕ
	|							ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета)) КАК ВопросыДляАнкетированияКолонкиТаблицы
	|			ПО ОпросСоставнойОтвет.Вопрос = ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы
	|		ПО ВопросыАнкеты.Вопрос = ОпросСоставнойОтвет.ВопросВладелец
	|			И (ОпросСоставнойОтвет.Ссылка = &ДокументОпрос)
	|ГДЕ
	|	(ВопросыДляАнкетированияКолонкиТаблицы.КоличествоСтрокТаблицы >= ОпросСоставнойОтвет.НомерСтрокиВТаблице
	|				И ОпросСоставнойОтвет.ВопросВладелец.ТипОтветаНаВопрос = ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.Табличный)
	|			ИЛИ ОпросСоставнойОтвет.ВопросВладелец.ТипОтветаНаВопрос = ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	НомерСтрокиВТаблице,
	|	НомерСтрокиКолонки
	|ИТОГИ ПО
	|	Вопрос
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Вопросы.Очистить();
	СоставнойОтвет.Очистить();
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗапроса.Следующий() Цикл
		Если ВыборкаЗапроса.Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный ИЛИ ВыборкаЗапроса.Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
			НоваяСтрока = Вопросы.Добавить();
			НоваяСтрока.Вопрос			= ВыборкаЗапроса.Вопрос;
			НоваяСтрока.ТиповойОтвет	= ВыборкаЗапроса.ТиповойОтвет;
			НоваяСтрока.Ответ			= ВыборкаЗапроса.Ответ;
			
			ВыборкаЗапросаТабличныйВопрос	= ВыборкаЗапроса.Выбрать();
			Пока ВыборкаЗапросаТабличныйВопрос.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(ВыборкаЗапросаТабличныйВопрос.КолонкаТаблицы) И (ВыборкаЗапросаТабличныйВопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный) тогда
					Продолжить;
				КонецЕСли;
				Если НЕ ЗначениеЗаполнено(ВыборкаЗапросаТабличныйВопрос.ТиповойОтвет) И (ВыборкаЗапросаТабличныйВопрос.Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета) тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СоставнойОтвет.Добавить();
				Если ВыборкаЗапроса.Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
					НоваяСтрока.Вопрос			= ВыборкаЗапросаТабличныйВопрос.Вопрос;
				Иначе
					НоваяСтрока.Вопрос			= ВыборкаЗапросаТабличныйВопрос.КолонкаТаблицы;
				КонецЕсли;
				
				НоваяСтрока.ВопросВладелец		= ВыборкаЗапросаТабличныйВопрос.Вопрос;
				Если ЗначениеЗаполнено(ВыборкаЗапросаТабличныйВопрос.ТиповойОтвет) тогда
					НоваяСтрока.ТиповойОтвет	= ВыборкаЗапросаТабличныйВопрос.ТиповойОтвет;
				Иначе
					НазначитьТипОтвета(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока.Ответ				= ВыборкаЗапросаТабличныйВопрос.Ответ;
				НоваяСтрока.НомерСтрокиВТаблице	= ВыборкаЗапросаТабличныйВопрос.НомерСтрокиВТаблице;
			КонецЦикла;
			
		Иначе
			НоваяСтрока = Вопросы.Добавить();
			НоваяСтрока.Вопрос	= ВыборкаЗапроса.Вопрос;
			ВыборкаЗапросаОтвет	= ВыборкаЗапроса.Выбрать();
			
			Пока ВыборкаЗапросаОтвет.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(ВыборкаЗапросаОтвет.ТиповойОтвет) тогда
					НазначитьТипОтвета(НоваяСтрока);
					Продолжить;
				КонецЕсли;
				НоваяСтрока.ТиповойОтвет	= ВыборкаЗапросаОтвет.ТиповойОтвет;
				НоваяСтрока.Ответ			= ВыборкаЗапросаОтвет.Ответ;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля ВопросыИОтветы
//
Процедура ОбработчикОжиданияВопросыИОтветыПриАктивизацииСтроки()
	
	ТаблицаСоставногоОтвета.Очистить();
	ТаблицаСоставногоОтвета.Колонки.Очистить();
	
	ДанныеСтроки = ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вопрос",	ДанныеСтроки.Вопрос);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыДляАнкетирования.ТипЗначения,
	|	ВопросыДляАнкетирования.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетирования.КоличествоСтрокТаблицы,
	|	ВопросыДляАнкетирования.КолонкиТаблицы.(
	|		НомерСтроки,
	|		КолонкаТаблицы,
	|		КолонкаТаблицы.ТипЗначения КАК ТипЗначения,
	|		КолонкаТаблицы.ПолнаяФормулировка КАК ПолнаяФормулировка
	|	)
	|ИЗ
	|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|ГДЕ
	|	ВопросыДляАнкетирования.Ссылка = &Вопрос";
	
	Вопрос = Запрос.Выполнить().Выбрать();
	Вопрос.Следующий();
	
	Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный тогда
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьПорядокСтрок 	= Ложь;
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьСоставСтрок 	= Ложь;
		
		КолонкиТабличногоВопроса = Вопрос.КолонкиТаблицы.Выгрузить();
		
		ТаблицаСоставногоОтвета.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№");
		Для Каждого КолонкаТаблицы Из КолонкиТабличногоВопроса Цикл
			ТаблицаСоставногоОтвета.Колонки.Добавить("Колонка"+КолонкаТаблицы.НомерСтроки, КолонкаТаблицы.ТипЗначения, КолонкаТаблицы.ПолнаяФормулировка, 10);
		КонецЦикла;
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.СоздатьКолонки();
		
		Индекс = 0;
		Для Каждого КолонкаТаблицы Из ЭлементыФормы.ТабличноеПолеСоставногоОтвета.Колонки Цикл
			Если КолонкаТаблицы.Имя = "НомерСтроки" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(КолонкиТабличногоВопроса[Индекс].ТипЗначения) = Тип("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования") Тогда
				КолонкаТаблицы.ЭлементУправления.ВыборПоВладельцу = КолонкиТабличногоВопроса[Индекс].КолонкаТаблицы;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Для ИндексНомераСтроки = 1 по Вопрос.КоличествоСтрокТаблицы Цикл
			
			ПараметрыПоиска = Новый Структура("ВопросВладелец, НомерСтрокиВТаблице");
			ПараметрыПоиска.ВопросВладелец		= ДанныеСтроки.Вопрос;
			ПараметрыПоиска.НомерСтрокиВТаблице	= ИндексНомераСтроки;
			
			ОтветНаТабличныйВопрос = СоставнойОтвет.НайтиСтроки(ПараметрыПоиска);
			
			СтрокаОтвет = ТаблицаСоставногоОтвета.Добавить();
			СтрокаОтвет.НомерСтроки = ИндексНомераСтроки;
			НомерКолонки = 1; // пропустим номер строки
			
			Для Каждого КолонкаОтвет Из ОтветНаТабличныйВопрос Цикл
				СтрокаОтвет[НомерКолонки] = КолонкаОтвет.ТиповойОтвет;
				НомерКолонки = НомерКолонки + 1;
				Если НомерКолонки >= ТаблицаСоставногоОтвета.Колонки.Количество() тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьПорядокСтрок 	= Истина;
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьСоставСтрок 	= Истина;
		
		КолонкиТабличногоВопроса = Вопрос.КолонкиТаблицы.Выгрузить();
		
		ТаблицаСоставногоОтвета.Колонки.Добавить("НомерСтроки",		Новый ОписаниеТипов("Число"),	"№");
		ТаблицаСоставногоОтвета.Колонки.Добавить("ВариантОтвета",	Вопрос.ТипЗначения,				"Составной ответ");
		ТаблицаСоставногоОтвета.Колонки.Добавить("Ответ",			Новый ОписаниеТипов("Строка"),	"Развернутый ответ");
		
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.СоздатьКолонки();
		
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.Колонки.ВариантОтвета.ЭлементУправления.ВыборПоВладельцу = ДанныеСтроки.Вопрос;
		
		ПараметрыПоиска					= Новый Структура("ВопросВладелец");
		ПараметрыПоиска.ВопросВладелец	= ДанныеСтроки.Вопрос;
		
		МассивСтрок						= СоставнойОтвет.НайтиСтроки(ПараметрыПоиска);
		
		Для Каждого ИндексНомераСтроки Из МассивСтрок Цикл
			СтрокаОтвет					= ТаблицаСоставногоОтвета.Добавить();
			СтрокаОтвет.НомерСтроки		= ИндексНомераСтроки.НомерСтрокиВТаблице;
			СтрокаОтвет.ВариантОтвета	= ИндексНомераСтроки.ТиповойОтвет;
			СтрокаОтвет.Ответ			= ИндексНомераСтроки.Ответ;
		КонецЦикла;
		
	Иначе
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьПорядокСтрок	= Ложь;
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьСоставСтрок		= Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработчикОжиданияВопросыИОтветыПриАктивизацииСтроки

Процедура ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен()
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗавершитьОпрос.Пометка = ОпросЗавершен;
	
	Если Не ТиповаяАнкета.Пустая() И ТиповаяАнкета.ВидАнкеты = Перечисления.ВидыАнкет.Тестирование Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗавершитьОпрос.Текст = "Тестирование завершено";
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗавершитьОпрос.Текст = "Опрос завершен";
	КонецЕсли;
	
	Если Не (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ПравоАдминистрирования")) Тогда
		
		ТолькоПросмотр = ОпросЗавершен;
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗавершитьОпрос.Доступность = НЕ ОпросЗавершен;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	Иначе
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	мСтараяТиповаяАнкета = ТиповаяАнкета;
	
	ИзменитьВидимостьДоступностьПоВидуАнкеты();
	
	ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен();
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	ПроверитьОбязательноЗаполняемыеОтветы();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТиповойОтвет = СокрЛП(ЗначениеВыбора.Поле1);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле2);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле3);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле4);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле5);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле6);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле7);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле8);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле9);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле10);
	
	ДанныеСтроки.ТиповойОтвет = ТиповойОтвет;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры



// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

Процедура ОсновныеДействияФормыЗавершитьОпрос(Кнопка)
	
	Если Не ОпросЗавершен Тогда
		ТекстВопроса = "Завершить опрос?";
	Иначе
		ТекстВопроса = "Вы уверены, что следует разрешить модифицирование документа?";
	КонецЕсли;
		
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОпросЗавершен = Не ОпросЗавершен;
	
	ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен();
	
	ЗаписатьВФорме();
	
КонецПроцедуры


Процедура КоманднаяПанельВопросыИОтветыОбновить(Кнопка)
	
	ОбновитьСписокВопросов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	мТекущаяДатаДокумента = Дата;
	
КонецПроцедуры // ДатаПриИзменении

// Процедура заполняет список вопросов по выбранной пользователем "Типовой анкете"
//
// Параметры:
//	Элемент		- элемент формы, который отображает типовую анкету.
//
Процедура ТиповаяАнкетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ТиповаяАнкета) тогда
		Если Вопросы.Количество() > 0 тогда
			Ответ = Вопрос("Список вопросов и ответов будет очищен и заполнен новыми данными! Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, );
			Если Ответ = КодВозвратаДиалога.Да тогда
				Вопросы.Очистить();
				СоставнойОтвет.Очистить();
				
			Иначе
				ТиповаяАнкета = мСтараяТиповаяАнкета;
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьВопросыАнкеты(Элемент.Значение);
	КонецЕсли;
	мСтараяТиповаяАнкета = ТиповаяАнкета;
	
	ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен();
	
КонецПроцедуры


Процедура КнопкаНачатьТестированиеНажатие(Элемент)
	
	ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветовТеста");
	ФормаРедактированияОтвета.ОткрытьМодально();
	
	ВопросыИОтветыПриАктивизацииСтроки(ЭлементыФормы.ВопросыИОтветы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ВопросыИОтветы

// Процедура - обработчик события "ПередНачаломИзменения" табличного поля.
Процедура ВопросыИОтветыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущаяКолонка.Имя <> "ТиповойОтвет" Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вопрос",	ДанныеСтроки.Вопрос);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыДляАнкетирования.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетирования.ВидКонтактнойИнформации.Тип КАК ТипКонтактнойИнформации,
	|	ВопросыДляАнкетирования.ПолнаяФормулировка
	|ИЗ
	|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|ГДЕ
	|	ВопросыДляАнкетирования.Ссылка = &Вопрос";
	
	Вопрос = Запрос.Выполнить().Выбрать();
	Вопрос.Следующий();
	
	Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.КонтактнаяИнформация Тогда
		Отказ = Истина;
		
		Если Вопрос.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаАдрес");
			ФормаРедактированияОтвета.ТиповойОтвет = ДанныеСтроки.ТиповойОтвет;
			ФормаРедактированияОтвета.ОткрытьМодально();
			ДанныеСтроки.ТиповойОтвет = ФормаРедактированияОтвета.ТиповойОтвет;
			
		ИначеЕсли Вопрос.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаТелефон");
			ФормаРедактированияОтвета.ТиповойОтвет = ДанныеСтроки.ТиповойОтвет;
			ФормаРедактированияОтвета.ОткрытьМодально();
			ДанныеСтроки.ТиповойОтвет = ФормаРедактированияОтвета.ТиповойОтвет;
			
		Иначе
			ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Ложь;
			ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Булево Тогда
		Отказ = Истина;
		
		ПредыдущееЗначение = ДанныеСтроки.ТиповойОтвет;
		Если ТипЗнч(ПредыдущееЗначение) <> Тип("Булево") Тогда
			ПредыдущееЗначение = Ложь;
		КонецЕсли;
		ДанныеСтроки.ТиповойОтвет = НЕ ПредыдущееЗначение;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Текст тогда
		Отказ = Истина;
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаТекст");
		ФормаРедактированияОтвета.ТиповойОтвет = ДанныеСтроки.ТиповойОтвет;
		ФормаРедактированияОтвета.ОткрытьМодально();
		ДанныеСтроки.ТиповойОтвет = ФормаРедактированияОтвета.ТиповойОтвет;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Строка Тогда
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Ложь;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Число ИЛИ
			  Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Дата Тогда
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Истина;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.ОдинИзВариантовОтвета Тогда
		Отказ = Истина;
		
		Запрос.УстановитьПараметр("Вопрос",	ДанныеСтроки.Вопрос);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВариантыОтветовОпросов.Ссылка КАК Ответ,
		|	ВариантыОтветовОпросов.Наименование,
		|	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет
		|ИЗ
		|	Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
		|ГДЕ
		|	ВариантыОтветовОпросов.Владелец = &Вопрос";
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаСписок");
		ФормаРедактированияОтвета.ФормулировкаВопроса	= Вопрос.ПолнаяФормулировка;
		ФормаРедактированияОтвета.МассивОтветов			= Запрос.Выполнить().Выгрузить();
		ФормаРедактированияОтвета.ТиповойОтвет			= ДанныеСтроки.ТиповойОтвет;
		ФормаРедактированияОтвета.РазвернутыйОтвет		= ДанныеСтроки.Ответ;
		ФормаРедактированияОтвета.ОткрытьМодально();
		ДанныеСтроки.ТиповойОтвет	= ФормаРедактированияОтвета.ТиповойОтвет;
		ДанныеСтроки.Ответ			= ФормаРедактированияОтвета.РазвернутыйОтвет;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
		Отказ = Истина;
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветовТеста");
		ФормаРедактированияОтвета.Вопрос = ДанныеСтроки.Вопрос;
		ФормаРедактированияОтвета.ОткрытьМодально();
		ОбработчикОжиданияВопросыИОтветыПриАктивизацииСтроки();

	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
		Отказ = Истина;
		
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Ложь;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
		
	Иначе
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Истина;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличного поля.
// сделаем поле развернутого ответа доступным тогда, когда это требует типовой ответ
//
// Параметры:
//	Элемент		- табличное поле, которое отображает т.ч.
//
Процедура ВопросыИОтветыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Элемент.Колонки.ТиповойОтвет.Видимость тогда
		Если ДанныеСтроки.Вопрос.ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес тогда
			МассивПолей = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ДанныеСтроки.ТиповойОтвет, "¤");
			
			Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтрЗаменить(ДанныеСтроки.ТиповойОтвет, "¤", ","));
			
			ОформлениеСтроки.Ячейки.ТиповойОтвет.Текст = Представление;
			
		ИначеЕсли ДанныеСтроки.Вопрос.ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон тогда
			МассивПолей = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ДанныеСтроки.ТиповойОтвет, "¤");
			Если МассивПолей.Количество() > 0 тогда
				Поле1 = МассивПолей[0];
			КонецЕсли;
			Если МассивПолей.Количество() > 1 тогда
				Поле2 = МассивПолей[1];
			КонецЕсли;
			Если МассивПолей.Количество() > 2 тогда
				Поле3 = МассивПолей[2];
			КонецЕсли;
			Если МассивПолей.Количество() > 3 тогда
				Поле4 = МассивПолей[3];
			КонецЕсли;
			Если МассивПолей.Количество() > 4 тогда
				Коммент = МассивПолей[4];
			КонецЕсли;
			Предст = ""+?(Не ПустаяСтрока(Поле1),("+"+Поле1),"");
			Предст = Предст + ?((Не ПустаяСтрока(Поле2)),(ПроверкаПустойСтроки(Предст,Ложь)+"(" + Поле2 + ")"),"");
			Предст = Предст + ?((Не ПустаяСтрока(Поле3)),(ПроверкаПустойСтроки(Предст,ПустаяСтрока(Поле2))+Поле3),"");
			Предст = Предст + ?((Не ПустаяСтрока(Поле4)),(ПроверкаПустойСтроки(Предст)+"доб. " + Поле4),"");
			Предст = Предст + ?((Не ПустаяСтрока(Коммент)),(ПроверкаПустойСтроки(Предст)+" " + Коммент),"");
			ОформлениеСтроки.Ячейки.ТиповойОтвет.Текст = Предст;
			
		Иначе
			ОформлениеСтроки.Ячейки.ТиповойОтвет.Текст = ""+Формат(ДанныеСтроки.ТиповойОтвет, "ДФ=dd.MM.yyyy; ДП=; БЛ=Нет; БИ=Да")+ ?(ПустаяСтрока(ДанныеСтроки.Ответ), "", ": "+ДанныеСтроки.Ответ);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВопросыИОтветыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияВопросыИОтветыПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ ВопросыИОтветы

// Процедура - обработчик события "Очистка" поля ввода "Вопрос".
Процедура ВопросыИОтветыВопросОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.ТиповойОтвет = Справочники.ВариантыОтветовОпросов.ПустаяСсылка();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ТиповойОтвет".
// если типовой ответ не требует дополнительных пояснений - очистим развернутый ответ
Процедура ВопросыИОтветыТиповойОтветПриИзменении(Элемент)
	
	ДанныеСтроки = ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные;
	
	Если Не ДанныеСтроки.Вопрос.Предопределенный Тогда
		Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ВариантыОтветовОпросов") Тогда
			Если Не Элемент.Значение.ТребуетРазвернутыйОтвет Тогда
				ДанныеСтроки.Ответ = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВопросыИОтветыТиповойОтветОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.ТиповойОтвет = ОбщегоНазначения.ПустоеЗначениеТипа(ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.Вопрос.ТипЗначения.Типы()[0]);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТабличноеПолеСоставногоОтвета

Процедура ТабличноеПолеСоставногоОтветаПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.Колонки.Найти("ВариантОтвета") <> Неопределено Тогда
		Если Элемент.ТекущаяСтрока.ВариантОтвета.Владелец.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
			Элемент.Колонки.Ответ.ЭлементУправления.Доступность = Элемент.ТекущаяСтрока.ВариантОтвета.ТребуетРазвернутыйОтвет;
			//будет срабатывать только для составных вопросов
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеСоставногоОтветаПриАктивизацииКолонки(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.Колонки.Найти("ВариантОтвета") <> Неопределено Тогда
		Если Элемент.ТекущаяСтрока.ВариантОтвета.Владелец.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
			Элемент.Колонки.Ответ.ЭлементУправления.Доступность = Элемент.ТекущаяСтрока.ВариантОтвета.ТребуетРазвернутыйОтвет;
			//будет срабатывать только для составных вопросов
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеСоставногоОтветаПослеУдаления(Элемент)
	
	АктуализироватьТЧСоставногоОтвета(Элемент, Ложь);
	
КонецПроцедуры

Процедура ТабличноеПолеСоставногоОтветаПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока тогда
		Попытка
			Элемент.ТекущиеДанные.НомерСтроки = Элемент.Значение[ТаблицаСоставногоОтвета.Количество()-2].НомерСтроки+1;
		Исключение
			Элемент.ТекущиеДанные.НомерСтроки = 1;
		КонецПопытки;
	КонецЕсли;
	Попытка
		Элемент.Колонки.Ответ.ЭлементУправления.Доступность = Элемент.ТекущиеДанные.ВариантОтвета.ТребуетРазвернутыйОтвет;
		//будет срабатывать только для составных вопросов
	Исключение
	КонецПопытки
	
КонецПроцедуры

Процедура ТабличноеПолеСоставногоОтветаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	АктуализироватьТЧСоставногоОтвета(Элемент, Отказ);
	
	Если Элемент.ТекущиеДанные = Неопределено ИЛИ ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
		Если НЕ Элемент.ТекущиеДанные.ВариантОтвета.ТребуетРазвернутыйОтвет тогда
			Элемент.ТекущиеДанные.Ответ = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
