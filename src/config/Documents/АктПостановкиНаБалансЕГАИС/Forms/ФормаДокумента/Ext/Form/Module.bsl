
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Документы.АктПостановкиНаБалансЕГАИС.УстановитьУсловноеОформлениеСтатусаОбработки(ЭтаФорма, "СтатусОбработки", "Объект.СтатусОбработки");
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПроверитьИнформациюОбОшибке();
		
		ДоступностьЭлементовФормы();
	КонецЕсли;
	
	КлючСвязи = КлючСвязи + 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборАкцизныхМарок();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктПостановкиНаБалансЕГАИСТовары.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК АктПостановкиНаБалансЕГАИСТовары
	|ГДЕ
	|	АктПостановкиНаБалансЕГАИСТовары.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КлючСвязи = Макс(КлючСвязи, Число(Выборка.КлючСвязи));
	КонецЦикла;
	
	ПроверитьИнформациюОбОшибке();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПричинаПостановкиНаБалансПриИзменении(Элемент)
	
	Элементы.АктСписанияЕГАИС.Видимость = Объект.ПричинаПостановкиНаБаланс = ПредопределенноеЗначение("Перечисление.ПричиныПостановкиНаБалансЕГАИС.Пересортица");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = КлючСвязи;
		КлючСвязи = КлючСвязи + 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборАкцизныхМарок();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.КлючСвязи = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого АМ Из Объект.АкцизныеМарки Цикл
		Если АМ.КлючСвязи = ТекущиеДанные.КлючСвязи Тогда
			Объект.АкцизныеМарки.Удалить(АМ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ПостановкаНаСклад = Объект.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктПостановкиНаБаланс");
	
	Элементы.ТоварыГруппаПостановкаНаСклад.Видимость = ПостановкаНаСклад;
	Элементы.АкцизныеМарки.Видимость = ПостановкаНаСклад;
	Элементы.ТоварыУказатьАкцизнуюМарку.Видимость = ПостановкаНаСклад;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УказатьАкцизнуюМарку(Команда)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ МаркируемаяПродукция(ТекущиеДанные.АлкогольнаяПродукция) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ввод акцизной марки возможен только для маркируемой алкогольной продукции.'"));
		Возврат;
	КонецЕсли;
	
	КодАкцизнойМарки = "";
	ВвестиСтроку(КодАкцизнойМарки, НСтр("ru = 'Введите акцизную марку'"), 68);
	
	Если НЕ ЗначениеЗаполнено(КодАкцизнойМарки) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ = Объект.АкцизныеМарки.Добавить();
	СтрокаТЧ.КодАкцизнойМарки = КодАкцизнойМарки;
	СтрокаТЧ.КлючСвязи = ТекущиеДанные.КлючСвязи;
	
	УстановитьОтборАкцизныхМарок();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьАкцизнуюМарку(Команда)
	
	ТекущиеДанные = Элементы.АкцизныеМарки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.АкцизныеМарки.Удалить(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьАкцизнуюМарку(Команда)
	
	СтрокаТабличнойЧасти = ЭтаФорма.Элементы.Товары.ТекущиеДанные;
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФормаСканированияМарки = ПолучитьФорму("ОбщаяФорма.ФормаСканированияАкцизнойМарки", , ЭтаФорма);
	ФормаСканированияМарки.КлючСтроки = СтрокаТабличнойЧасти.КлючСвязи;
	ШтрихкодМарки = ФормаСканированияМарки.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(ШтрихкодМарки) Тогда
		СтрокаАкцизныеМарки = Объект.АкцизныеМарки.Добавить();
		СтрокаАкцизныеМарки.КлючСвязи = СтрокаТабличнойЧасти.КлючСвязи;
		СтрокаАкцизныеМарки.КодАкцизнойМарки = ШтрихкодМарки;
		УстановитьОтборАкцизныхМарок();
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьАкт(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не сохранен.'"));
		Возврат;
	КонецЕсли;
	
	ПроведенПередОтправкой = Ложь;
	
	Если НЕ Объект.Проведен Тогда
		Если НЕ Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
			Возврат;
		КонецЕсли;
		
		ПроведенПередОтправкой = Истина;
	КонецЕсли;
	
	ВидДокумента = Объект.ВидДокумента;
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	Результат = ИнтеграцияЕГАИСКлиент.СформироватьИсходящийЗапрос(ВидДокумента, ПараметрыЗапроса);
	
	Если Результат.Результат Тогда
		Прочитать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ успешно выгружен.'"));
	ИначеЕсли ПроведенПередОтправкой Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьОтменуПроведения(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ не сохранен.'"));
		Возврат;
	КонецЕсли;
	
	ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс");
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	Результат = ИнтеграцияЕГАИСКлиент.СформироватьИсходящийЗапрос(ВидДокумента, ПараметрыЗапроса);
	
	Если Результат.Результат Тогда
		Прочитать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Запрос на отмену проведения успешно выгружен.'"));
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПроверитьИнформациюОбОшибке()

	ИнформацияОбОшибке = РегистрыСведений.ПротоколОбменаЕГАИС.ТекстПоследнейОшибки(Объект.Ссылка);
	Элементы.ИнформацияОбОшибке.Видимость = НЕ ПустаяСтрока(ИнформацияОбОшибке);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборАкцизныхМарок()
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.АкцизныеМарки.ОтборСтрок = Неопределено;
	Иначе
		Элементы.АкцизныеМарки.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", ТекущиеДанные.КлючСвязи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МаркируемаяПродукция(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.Маркируемый, ЛОЖЬ) КАК Маркируемый
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат ?(ТипЗнч(Выборка.Маркируемый) = Тип("Булево"), Выборка.Маркируемый, Ложь);
	
КонецФункции

&НаСервере
Процедура ДоступностьЭлементовФормы()
	
	ТолькоПросмотр =
		Объект.СтатусОбработки <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.Новый
		И Объект.СтатусОбработки <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ОшибкаПередачиВЕГАИС;
		
	Элементы.ФормаВыгрузитьАкт.Видимость = НЕ ТолькоПросмотр;
	Элементы.ФормаЗапроситьОтменуПроведения.Видимость =
		Объект.СтатусОбработки = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ПереданВЕГАИС
		ИЛИ Объект.СтатусОбработки = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ОшибкаПередачиЗапросаНаОтменуПроведения;
		
	ПостановкаНаСклад = Объект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБаланс;
	
	Элементы.ТоварыГруппаПостановкаНаСклад.Видимость = ПостановкаНаСклад;
	Элементы.АкцизныеМарки.Видимость = ПостановкаНаСклад;
	Элементы.ТоварыУказатьАкцизнуюМарку.Видимость = ПостановкаНаСклад;
	
	Элементы.АктСписанияЕГАИС.Видимость = Объект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
	
КонецПроцедуры
