
// Процедура управляет видимостью формы.
//
Процедура УстановитьВидимость()

	ЭлементыФормы.ВидОплаты.Доступность = ПереключательОплатаПростая;
	ЭлементыФормы.СуммаОплаты.ТолькоПросмотр = Не ПереключательОплатаПростая;

	ЭлементыФормы.ВидОплаты.АвтоОтметкаНезаполненного = ПереключательОплатаПростая;

	Если Не ПереключательОплатаПростая Тогда
		ЭлементыФормы.ВидОплаты.ОтметкаНезаполненного = Ложь;
	КонецЕсли;

	Если ПереключательОплатаПростая Тогда
		ЭлементыФормы.ПанельОплата.Свертка = РежимСверткиЭлементаУправления.Верх;
		Высота = 161;
	Иначе
		ЭлементыФормы.ПанельОплата.Свертка = РежимСверткиЭлементаУправления.Нет;
		Высота = 277;
	КонецЕсли;
	
	РаботаСДиалогами.УстановитьСвойстваЭлементовОтправкиЭлектронногоЧека(ЭлементыФормы, Истина);

КонецПроцедуры // УстановитьВидимость()

// Процедура формирует текст в информационной надписи об итогах документа.
//
Процедура ОбновитьПодвал()

	СуммаВсего = Товары.Итог("Сумма");
	СуммаНал = ПолучитьСуммуНаличнойОплаты();
	СуммаБезнал = ПолучитьСуммуБезналичнойОплаты();

	Всего = СуммаВсего;

	Если НЕ ЗначениеЗаполнено(мВалютаРегламентированногоУчета) Тогда
		ЭлементыФормы.НадписьИтого.Заголовок = "Итого (<>):";
		ЭлементыФормы.НадписьСдача.Заголовок = "Сдача (<>):";
	Иначе
		ЭлементыФормы.НадписьИтого.Заголовок = "Итого (" + СокрЛП(мВалютаРегламентированногоУчета) +"):";
		ЭлементыФормы.НадписьСдача.Заголовок = "Сдача (" + СокрЛП(мВалютаРегламентированногоУчета) +"):";
	КонецЕсли;

	Если СуммаБезнал > СуммаВсего Тогда
		Сдача = 0;
	Иначе
		Сдача = СуммаНал - СуммаВсего + СуммаБезнал;
	КонецЕсли;

	Если Не ПереключательОплатаПростая Тогда
		СуммаОплаты = Оплата.Итог("Сумма");
	КонецЕсли;

	ВладелецФормы.ВывестиИнформациюНаДисплейПокупателя("Сдача: " + Формат(Сдача, "ЧДЦ=2; ЧРГ=' '; ЧН=0"));

КонецПроцедуры // ОбновитьПодвал()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ВладелецФормы.ПерезаполнятьДисплейПокупателя = Ложь;

	//Заголовок = "Оплата чека";

	Если Оплата.Количество() < 2 Тогда
		ПереключательОплатаПростая = Истина;
	Иначе
		ПереключательОплатаПростая = Ложь;
	КонецЕсли;

	Если Оплата.Количество() = 0 Тогда
		ВидОплаты = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойВидОплатыЧекаККМ");
		ПриИзмененииВидаОплаты();

		СуммаОплаты = Товары.Итог("Сумма");
		ПриИзмененииСуммыОплаты();
	ИначеЕсли Оплата.Количество() = 1 Тогда
		ВидОплаты = Оплата[0].ВидОплаты;
		СуммаОплаты = Оплата[0].Сумма;
	КонецЕсли;

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()

	ОбновитьПодвал();

КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	СтандартнаяОбработка                         = Ложь;
	ВладелецФормы.ПерезаполнятьДисплейПокупателя = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта "ДействиеОк" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура ДействияФормыДействиеОк(Кнопка)

	Сдача = Оплата.Итог("Сумма") - Товары.Итог("Сумма");

	ОписаниеОшибки = "";
	Если ПереключательОплатаПростая Тогда
		Если Не ЗначениеЗаполнено(ВидОплаты) Тогда
			ОписаниеОшибки = "Не указан тип оплаты!";
		ИначеЕсли Оплата.Итог("Сумма") < Товары.Итог("Сумма") Тогда
			ОписаниеОшибки = "Суммы недостаточно для оплаты чека!";
		КонецЕсли;
	Иначе
		Для Каждого СтрокаОплат Из Оплата Цикл
			Если Не ЗначениеЗаполнено(СтрокаОплат.ВидОплаты) Тогда
				ОписаниеОшибки = "Не указан тип оплаты!";
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если ПустаяСтрока(ОписаниеОшибки)
		   И Оплата.Итог("Сумма") < Товары.Итог("Сумма") Тогда
			ОписаниеОшибки = "Суммы недостаточно для оплаты чека!";
		КонецЕсли;
	КонецЕсли;

	Если Не ПустаяСтрока(ОписаниеОшибки) Тогда
		Предупреждение(ОписаниеОшибки, , "Ошибка при оплате чека");
		Возврат;
	КонецЕсли;

	ВладелецФормы.ЭлементыФормы.НадписьСдача.Заголовок     = ОбщегоНазначения.ФорматСумм(Сдача, "" ,"0,00");
	ВладелецФормы.ЭлементыФормы.ПанельСкидкиСдача.ТекущаяСтраница = ЭтаФорма.ВладелецФормы.ЭлементыФормы.ПанельСкидкиСдача.Страницы.Сдача;

	Закрыть("Закрыть чек");

КонецПроцедуры // ДействияФормыДействиеОк()

// Процедура вызывается при выборе пункта "ДействиеОтмена" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура ДействияФормыДействиеОтмена(Кнопка)

	Закрыть();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события ПриИзменении реквизита "СуммаОплаты".
//
Процедура СуммаОплатыПриИзменении(Элемент)

	ПриИзмененииСуммыОплаты();

КонецПроцедуры // СуммаОплатыПриИзменении()

// Процедура выполняет необходимые действия при изменении реквизита "ВидОплаты".
//
Процедура ПриИзмененииВидаОплаты()

	Если Оплата.Количество() = 0 Тогда
		СтрокаОплаты = Оплата.Добавить();
	Иначе
		СтрокаОплаты = Оплата[0];
	КонецЕсли;

	СтрокаОплаты.ВидОплаты = ВидОплаты;

	ПересчитатьАвтоматическиеСкидки();

КонецПроцедуры // ПриИзмененииВидаОплаты()

// Процедура выполняет необходимые действия при изменении реквизита "СуммаОплаты".
//
Процедура ПриИзмененииСуммыОплаты()

	Если Оплата.Количество() = 0 Тогда
		СтрокаОплаты = Оплата.Добавить();
	Иначе
		СтрокаОплаты = Оплата[0];
	КонецЕсли;

	СтрокаОплаты.Сумма = СуммаОплаты;

КонецПроцедуры // ПриИзмененииСуммыОплаты()

// Процедура - обработчик события Нажатие кнопки "КнопкаОплатаБезСдачи".
//
Процедура КнопкаОплатаБезСдачиНажатие(Элемент)

	Если ПереключательОплатаПростая Тогда
		СуммаОплаты = Товары.Итог("Сумма");

		ПриИзмененииСуммыОплаты();
	Иначе
		Предупреждение("Оплата редактируется в списке!");
	КонецЕсли;

КонецПроцедуры // КнопкаОплатаБезСдачиНажатие()

// Процедура - обработчик события ПриИзменении реквизита "ВидОплаты".
//
Процедура ВидОплатыПриИзменении(Элемент)

	ПриИзмененииВидаОплаты();

КонецПроцедуры // ВидОплатыПриИзменении()

// Процедура - обработчик события ПриИзменении переключателя "ПереключательОплатаПростая".
//
Процедура ПереключательОплатаПростаяПриИзменении(Элемент)

	Если ПереключательОплатаПростая Тогда
		Если Оплата.Количество() > 1 Тогда
			Ответ = Вопрос("Список оплат будет очищен." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет);
		Иначе
			Ответ = КодВозвратаДиалога.Да;
		КонецЕсли;

		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ПереключательОплатаПростая = Ложь;
			Возврат;
		Иначе
			Пока Оплата.Количество() > 1 Цикл
				Оплата.Удалить(Оплата[1]);
			КонецЦикла;

			Если Оплата.Количество() > 0 Тогда
				ВидОплаты = Оплата[0].ВидОплаты;
				СуммаОплаты = Оплата[0].Сумма;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ВидОплаты = Неопределено;
	КонецЕсли;

	УстановитьВидимость();

КонецПроцедуры // ПереключательОплатаПростаяПриИзменении()

// Процедура - обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	// Установить видимость реквизитов и заголовков колонок.
	УстановитьВидимость();

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

	РаботаСДиалогами.УстановитьДоступностьКнопкиОплатитьКартой(ЭлементыФормы.ДействияФормы.Кнопки);

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события Нажатие кнопки "ОплатитьКартой".
//
Процедура ДействияФормыОплатитьКартой(Кнопка)

	ОплатитьКартой(СуммаОплаты);

КонецПроцедуры // ДействияФормыОплатитьКартой()

// Процедура - обработчик события "НачалоВыбора" табличной части "Оплата".
//
Процедура ОплатаВидОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборТипаОплаты(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры // ДействияФормыОплатитьКартой()

// Процедура - обработчик события "НачалоВыбора" элемента формы "ВидОплаты".
//
Процедура ВидОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборТипаОплаты(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры // ВидОплатыНачалоВыбора()
