
// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ШкалаДиапазонов,ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	Если ЭтоНовый() Тогда
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"),,,ПараметрОбъектКопирования,ПараметрОснование);
	Иначе
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	ОбновитьНадписи();

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры //ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры //ПослеЗаписи()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Обновляет надписи на форме
//
Процедура ОбновитьНадписи(НовыйТипЦен = Неопределено)

	Если НовыйТипЦен = Неопределено Тогда
		НовыйТипЦен = ТипЦен;
	КонецЕсли;

	Если НовыйТипЦен.Пустая() Тогда
		ЭлементыФормы.НадписьБазовыйТипЦен.Заголовок = "";
	Иначе
		ЭлементыФормы.НадписьБазовыйТипЦен.Заголовок = "Цены рассчитываются от базового типа цен " + Строка(НовыйТипЦен.БазовыйТипЦен) + " (" + НовыйТипЦен.БазовыйТипЦен.ВалютаЦены + ")";
	КонецЕсли;

КонецПроцедуры // ОбновитьНадписи()

// Возвращает текстовое представление интервала
//
Функция ПолучитьПредставлениеИнтервала(ТабличнаяЧасть, ТекущаяСтрока)

	ПредставлениеИнтервала = "";

	Если ТекущаяСтрока.ВерхняяГраница = 0 Тогда
		ПредставлениеИнтервала = "";
	Иначе
		ВалютаДиапазона = Строка(ТипЦен.БазовыйТипЦен.ВалютаЦены);

		МинВерхняяГраница = 0.000001;
		ПредыдущаяСтрока = Неопределено;
		Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			Если МинВерхняяГраница <= СтрокаТЧ.ВерхняяГраница
			   И ТекущаяСтрока.ВерхняяГраница >= СтрокаТЧ.ВерхняяГраница
			   И СтрокаТЧ <> ТекущаяСтрока Тогда
				ПредыдущаяСтрока = СтрокаТЧ;
				МинВерхняяГраница = СтрокаТЧ.ВерхняяГраница;
			КонецЕсли;
		КонецЦикла;

		Если ПредыдущаяСтрока = Неопределено Тогда
			ПредставлениеИнтервала = "До " + СокрЛП(ТекущаяСтрока.ВерхняяГраница) + " " + ВалютаДиапазона;
		ИначеЕсли ТекущаяСтрока.ВерхняяГраница = ПредыдущаяСтрока.ВерхняяГраница Тогда
			ПредставлениеИнтервала = "ОШИБКА: такая верхняя граница уже есть!";
		Иначе
			ПредставлениеИнтервала = "От " + СокрЛП(ПредыдущаяСтрока.ВерхняяГраница) + " до " + СокрЛП(ТекущаяСтрока.ВерхняяГраница) + " " + ВалютаДиапазона;
		КонецЕсли;
	КонецЕсли;

	Возврат ПредставлениеИнтервала;
КонецФункции // ПолучитьПредставлениеИнтервала()

// Заполняет табличную часть текущей (последней) шкалой диапазонов
// для выбранного типа цен.
//
Процедура ЗаполнитьТабличнуюЧасть()

	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		Возврат;
	КонецЕсли;

	Если ШкалаДиапазонов.Количество()>0 Тогда
		Ответ = Вопрос("Перезаполнить шкалу диапазонов?", РежимДиалогаВопрос.ОКОтмена, ,КодВозвратаДиалога.Отмена, "Перезаполнить шкалу диапазонов");

		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ШкалаДиапазонов.Загрузить(Ценообразование.ПолучитьЗапросПоЦеновымДиапазонам(ТипЦен, Дата).Выгрузить());

КонецПроцедуры // ЗаполнитьТабличнуюЧасть()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ И ТЧ

// Процедура - обработчик события "ПриИзменении" поля ввода Тип цен.
// Параметры:
//  Элемент - элемент, изменение которого вызвало событие
//
Процедура ТипЦенПриИзменении(Элемент)

	Если НЕ Элемент.Значение.Пустая() И Элемент.Значение.БазовыйТипЦен.Пустая() Тогда
		Сообщить("В этом документе нельзя выбирать базовые типы цен!");
		Элемент.Значение = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	КонецЕсли;

	ОбновитьНадписи(Элемент.Значение);

	ЗаполнитьТабличнуюЧасть();

КонецПроцедуры // ТипЦенПриИзменении()

// Процедура - обработчик события "ПриОкончанииРедактирования" строки ТЧ.
//
Процедура ШкалаДиапазоновПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	// После ввода строки отсортируем ТЧ по возрастанию верхней границы.
	ШкалаДиапазонов.Сортировать("ВерхняяГраница");

КонецПроцедуры // ШкалаДиапазоновПриОкончанииРедактирования()

// Процедура - обработчик события "ПриВыводеСтроки" строки ТЧ.
//
Процедура ШкалаДиапазоновПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.ПредставлениеИнтервала.УстановитьТекст(ПолучитьПредставлениеИнтервала(Элемент.Значение, ДанныеСтроки));

КонецПроцедуры //ШкалаДиапазоновПриВыводеСтроки()

// Процедура - обработчик события "ПриНачалеРедактирования" строки ТЧ.
//
Процедура ШкалаДиапазоновПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока И НЕ ЗначениеЗаполнено(ЭлементыФормы.ШкалаДиапазонов.ТекущиеДанные.Валюта) Тогда
		ЭлементыФормы.ШкалаДиапазонов.ТекущиеДанные.Валюта = ТипЦен.ВалютаЦены;
	КонецЕсли;

КонецПроцедуры //ШкалаДиапазоновПриНачалеРедактирования()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Заполнить" командной панели формы
// Параметры:
//  Кнопка - кнопка командной панели табличной части, которую
//           нажал пользователь.
//
Процедура КоманднаяПанель1ДействиеЗаполнить(Кнопка)

	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		Предупреждение("Не выбран тип цен. Заполнение невозможно!");
	КонецЕсли;

	ЗаполнитьТабличнуюЧасть();

КонецПроцедуры // КоманднаяПанель1ДействиеЗаполнить()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура разрешения/запрещения редактирования номера документа.
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)

	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры



