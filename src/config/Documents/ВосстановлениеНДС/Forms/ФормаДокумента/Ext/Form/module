// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));

	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Состав, ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(мКнопкиЗаполненияТЧ, СоответствиеТЧ);
	
КонецПроцедуры

Процедура СнятьПризнакДопЛистаДляСтрокДокумента()

	Для каждого СтрокаВосстановления Из Состав Цикл
		Если СтрокаВосстановления.ЗаписьДополнительногоЛиста Тогда
			СтрокаВосстановления.ЗаписьДополнительногоЛиста = Ложь;
			СтрокаВосстановления.КорректируемыйПериод = Неопределено;
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

Процедура УстановитьПризнакДопЛистаДляСтрокДокумента()

	Если Дата < '20060530' Тогда
		// До вступления в силу 283-ФЗ записи в доп.листе не отражались
		Возврат;
	КонецЕсли; 
	
	УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Дата, Неопределено, Организация, "Нал");
	Если УчетнаяПолитикаНУ.Свойство("НДСНалоговыйПериод") Тогда
		Если УчетнаяПолитикаНУ.НДСНалоговыйПериод = Перечисления.Периодичность.Месяц Тогда
			НДСНалоговыйПериод = Перечисления.Периодичность.Месяц;
		Иначе
			НДСНалоговыйПериод = Перечисления.Периодичность.Квартал;
		КонецЕсли;
	Иначе
		НДСНалоговыйПериод = ?(Дата >= '20080101', Перечисления.Периодичность.Квартал, Перечисления.Периодичность.Месяц);
	КонецЕсли;
	
	НачалоНалоговогоПериода = ?(НДСНалоговыйПериод = Перечисления.Периодичность.Квартал,НачалоКвартала(Дата),НачалоМесяца(Дата));
	
	Для каждого СтрокаВосстановления Из Состав Цикл
		Если Не ЗначениеЗаполнено(СтрокаВосстановления.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		ДатаСФ = СтрокаВосстановления.СчетФактура.Дата;
		Если ДатаСФ < '20060101' Тогда
			КорректируемыйПериод = ?(СтрокаВосстановления.ДатаОплаты = '00010101', '00010101', 
														Макс(ДатаСФ, СтрокаВосстановления.ДатаОплаты));
		Иначе										
			КорректируемыйПериод = ДатаСФ;
		КонецЕсли;

		Если (НачалоНалоговогоПериода > НачалоМесяца(КорректируемыйПериод)) Тогда
			СтрокаВосстановления.ЗаписьДополнительногоЛиста = Истина;
			СтрокаВосстановления.КорректируемыйПериод = КорректируемыйПериод;
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()


	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , "Продажа", ПараметрОбъектКопирования, ПараметрОснование);

	Иначе
		
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);

	КонецЕсли;

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Предупреждение("Не указана организация. Операция не записана.");

		Отказ = Истина;

		ТекущийЭлемент = ЭлементыФормы.Организация;

		Возврат;

	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура разрешения/запрещения редактирования номера документа.
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)

	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

Процедура КоманднаяПанельЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Предупреждение("Заполнение возможно только в непроведенном документе" , 60,);
		Возврат;
	КонецЕсли;

	Если Состав.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСтрокиДокумента();

КонецПроцедуры

Процедура КоманднаяПанельУстановитьПризнакДопЛиста(Кнопка)
	
	УстановитьПризнакДопЛистаДляСтрокДокумента();
	
КонецПроцедуры

Процедура КоманднаяПанельСнятьПризнакДопЛиста(Кнопка)
	
	СнятьПризнакДопЛистаДляСтрокДокумента();
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
			МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

	УстановитьВремя(РежимАвтоВремя.Последним);

КонецПроцедуры

Процедура ОтразитьВКнигеПродажПриИзменении(Элемент)
	
	Если (Состав.Найти(ОтразитьВКнигеПродаж,"ЗаписьДополнительногоЛиста") = Неопределено) Тогда
		// Все строки отражаются: 
		//  - для книги продаж в основном разделе,
		//  - для книги покупок в дополнительном разделе.
		// Обработка ТЧ не требуется
		Возврат;
	Иначе
		Если ОтразитьВКнигеПродаж Тогда
			Ответ = Вопрос("При отражении восстановления НДС в книге продаж рекомендуется формировать записи в основном разделе книги.
				|Установить для всех строк документа признак отражения в основном разделе?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если Ответ = КодВозвратаДиалога.Да  Тогда
			    СнятьПризнакДопЛистаДляСтрокДокумента();
			КонецЕсли; 
		Иначе
			Ответ = Вопрос("При отражении восстановления НДС в книге покупок рекомендуется формировать записи в дополнительных листах книги.
				|Установить для строк документа признак отражения в дополнительном листе 
				|(при восстановлении записей книги предыдущих налоговых периодов)?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если Ответ = КодВозвратаДиалога.Да  Тогда
			    УстановитьПризнакДопЛистаДляСтрокДокумента();
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли; 

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <Состав>

Процедура СоставСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ТД = ЭлементыФормы.Состав.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "Состав");

КонецПроцедуры

Процедура СоставДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТД = ЭлементыФормы.Состав.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "Состав");
	
КонецПроцедуры

Процедура СоставСуммаБезНДСПриИзменении(Элемент)
	
	ЭлементыФормы.Состав.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры

Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	ЭлементыФормы.Состав.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры


