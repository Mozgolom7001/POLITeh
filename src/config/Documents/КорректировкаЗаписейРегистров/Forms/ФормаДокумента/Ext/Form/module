// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит доступлный список действий документа
Перем мСписокДействий;

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура создает и настраивает табличные поля на страницах панели ПанельРегистровНакопления
//
Процедура НастроитьЗакладкиПанелиРегистровНакопления()

	Если ТаблицаРегистровНакопления.Количество() = 0 Тогда
		
		ЭлементыФормы.ПанельРегистровНакопления.Страницы.Подсказка.Видимость = Истина;
		Сч = 0;
		Пока Сч < ЭлементыФормы.ПанельРегистровНакопления.Страницы.Количество() Цикл
			Если ЭлементыФормы.ПанельРегистровНакопления.Страницы[Сч].Имя<>"Подсказка" Тогда
				ЭлементыФормы.ПанельРегистровНакопления.Страницы.Удалить(Сч);
			Иначе
				Сч = Сч + 1;
			КонецЕсли;
		КонецЦикла;
		ЭлементыФормы.ПанельРегистровНакопления.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		
	Иначе
		// Добавим новые страницы
		ЭлементыФормы.ПанельРегистровНакопления.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
		Для каждого СтрокаТаблицыРегистров Из ТаблицаРегистровНакопления Цикл
			
			Если Метаданные.РегистрыНакопления.Найти(СтрокаТаблицыРегистров.Имя) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Найдена = Ложь;
			Для каждого СтраницаПанели Из ЭлементыФормы.ПанельРегистровНакопления.Страницы Цикл
				Если СтраницаПанели.Имя = СтрокаТаблицыРегистров.Имя Тогда
					Найдена = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если Найдена Тогда
				Продолжить;
			КонецЕсли; 
			
			СтраницаПанели = ЭлементыФормы.ПанельРегистровНакопления.Страницы.Вставить(ТаблицаРегистровНакопления.Индекс(СтрокаТаблицыРегистров), СтрокаТаблицыРегистров.Имя, СтрокаТаблицыРегистров.Представление);
			
			ЭлементыФормы.ПанельРегистровНакопления.ТекущаяСтраница = СтраницаПанели;
			
			// Расположим на странице командную панель
			КоманднаяПанельРегистра = ЭлементыФормы.Добавить(Тип("КоманднаяПанель"), ("КоманднаяПанель" + СтрокаТаблицыРегистров.Имя), Истина, ЭлементыФормы.ПанельРегистровНакопления);
			КоманднаяПанельРегистра.Верх = 6;
			КоманднаяПанельРегистра.Лево = 6;
			КоманднаяПанельРегистра.Ширина = ЭлементыФормы.ПанельРегистровНакопления.Ширина - 12 - 2;
			КоманднаяПанельРегистра.Высота = 24;
			
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,КоманднаяПанельРегистра,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Право);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Лево);
			
			// Расположим на странице табличное поле
			ПолеРегистра = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), СтрокаТаблицыРегистров.Имя, Истина, ЭлементыФормы.ПанельРегистровНакопления);
			ПолеРегистра.Данные = "ДокументОбъект.Движения." + СтрокаТаблицыРегистров.Имя;
			
			Если НЕ ЭтоНовый() и НЕ Модифицированность() Тогда
				ПолеРегистра.Значение.Прочитать();
			КонецЕсли; 
			
			ПолеРегистра.Верх = 30;
			ПолеРегистра.Лево = 6;
			ПолеРегистра.Ширина = ЭлементыФормы.ПанельРегистровНакопления.Ширина - 12 - 2;
			ПолеРегистра.Высота = ЭлементыФормы.ПанельРегистровНакопления.Высота - 24 - 12 - 20;
			ПолеРегистра.ТолькоПросмотр = Ложь;
			ПолеРегистра.ИзменятьПорядокСтрок = Истина;
			ПолеРегистра.ИзменятьСоставСтрок = Истина;
			
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Верх);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Низ);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Право);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ПанельРегистровНакопления,ГраницаЭлементаУправления.Лево);
			
			ПолеРегистра.СоздатьКолонки();
			
			Если Метаданные.РегистрыНакопления[СтрокаТаблицыРегистров.Имя].ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
				КолонкаВидДвижения = ПолеРегистра.Колонки.Вставить(1, "Вид движения");
				КолонкаВидДвижения.Имя = "ВидДвиженияРегистраНакопления";
				КолонкаВидДвижения.УстановитьЭлементУправления(Тип("ПолеВвода"));
				КолонкаВидДвижения.Данные = "ВидДвижения";
				КолонкаВидДвижения.ЭлементУправления.КнопкаВыбора = Истина;
				КолонкаВидДвижения.ЭлементУправления.ВыбиратьТип = Ложь;
			КонецЕсли; 
			
			ПолеРегистра.Колонки.Регистратор.Видимость = Ложь;
			ПолеРегистра.Колонки.Период.Видимость      = Ложь;
			ПолеРегистра.Колонки.НомерСтроки.Видимость = Ложь;
			
			КоманднаяПанельРегистра.ИсточникДействий = ПолеРегистра;
			КоманднаяПанельРегистра.АвтоЗаполнение = Истина;
			КоманднаяПанельРегистра.Кнопки.Добавить("Разделитель" + СтрокаТаблицыРегистров.Имя);
			Кнопка = КоманднаяПанельРегистра.Кнопки.Добавить(СтрокаТаблицыРегистров.Имя, ТипКнопкиКоманднойПанели.Действие, , Новый Действие("ПереключитьАктивность"));
			Кнопка.Отображение = ОтображениеКнопкиКоманднойПанели.Картинка;
			Кнопка.Картинка    = БиблиотекаКартинок.ПереключитьАктивность;
			Кнопка.Подсказка   = "Переключить активность";
			
		КонецЦикла; 
		
		// Удалим лишние страницы
		Индекс = 0;
		Пока Истина Цикл
			
			Если Индекс > ЭлементыФормы.ПанельРегистровНакопления.Страницы.Количество() - 2 Тогда
				Прервать;
			КонецЕсли; 
			
			СтраницаПанели = ЭлементыФормы.ПанельРегистровНакопления.Страницы[Индекс];
			
			Если ТаблицаРегистровНакопления.Найти(СтраницаПанели.Имя, "Имя") = Неопределено Тогда
				ЭлементыФормы.ПанельРегистровНакопления.Страницы.Удалить(Индекс);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		
		КонецЦикла; 
		
		ЭлементыФормы.ПанельРегистровНакопления.Страницы.Подсказка.Видимость = Ложь;
		ЭлементыФормы.ПанельРегистровНакопления.ТекущаяСтраница = ЭлементыФормы.ПанельРегистровНакопления.Страницы[0];
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура создает и настраивает табличные поля на страницах панели ПанельРегистровСведений
//
Процедура НастроитьЗакладкиПанелиРегистровСведений()
	
	Если ТаблицаРегистровСведений.Количество() = 0 Тогда
		
		ЭлементыФормы.ПанельРегистровСведений.Страницы.Подсказка.Видимость = Истина;
		Сч = 0;
		Пока Сч < ЭлементыФормы.ПанельРегистровСведений.Страницы.Количество() Цикл
			Если ЭлементыФормы.ПанельРегистровСведений.Страницы[Сч].Имя<>"Подсказка" Тогда
				ЭлементыФормы.ПанельРегистровСведений.Страницы.Удалить(Сч);
			Иначе
				Сч = Сч + 1;
			КонецЕсли;
		КонецЦикла;
		ЭлементыФормы.ПанельРегистровСведений.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		
	Иначе
		// Добавим новые страницы
		ЭлементыФормы.ПанельРегистровСведений.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
		Для каждого СтрокаТаблицыРегистров Из ТаблицаРегистровСведений Цикл
			
			Если Метаданные.РегистрыСведений.Найти(СтрокаТаблицыРегистров.Имя) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Найдена = Ложь;
			Для каждого СтраницаПанели Из ЭлементыФормы.ПанельРегистровСведений.Страницы Цикл
				Если СтраницаПанели.Имя = СтрокаТаблицыРегистров.Имя Тогда
					Найдена = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если Найдена Тогда
				Продолжить;
			КонецЕсли; 
			
			СтраницаПанели = ЭлементыФормы.ПанельРегистровСведений.Страницы.Вставить(ТаблицаРегистровСведений.Индекс(СтрокаТаблицыРегистров), СтрокаТаблицыРегистров.Имя, СтрокаТаблицыРегистров.Представление);
			
			ЭлементыФормы.ПанельРегистровСведений.ТекущаяСтраница = СтраницаПанели;
			
			// Расположим на странице командную панель
			КоманднаяПанельРегистра = ЭлементыФормы.Добавить(Тип("КоманднаяПанель"), ("КоманднаяПанель" + СтрокаТаблицыРегистров.Имя), Истина, ЭлементыФормы.ПанельРегистровСведений);
			КоманднаяПанельРегистра.Верх = 6;
			КоманднаяПанельРегистра.Лево = 6;
			КоманднаяПанельРегистра.Ширина = ЭлементыФормы.ПанельРегистровСведений.Ширина - 12 - 2;
			КоманднаяПанельРегистра.Высота = 24;
			
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,КоманднаяПанельРегистра,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Право);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Лево);
			
			// Расположим на странице табличное поле
			ПолеРегистра = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), СтрокаТаблицыРегистров.Имя, Истина, ЭлементыФормы.ПанельРегистровСведений);
			ПолеРегистра.Данные = "ДокументОбъект.Движения." + СтрокаТаблицыРегистров.Имя;
			
			Если НЕ ЭтоНовый() и НЕ Модифицированность() Тогда
				ПолеРегистра.Значение.Прочитать();
			КонецЕсли; 
			
			ПолеРегистра.Верх = 30;
			ПолеРегистра.Лево = 6;
			ПолеРегистра.Ширина = ЭлементыФормы.ПанельРегистровСведений.Ширина - 12 - 2;
			ПолеРегистра.Высота = ЭлементыФормы.ПанельРегистровСведений.Высота - 24 - 12 - 20;
			ПолеРегистра.ТолькоПросмотр = Ложь;
			ПолеРегистра.ИзменятьПорядокСтрок = Истина;
			ПолеРегистра.ИзменятьСоставСтрок = Истина;
			
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Верх);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Низ);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Право);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ПанельРегистровСведений,ГраницаЭлементаУправления.Лево);
			
			ПолеРегистра.СоздатьКолонки();
			
			ПолеРегистра.Колонки.Регистратор.Видимость = Ложь;
			ПолеРегистра.Колонки.НомерСтроки.Видимость = Ложь;
			
			КоманднаяПанельРегистра.ИсточникДействий = ПолеРегистра;
			КоманднаяПанельРегистра.АвтоЗаполнение = Истина;
			КоманднаяПанельРегистра.Кнопки.Добавить("Разделитель" + СтрокаТаблицыРегистров.Имя);
			Кнопка = КоманднаяПанельРегистра.Кнопки.Добавить(СтрокаТаблицыРегистров.Имя, ТипКнопкиКоманднойПанели.Действие, , Новый Действие("ПереключитьАктивность"));
			Кнопка.Отображение = ОтображениеКнопкиКоманднойПанели.Картинка;
			Кнопка.Картинка    = БиблиотекаКартинок.ПереключитьАктивность;
			Кнопка.Подсказка   = "Переключить активность";
			
		КонецЦикла; 
		
		// Удалим лишние страницы
		Индекс = 0;
		Пока Истина Цикл
			
			Если Индекс > ЭлементыФормы.ПанельРегистровСведений.Страницы.Количество() - 2 Тогда
				Прервать;
			КонецЕсли; 
			
			СтраницаПанели = ЭлементыФормы.ПанельРегистровСведений.Страницы[Индекс];
			
			Если ТаблицаРегистровСведений.Найти(СтраницаПанели.Имя, "Имя") = Неопределено Тогда
				ЭлементыФормы.ПанельРегистровСведений.Страницы.Удалить(Индекс);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		
		КонецЦикла; 
		
		ЭлементыФормы.ПанельРегистровСведений.Страницы.Подсказка.Видимость = Ложь;
		ЭлементыФормы.ПанельРегистровСведений.ТекущаяСтраница = ЭлементыФормы.ПанельРегистровСведений.Страницы[0];
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура НастроитьЗакладкиПанелейРегистров()
	
	НастроитьЗакладкиПанелиРегистровНакопления();
	НастроитьЗакладкиПанелиРегистровСведений();
	
	ОбновлениеОтображения();
КонецПроцедуры // НастроитьЗакладкиПанелейРегистров() 

Процедура ПереключитьАктивность(Кнопка)

	ТекущаяАктивность = Ложь;
	Если ЭлементыФормы[Кнопка.Имя].Значение.Количество() > 0 Тогда
		ТекущаяАктивность = ЭлементыФормы[Кнопка.Имя].Значение[0].Активность;
	КонецЕсли;
	ЭлементыФормы[Кнопка.Имя].Значение.УстановитьАктивность(НЕ ТекущаяАктивность);

КонецПроцедуры

// Процедура заполняет список возможных действий табличной части Выполняемые действия
//
Процедура ОбновитьСписокДействий()
	
	СписокДействий = Новый СписокЗначений;
	СписокДействий.Добавить("Сторно движений документа");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВнешниеОбработкиПринадлежность.Ссылка,
	|	ВнешниеОбработкиПринадлежность.Ссылка.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВнешниеОбработки.Принадлежность КАК ВнешниеОбработкиПринадлежность
	|ГДЕ
	|	(НЕ ВнешниеОбработкиПринадлежность.Ссылка.ПометкаУдаления)
	|	И ВнешниеОбработкиПринадлежность.СсылкаОбъекта = &Ссылка
	|	И ВнешниеОбработкиПринадлежность.Ссылка.ВидОбработки = &ВидОбработки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Запрос.УстановитьПараметр("ВидОбработки", Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей);
	Запрос.УстановитьПараметр("Ссылка", Документы.КорректировкаЗаписейРегистров.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокДействий.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	
	мСписокДействий = СписокДействий;
	
КонецПроцедуры

// Пересчет валютной суммы в основную по курсу на указанную дату
//
Функция ПересчетСуммыПоКурсу(ВалютнаяСумма, Валюта, Дата) Экспорт

	Запись = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", Валюта));
	Сумма  = ВалютнаяСумма * Запись.Курс;

	Если Запись.Кратность <> 0 Тогда
		Сумма = Сумма / ?(Запись.Кратность = 0, 1, Запись.Кратность);
	КонецЕсли;

	Возврат Сумма;

КонецФункции // ПересчетСуммыПоКурсу()

// Заполнение параметров формы настройки спсика регистров перед открытием
//
Процедура ИнициализацияФормыНастройки(ФормаНастройки,ИмяТекущейСтраницы = "")
	
	ФормаНастройки.СписокРегистровНакопления.Очистить();
	ФормаНастройки.СписокРегистровСведений.Очистить();
	
	Для каждого Набор Из Движения Цикл
		
		МетаданныеНабора = Набор.Метаданные();
		Если Метаданные.РегистрыНакопления.Содержит(МетаданныеНабора) Тогда
			НовыйЭлементСписка = ФормаНастройки.СписокРегистровНакопления.Добавить(МетаданныеНабора.Имя, МетаданныеНабора.Синоним);
			Если МетаданныеНабора.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
				НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрНакопления_Остатки;
			Иначе
				НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрНакопления_Обороты;
			КонецЕсли;
			Если ТаблицаРегистровНакопления.Найти(МетаданныеНабора.Имя, "Имя") <> Неопределено Тогда
				НовыйЭлементСписка.Пометка = Истина;
			КонецЕсли; 
			
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(МетаданныеНабора) Тогда
			НовыйЭлементСписка = ФормаНастройки.СписокРегистровСведений  .Добавить(МетаданныеНабора.Имя, МетаданныеНабора.Синоним);
			НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрСведений;
			Если ТаблицаРегистровСведений.Найти(МетаданныеНабора.Имя, "Имя") <> Неопределено Тогда
				НовыйЭлементСписка.Пометка = Истина;
			КонецЕсли; 
		Иначе
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	ФормаНастройки.ТЗРегистровНакопления  = ТаблицаРегистровНакопления.Выгрузить();
	ФормаНастройки.ТЗРегистровСведений    = ТаблицаРегистровСведений.Выгрузить();
	
	ФормаНастройки.ИмяТекущейСтраницы = ИмяТекущейСтраницы;
	
КонецПроцедуры

// Обработка результатов возвращаемых формой настройки списка регистров
//
Процедура ОбработкаНастройки(ФормаНастройки)
	
	//////////////////////
	// Регистры накопления
	//////////////////////
	
	// Сначала удалим те, у которых сняли флажки
	Индекс = 0;
	Пока Истина Цикл
		
		Если Индекс > ТаблицаРегистровНакопления.Количество() - 1 Тогда
			Прервать;
		КонецЕсли; 
			
		СтрокаТаблицы = ТаблицаРегистровНакопления[Индекс];
			
		ЭлементСписка = ФормаНастройки.СписокРегистровНакопления.НайтиПоЗначению(СтрокаТаблицы.Имя);
		Если ЭлементСписка = Неопределено Тогда
			Движения[СтрокаТаблицы.Имя].Очистить();
			ТаблицаРегистровНакопления.Удалить(СтрокаТаблицы);
			Продолжить;
		КонецЕсли; 
		Если НЕ ЭлементСписка.Пометка Тогда
			Движения[СтрокаТаблицы.Имя].Очистить();
			ТаблицаРегистровНакопления.Удалить(СтрокаТаблицы);
			Продолжить;
		КонецЕсли;
			
		Индекс = Индекс + 1;
		
	КонецЦикла;
		
	// Теперь добавим новые
	Для каждого ЭлементСписка Из ФормаНастройки.СписокРегистровНакопления Цикл
		
		Если НЕ ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;
			
		Если ТаблицаРегистровНакопления.Найти(ЭлементСписка.Значение, "Имя") <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		НоваяСтрока = ТаблицаРегистровНакопления.Добавить();
		НоваяСтрока.Имя = ЭлементСписка.Значение;
		НоваяСтрока.Представление = ЭлементСписка.Представление;
		
	КонецЦикла; 
		
	ТаблицаРегистровНакопления.Сортировать("Имя ВОЗР");
	
	//////////////////////
	// Регистры сведений
	//////////////////////
	
	// Сначала удалим те, у которых сняли флажки
	Индекс = 0;
	Пока Истина Цикл
		
		Если Индекс > ТаблицаРегистровСведений.Количество() - 1 Тогда
			Прервать;
		КонецЕсли; 
			
		СтрокаТаблицы = ТаблицаРегистровСведений[Индекс];
			
		ЭлементСписка = ФормаНастройки.СписокРегистровСведений.НайтиПоЗначению(СтрокаТаблицы.Имя);
		Если ЭлементСписка = Неопределено Тогда
			Движения[СтрокаТаблицы.Имя].Очистить();
			ТаблицаРегистровСведений.Удалить(СтрокаТаблицы);
			Продолжить;
		КонецЕсли; 
		Если НЕ ЭлементСписка.Пометка Тогда
			Движения[СтрокаТаблицы.Имя].Очистить();
			ТаблицаРегистровСведений.Удалить(СтрокаТаблицы);
			Продолжить;
		КонецЕсли;
			
		Индекс = Индекс + 1;
		
	КонецЦикла;
		
	// Теперь добавим новые
	Для каждого ЭлементСписка Из ФормаНастройки.СписокРегистровСведений Цикл
		
		Если НЕ ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;
			
		Если ТаблицаРегистровСведений.Найти(ЭлементСписка.Значение, "Имя") <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		НоваяСтрока = ТаблицаРегистровСведений.Добавить();
		НоваяСтрока.Имя = ЭлементСписка.Значение;
		НоваяСтрока.Представление = ЭлементСписка.Представление;
		
	КонецЦикла; 
		
	ТаблицаРегистровСведений.Сортировать("Имя ВОЗР");
	
	НастроитьЗакладкиПанелейРегистров();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента ДействияФормы.Настройка.
// .
Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	
	ИнициализацияФормыНастройки(ФормаНастройки);
	
	Если Не ФормаНастройки.ОткрытьМодально() = Истина Тогда
		Возврат;
	КонецЕсли; 
	
	ОбработкаНастройки(ФормаНастройки);
	
	ОбновлениеОтображения();
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" флажка ИспользоватьЗаполнениеДвижений
//
Процедура ИспользоватьЗаполнениеДвиженийПриИзменении(Элемент)
	
	Если ИспользоватьЗаполнениеДвижений Тогда
		ЭлементыФормы.ПанельЗаполнениеДвижений.ТекущаяСтраница = ЭлементыФормы.ПанельЗаполнениеДвижений.Страницы.ТаблицаЗаполнениеДвижений;
	Иначе
		Если ЗаполнениеДвижений.Количество()>0 Тогда
			Ответ = Вопрос("Табличная часть ""Заполнение движений"" будет очищена.",РежимДиалогаВопрос.ОКОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				ИспользоватьЗаполнениеДвижений = Истина;
				Возврат;
			КонецЕсли;
			
			ЗаполнениеДвижений.Очистить();
		КонецЕсли;
		ЭлементыФормы.ПанельЗаполнениеДвижений.ТекущаяСтраница = ЭлементыФормы.ПанельЗаполнениеДвижений.Страницы.ПодсказкаЗаполнениеДвижений;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "Нажатие" гиперссылки НастройкаСоставаРегистровСведений
//
Процедура ГиперссылкаНастройкаСоставаРегистровСведенийНажатие(Элемент)
	
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	
	ИнициализацияФормыНастройки(ФормаНастройки,"Сведений");
	
	Если Не ФормаНастройки.ОткрытьМодально() = Истина Тогда
		Возврат;
	КонецЕсли; 
	
	ОбработкаНастройки(ФормаНастройки);
	
	ОбновлениеОтображения();
	
КонецПроцедуры

// Процедура - обработчик события "Нажатие" гиперссылки НастройкаСоставаРегистровНакопления
//
Процедура ГиперссылкаНастройкаСоставаРегистровНакопленияНажатие(Элемент)

	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	
	ИнициализацияФормыНастройки(ФормаНастройки,"Накопления");
	
	Если Не ФормаНастройки.ОткрытьМодально() = Истина Тогда
		Возврат;
	КонецЕсли; 
	
	ОбработкаНастройки(ФормаНастройки);
	
	ОбновлениеОтображения();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ВЫПОНЯЕМЫЕ ДЕЙСТВИЯ

// Процедура - обработчик события "НачалоВыбора" поля ввода "Действие"
// в строке табличной части "Выполняемые действия".
//
Процедура ЗаполнениеДвиженийДействиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеДействие = мСписокДействий.ВыбратьЭлемент("Выберите действие");
	Если ВыбранноеДействие <> неопределено Тогда
		Элемент.Значение = ВыбранноеДействие.Значение;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	Если ЭтоНовый() Тогда

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , , ПараметрОбъектКопирования, ПараметрОснование);

	Иначе

		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);

	КонецЕсли;

	НастроитьЗакладкиПанелейРегистров();

	Если не ИспользоватьЗаполнениеДвижений Тогда
		Если ТаблицаРегистровНакопления.Количество()>0 Тогда
			ЭлементыФормы.ПанельРегистров.ТекущаяСтраница = ЭлементыФормы.ПанельРегистров.Страницы.РегистрыНакопления;
		ИначеЕсли ТаблицаРегистровСведений.Количество()>0 Тогда
			ЭлементыФормы.ПанельРегистров.ТекущаяСтраница = ЭлементыФормы.ПанельРегистров.Страницы.РегистрыСведений;
		КонецЕсли;
	Иначе
		ЭлементыФормы.ПанельЗаполнениеДвижений.ТекущаяСтраница = ЭлементыФормы.ПанельЗаполнениеДвижений.Страницы.ТаблицаЗаполнениеДвижений;
	КонецЕсли;

	ОбновитьСписокДействий();

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для каждого СтрокаТаблицы Из ТаблицаРегистровНакопления Цикл
		Для каждого Запись Из Движения[СтрокаТаблицы.Имя] Цикл
			Запись.Период = Дата;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ОбновлениеОтображения()

	Если ЗаполнениеДвижений.Количество()>0 Тогда
		ЭлементыФормы.ПанельРегистров.Страницы.ЗаполнениеДвижений.КартинкаЗаголовка = БиблиотекаКартинок.Выполнить;
	Иначе
		ЭлементыФормы.ПанельРегистров.Страницы.ЗаполнениеДвижений.КартинкаЗаголовка = Новый Картинка;
	КонецЕсли;

	Если ТаблицаРегистровНакопления.Количество()>0 Тогда
		ЭлементыФормы.ПанельРегистров.Страницы.РегистрыНакопления.КартинкаЗаголовка = БиблиотекаКартинок.РегистрНакопления;
	Иначе
		ЭлементыФормы.ПанельРегистров.Страницы.РегистрыНакопления.КартинкаЗаголовка = Новый Картинка;
	КонецЕсли;
	
	Если ТаблицаРегистровСведений.Количество()>0 Тогда
		ЭлементыФормы.ПанельРегистров.Страницы.РегистрыСведений.КартинкаЗаголовка = БиблиотекаКартинок.РегистрСведений;
	Иначе
		ЭлементыФормы.ПанельРегистров.Страницы.РегистрыСведений.КартинкаЗаголовка = Новый Картинка;
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа.
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)

	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Заполнить движения"
// командно панели ТЧ "Выполняемые действия"
// Открывает форму выбора печатных форм объекта.
//
Процедура КоманднаяПанельЗаполнениеДвиженийЗаполнитьДвижения(Кнопка)
	
	Если ЗаполнениеДвижений.Количество() = 0 Тогда
		Предупреждение("Не заполнена таблица движений!");
		Возврат;
	КонецЕсли;
	
	ВыполнитьДействияДокумента();
	НастроитьЗакладкиПанелейРегистров();

КонецПроцедуры

Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

