////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обаботчик события "ПередОткрытием" Формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПередОткрытиемВходящегоДокументаВФорме(Отказ, СтандартнаяОбработка, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обаботчик события "ПослеЗаписи" Формы
//
Процедура ПослеЗаписи() Экспорт
	
	ЭлектронныеДокументы.ПослеЗаписиФормыДокумента(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обаботчик события, при нажатии на кнопку "Структура подчиненности документа" Командной панели "ДействияФормы"
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтметитьОбработку(Кнопка)
	
	// пометка на удаление УчетныйДокумент , так как он не принят
	Если ЗначениеЗаполнено(УчетныйДокумент) Тогда
		
		ОбъектУчетногоДокумента = УчетныйДокумент.ПолучитьОбъект();
		ОбъектУчетногоДокумента.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;
	
	Обработан = Истина;
	ЗаписатьВФорме();
	Закрыть();
	
КонецПроцедуры

// обработчик показа состава файла обмена
Процедура ДействияФормыПоказатьДанныеОбмена(Кнопка)
	
	ЭлектронныеДокументы.ПоказатьДанныеОбмена(ЭтотОбъект);	
	
КонецПроцедуры

// форма параметров электронного обмена документами
Процедура ДействияФормыПараметрыЭлектронногоОбменаДокументами(Кнопка)
	
	ЭлектронныеДокументы.ПоказатьПараметрыВходящегоДокумента(ЭтотОбъект);	
	
КонецПроцедуры

// показ примечания
Процедура ПримечаниеОткрытие(Элемент, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПоказатьДлинныеСтроковыеДанные(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьНовыйЗаказ(Кнопка)
	
	// создание на основании отклонения нового заказа поставщику
	// копируем исходный заказ, очищаем таб часть товары и заполняем новыми значениями
	
	Если НЕ ЗначениеЗаполнено(УчетныйДокумент) Тогда
		
		Предупреждение("Не задан учетный документ. Создать новый заказ поставщику нельзя.");
		Возврат;
		
	КонецЕсли;
	
	Док = УчетныйДокумент.Скопировать();
	
	Док.Товары.Очистить();
	Док.Услуги.Очистить();
	
	Для каждого СтрокаТовараЭлДок Из Товары Цикл
		
		ЭтоУслуга = СтрокаТовараЭлДок.Номенклатура.Услуга;
		
		Если ЭтоУслуга Тогда
			СтрокаТабличнойЧасти = Док.Услуги.Добавить();
		Иначе
			СтрокаТабличнойЧасти = Док.Товары.Добавить();
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТовараЭлДок.Номенклатура.ЕдиницаХраненияОстатков;
			СтрокаТабличнойЧасти.Коэффициент = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Номенклатура               = СтрокаТовараЭлДок.Номенклатура;
		СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = СтрокаТовараЭлДок.ХарактеристикаНоменклатуры;
		СтрокаТабличнойЧасти.Количество   = СтрокаТовараЭлДок.Количество;
			
		СтрокаТабличнойЧасти.Сумма        = СтрокаТовараЭлДок.Сумма;
		СтрокаТабличнойЧасти.Цена         = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
		СтрокаТабличнойЧасти.СтавкаНДС    = СтрокаТовараЭлДок.СтавкаНДС;
		СтрокаТабличнойЧасти.СуммаНДС     = СтрокаТовараЭлДок.СуммаНДС;
				
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, Док);
		
	КонецЦикла;
	
	// показываем новый заказ
	ФормаДокумента = Док.ПолучитьФорму(, ЭтаФорма);
	ФормаДокумента.Открыть();	
	
КонецПроцедуры

// показ файлов приложенных к документу
Процедура ДействияФормыФайлы(Кнопка)
	
	ЭлектронныеДокументы.ПоказатьФайлыКСсылкеНаОбъект(ЭтаФорма, Ссылка);	
	
КонецПроцедуры

Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
КонецПроцедуры
