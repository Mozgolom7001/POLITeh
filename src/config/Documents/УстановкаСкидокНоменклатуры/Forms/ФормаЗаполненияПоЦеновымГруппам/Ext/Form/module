Перем мСтруктураПараметров Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ВидСравнения.Равно);
	СписокВыбора.Добавить(ВидСравнения.НеРавно);
	СписокВыбора.Добавить(ВидСравнения.ВСпискеПоИерархии);
	СписокВыбора.Добавить(ВидСравнения.НеВСпискеПоИерархии);
	ЭлементыФормы.ВидСравненияГрупп.СписокВыбора = СписокВыбора;
	ЭлементыФормы.ВидСравненияГрупп.Значение     = ВидСравнения.Равно;
	ВидСравненияГруппПриИзменении(ЭлементыФормы.ВидСравненияГрупп);

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК",
// заполняет табличную часть документа.
//
Процедура ОКНажатие(Элемент)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	Номенклатура.ЦеноваяГруппа.Ссылка КАК ЦеноваяГруппа,
	               |	&ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	               |	&ОграничениеСкидкиНаценки КАК ОграничениеСкидкиНаценки
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |
	               |ГДЕ
				   |";
				   
	Если ВидСравненияГрупп=ВидСравнения.ВСпискеПоИерархии Тогда
		ТекстЗапроса=ТекстЗапроса+"Номенклатура.ЦеноваяГруппа.Ссылка В ИЕРАРХИИ(&Группы)";
	ИначеЕсли ВидСравненияГрупп=ВидСравнения.НеВСпискеПоИерархии Тогда
		ТекстЗапроса=ТекстЗапроса+"Номенклатура.ЦеноваяГруппа.Ссылка НЕ В ИЕРАРХИИ(&Группы)";
	ИначеЕсли ВидСравненияГрупп=ВидСравнения.Равно Тогда
		ТекстЗапроса=ТекстЗапроса+"Номенклатура.ЦеноваяГруппа.Ссылка=(&Группы)";
	ИначеЕсли ВидСравненияГрупп=ВидСравнения.НеРавно Тогда
		ТекстЗапроса=ТекстЗапроса+"Номенклатура.ЦеноваяГруппа.Ссылка<>(&Группы)";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+
				   "ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КомплектующиеНоменклатуры.Комплектующая,
	               |	КомплектующиеНоменклатуры.Комплектующая.ЦеноваяГруппа,
	               |	&ПроцентСкидкиНаценки,
	               |	&ОграничениеСкидкиНаценки
	               |ИЗ
	               |	РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	               |
	               |ГДЕ
	               |";
				   
	Если ВидСравненияГрупп=ВидСравнения.ВСпискеПоИерархии Тогда
		ТекстЗапроса=ТекстЗапроса+"КомплектующиеНоменклатуры.Номенклатура.ЦеноваяГруппа.Ссылка В ИЕРАРХИИ(&Группы)";
	ИначеЕсли ВидСравненияГрупп=ВидСравнения.НеВСпискеПоИерархии Тогда
		ТекстЗапроса=ТекстЗапроса+"КомплектующиеНоменклатуры.Номенклатура.ЦеноваяГруппа.Ссылка НЕ В ИЕРАРХИИ(&Группы)";
	ИначеЕсли ВидСравненияГрупп=ВидСравнения.Равно Тогда
		ТекстЗапроса=ТекстЗапроса+"КомплектующиеНоменклатуры.Номенклатура.ЦеноваяГруппа.Ссылка=(&Группы)";
	ИначеЕсли ВидСравненияГрупп=ВидСравнения.НеРавно Тогда
		ТекстЗапроса=ТекстЗапроса+"КомплектующиеНоменклатуры.Номенклатура.ЦеноваяГруппа.Ссылка<>(&Группы)";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Группы", Группы);
	Запрос.УстановитьПараметр("ПроцентСкидкиНаценки", ПроцентСкидкиНаценки);
	Запрос.УстановитьПараметр("ОграничениеСкидкиНаценки", ОграничениеСкидкиНаценки);

	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();

	Добавить = Ложь;
	мСтруктураПараметров.Свойство("Добавить",                        Добавить);
	//КачествоПустой = Справочники.Качество.ПустаяСсылка();
	КачествоНовый = Справочники.Качество.Новый;
	
	Если Добавить = Неопределено Или НЕ Добавить Тогда

		ТаблицаТоваров.Колонки.Добавить("Качество");
		ТаблицаТоваров.ЗаполнитьЗначения(КачествоНовый, "Качество");
		Товары.Загрузить(ТаблицаТоваров);
	Иначе
		ТаблицаПроверкиДублей = Товары.Выгрузить();
		ТаблицаПроверкиДублей.Индексы.Добавить("Номенклатура");
		Для Каждого СтрокаДобавления ИЗ ТаблицаТоваров Цикл
			Если ТаблицаПроверкиДублей.Найти(СтрокаДобавления.Номенклатура, "Номенклатура") = Неопределено Тогда
				СтрокаТовара = Товары.Добавить();
				СтрокаТовара.Номенклатура = СтрокаДобавления.Номенклатура;
				СтрокаТовара.Качество = КачествоНовый;
				СтрокаТовара.ПроцентСкидкиНаценки = ПроцентСкидкиНаценки;
				СтрокаТовара.ОграничениеСкидкиНаценки = ОграничениеСкидкиНаценки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ВидСравненияГрупп".
//
Процедура ВидСравненияГруппПриИзменении(Элемент)

	Если (Элемент.Значение=ВидСравнения.ВСпискеПоИерархии)Или(Элемент.Значение=ВидСравнения.НеВСпискеПоИерархии) Тогда
		Значение = Неопределено;
		Если ЭлементыФормы.Группы.ОграничениеТипа <> Новый ОписаниеТипов("СписокЗначений")Тогда
			Значение = ЭлементыФормы.Группы.Значение;
		КонецЕсли;
		ЭлементыФормы.Группы.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
		ЭлементыФормы.Группы.ТипЗначенияСписка = Новый ОписаниеТипов("СправочникСсылка.ЦеновыеГруппы");
		Группы = Новый СписокЗначений;
		Если Значение <> Неопределено
		   И Значение <> Справочники.ЦеновыеГруппы.ПустаяСсылка() Тогда
			Группы.Добавить(Значение);
		КонецЕсли;
	ИначеЕсли (Элемент.Значение=ВидСравнения.Равно)Или(Элемент.Значение=ВидСравнения.НеРавно) Тогда
		Значение = Неопределено;
		Если ЭлементыФормы.Группы.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений")Тогда
			Если Группы.Количество()>0 Тогда
				Значение = Группы[0].Значение;
			КонецЕсли;
		Иначе
			Значение=Группы;
		КонецЕсли;
		ЭлементыФормы.Группы.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ЦеновыеГруппы");
		
		Группы = Справочники.ЦеновыеГруппы.ПустаяСсылка();
		Если Значение <> Неопределено Тогда
			Группы = Значение;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
