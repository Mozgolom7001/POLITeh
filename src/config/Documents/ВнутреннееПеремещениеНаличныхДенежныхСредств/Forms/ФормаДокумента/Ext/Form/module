// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем ОрганизацияОтражаетсяВРеглУчете;

Перем мТекущаяДатаДокумента;

Процедура УстановитьВидимость()

	ЭлементыФормы.ОрганизацияПолучатель.ТолькоПросмотр = ОрганизацияОтражаетсяВРеглУчете;

КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Рассчитывает новый курс документа при смене даты
//
Процедура УстановитьКурсДокумента()
	
	СтруктураКурсаВалютаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
	КурсДокумента        = СтруктураКурсаВалютаДокумента.Курс;
	КратностьДокумента   = СтруктураКурсаВалютаДокумента.Кратность;
	
КонецПроцедуры // УстановитьКурсДокумента()

Процедура КассаПриИзменении(Элемент)
		
	Если ЗначениеЗаполнено(Касса) И ЗначениеЗаполнено(КассаПолучатель) 
		И НЕ Касса.ВалютаДенежныхСредств=КассаПолучатель.ВалютаДенежныхСредств Тогда
		
		Сообщить("Разные валюты кассы-отправителя и кассы-получателя.");
		КассаПолучатель = Справочники.Кассы.ПустаяСсылка();
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияОтправитель) Тогда
		ОрганизацияОтправитель = Касса.Владелец;
	КонецЕсли;
	
	РаботаСДиалогами.ПриИзмененииЗначенияКассыБанковскогоСчета(ВалютаДокумента, КурсДокумента, КратностьДокумента, Дата, СуммаДокумента, Касса.ВалютаДенежныхСредств);

	ЭлементыФормы.НадписьВалютаДокумент.Заголовок = Строка(ВалютаДокумента);

КонецПроцедуры

Процедура КассаПолучательПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Касса) И ЗначениеЗаполнено(КассаПолучатель) 
		И НЕ Касса.ВалютаДенежныхСредств=КассаПолучатель.ВалютаДенежныхСредств Тогда
		
		Сообщить("Разные валюты кассы-отправителя и кассы-получателя.");
		КассаПолучатель = Справочники.Кассы.ПустаяСсылка();
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияПолучатель) Тогда
		ОрганизацияПолучатель = КассаПолучатель.Владелец;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");


	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	Если ЭтоНовый() Тогда
		
		Если НЕ ЗначениеЗаполнено(ОрганизацияОтправитель) Тогда
			ОрганизацияОтправитель = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		КонецЕсли;
		ОрганизацияОтражаетсяВРеглУчете = ОрганизацияОтправитель.ОтражатьВРегламентированномУчете;
		Если НЕ ЗначениеЗаполнено(ОрганизацияПолучатель) ИЛИ ОрганизацияОтражаетсяВРеглУчете Тогда
			ОрганизацияПолучатель = ОрганизацияОтправитель;
		КонецЕсли;

		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		
		Если НЕ ЗначениеЗаполнено(Касса) Тогда
			Касса = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяКасса");
			Если Касса.Владелец <> ОрганизацияОтправитель Тогда
				Касса = Справочники.Кассы.ПустаяСсылка();
			КонецЕсли;
			ВалютаДокумента = Касса.ВалютаДенежныхСредств;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
			ВалютаДокумента = ВалютаРегламентированногоУчета;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(КурсДокумента) Тогда
			СтруктураКурсаДокумента      = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
			КурсДокумента      = СтруктураКурсаДокумента.Курс;
			КратностьДокумента = СтруктураКурсаДокумента.Кратность;
		КонецЕсли;

	Иначе
		
		ОрганизацияОтражаетсяВРеглУчете = ОрганизацияОтправитель.ОтражатьВРегламентированномУчете;

		УстановитьКурсДокумента();
		
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
		
	КонецЕсли;

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить печатную форму по умолчанию.
	РаботаСДиалогами.УстановитьКнопкуПечати(ЭтотОбъект, ЭтаФорма);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	ЭлементыФормы.НадписьВалютаДокумент.Заголовок = Строка(ВалютаДокумента);
	
	УстановитьВидимость();

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
		
КонецПроцедуры

Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа.
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)

	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 
 
Процедура ОрганизацияПриИзменении(Элемент)

	Если Касса.Владелец <> ОрганизацияОтправитель Тогда
		Касса = Справочники.Кассы.ПустаяСсылка();
	КонецЕсли;

	ОрганизацияОтражаетсяВРеглУчете = ОрганизацияОтправитель.ОтражатьВРегламентированномУчете;
	Если НЕ ЗначениеЗаполнено(ОрганизацияПолучатель) ИЛИ ОрганизацияОтражаетсяВРеглУчете Тогда
		ОрганизацияПолучатель = ОрганизацияОтправитель;
		ОрганизацияПолучательПриИзменении(ЭлементыФормы.ОрганизацияПолучатель);
	КонецЕсли;

	Если Не ПустаяСтрока(Номер) Тогда
			МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры

Процедура ОрганизацияПолучательПриИзменении(Элемент)
	
	Если КассаПолучатель.Владелец <> ОрганизацияПолучатель Тогда
		КассаПолучатель = Справочники.Кассы.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура КассаПолучательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.Кассы.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.СправочникСписок.Отбор.Владелец.Установить(ОрганизацияПолучатель);
	ФормаВыбора.СправочникСписок.Отбор.ВалютаДенежныхСредств.Установить(Касса.ВалютаДенежныхСредств);
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность              = Ложь;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВалютаДенежныхСредств.Доступность = Ложь;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры


