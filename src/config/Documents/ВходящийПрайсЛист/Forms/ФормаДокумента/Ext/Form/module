////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обаботчик события "ПередОткрытием" Формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПередОткрытиемВходящегоДокументаВФорме(Отказ, СтандартнаяОбработка, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обаботчик события "ПослеЗаписи" Формы
//
Процедура ПослеЗаписи() Экспорт
	
	ЭлектронныеДокументы.ПослеЗаписиФормыДокумента(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обаботчик события, при нажатии на кнопку "Структура подчиненности документа" Командной панели "ДействияФормы"
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура - обаботчик события, при нажатии на кнопку "Движения документа по регистрам" Командной панели "ДействияФормы"
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры

// Процедура - обаботчик события, при нажатии на кнопку "ОК" Командной панели "ОсновныеДействияФормы"
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Обработан = Истина;
	
	Попытка
		Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		Обработан = Ложь;
		Предупреждение("Операция не выполнена");
		Возврат;
	КонецПопытки;
	
	ПослеЗаписи();
	Закрыть();
	
КонецПроцедуры

Процедура КоманднаяПанельКаталогТоваровУдалитьСтроки(Кнопка)
	
	НомерСтрокиТЧ = Товары.Количество() - 1;
	Пока НомерСтрокиТЧ >= 0 Цикл
		
		Если Не ЗначениеЗаполнено(Товары[НомерСтрокиТЧ].Номенклатура) Тогда
			
			Товары.Удалить(НомерСтрокиТЧ);
			
		КонецЕсли;
		
		НомерСтрокиТЧ = НомерСтрокиТЧ - 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьНовыйТипЦенНажатие(Элемент)
	
	// создать новый тип цен
	ФормаНовогоЭлемента = Справочники.ТипыЦенНоменклатурыКонтрагентов.ПолучитьФормуНовогоЭлемента(, ЭлементыФормы.ТипЦен);
	ФормаНовогоЭлемента.ЭтотОбъект.Владелец = Контрагент;
	ФормаНовогоЭлемента.ЭтотОбъект.ВалютаЦены = ВалютаДокумента;
	ФормаНовогоЭлемента.ЭтотОбъект.ЦенаВключаетНДС = ЦенаВключаетНДС;
	
	ФормаНовогоЭлемента.Открыть();
	
	ФормаНовогоЭлемента.ЭтотОбъект.ВалютаЦены = ВалютаДокумента;
	
КонецПроцедуры

// обработчик показа состава файла обмена
Процедура ДействияФормыПоказатьДанныеОбмена(Кнопка)
	
	ЭлектронныеДокументы.ПоказатьДанныеОбмена(ЭтотОбъект);	
	
КонецПроцедуры

// форма параметров электронного обмена документами
Процедура ДействияФормыПараметрыЭлектронногоОбменаДокументами(Кнопка)
	
	ЭлектронныеДокументы.ПоказатьПараметрыВходящегоДокумента(ЭтотОбъект);	
	
КонецПроцедуры

// показ примечания
Процедура ПримечаниеОткрытие(Элемент, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПоказатьДлинныеСтроковыеДанные(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

Процедура ТипЦенПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ТипЦен) Тогда
		Возврат;
	КонецЕсли;
	
	ЦенаВключаетНДС = ТипЦен.ЦенаВключаетНДС;
	
КонецПроцедуры
