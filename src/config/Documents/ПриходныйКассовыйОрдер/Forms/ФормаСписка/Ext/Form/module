Перем мВалютаРегламентированногоУчета;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	ПолучитьСерверТО().ПодключитьКлиента(ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "При закрытии" формы.
//
// Параметры:
//  Нет.
//
Процедура ПриЗакрытии()

	ПолучитьСерверТО().ОтключитьКлиента(ЭтаФорма);

КонецПроцедуры // ПриЗакрытии()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДействияФормыПечатьКассовогоЧека(Кнопка)

	Перем ФУ;

	ТекущиеДанные = ЭлементыФормы.Список.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Предупреждение("В списке не выбран документ, печать чека для которого запрашивается.");
		Возврат;
	КонецЕсли;

	Ссылка = ТекущиеДанные.Ссылка;
	Объект = Ссылка.ПолучитьОбъект();

	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Организация");
	Если Не РаботаСТорговымОборудованием.ПолучитьПроверитьПараметрыДляПробитияЧека(ФУ, Истина, Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.НомерЧекаККМ <> 0 Тогда
		Предупреждение("Чек уже пробит на фискальном устройстве!");
		Возврат;
	КонецЕсли;

	Если (НЕ Объект.Оплачено) ИЛИ (НЕ Объект.Проведен) Тогда
		Ответ = Вопрос("Провести документ?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Предупреждение("Операция не выполнена!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Объект.Оплачено = Истина;
	Объект.Записать(РежимЗаписиДокумента.Проведение);
	
	Если (НЕ Объект.Проведен) ИЛИ Объект.Модифицированность() Тогда
		Предупреждение("Операция не выполнена!");
		Возврат;
	КонецЕсли;
	
	ЗаголовокЧека = "Принято от " + Объект.ПринятоОт + "
				|Основание: " + Объект.Основание;
				
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    &ЗаголовокЧека             КАК Заголовок,
	|    ТчРасшифровка.СуммаПлатежа КАК Сумма,
	|    ВЫБОР
	|        КОГДА ТчРасшифровка.СтавкаНДС = &НДС20 ИЛИ ТчРасшифровка.СтавкаНДС = &НДС120 ТОГДА
	|            20
	|        КОГДА ТчРасшифровка.СтавкаНДС = &НДС10 ИЛИ ТчРасшифровка.СтавкаНДС = &НДС110 ТОГДА
	|            10
	|        КОГДА ТчРасшифровка.СтавкаНДС = &НДС18 ИЛИ ТчРасшифровка.СтавкаНДС = &НДС118 ТОГДА
	|            18
	|        ИНАЧЕ
	|            0
	|    КОНЕЦ                      КАК НДС
	|ИЗ
	|    Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТчРасшифровка
	|ГДЕ
	|    ТчРасшифровка.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НДС20",  Перечисления.СтавкиНДС.НДС20);
	Запрос.УстановитьПараметр("НДС120", Перечисления.СтавкиНДС.НДС20_120);
	Запрос.УстановитьПараметр("НДС10",  Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("НДС110", Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("НДС18",  Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("НДС118", Перечисления.СтавкиНДС.НДС18_118);
	Запрос.УстановитьПараметр("ЗаголовокЧека", ЗаголовокЧека);
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Предупреждение("Документ не содержит информации о платежах.");
		Возврат;
	КонецЕсли;

	ВидФУ = ПолучитьСерверТО().ПолучитьВид(ФУ);
	Если ВидФУ = Перечисления.ВидыТорговогоОборудования.ФискальныйРегистратор Тогда
		НомерСмены      = Неопределено;
		ТаблицаПлатежей = РезультатЗапроса.Выгрузить();

		Результат = ПолучитьСерверТО().ПечатьЧекаПКО(ФУ,
										ПолучитьСерверТО().ПолучитьПарольКассираККМ(),
										Объект.НомерЧекаККМ,
										НомерСмены,
										ТаблицаПлатежей,
										Объект.СуммаДокумента,
										0);
	
		Если ЗначениеЗаполнено(Результат) Тогда
			ТекстОшибки = ПолучитьСерверТО().ПолучитьТекстОшибкиФРТО(Результат);
			Предупреждение(ТекстОшибки);
			Объект.ПолучитьФорму().Открыть();
			Возврат;
		КонецЕсли;
	Иначе
		
		ОписаниеПКС = КассовыеСменыВызовСервера.ОписаниеПоследнейКассовойСмены(ФУ);
		Если ОписаниеПКС = Неопределено ИЛИ ОписаниеПКС.Статус = Перечисления.СтатусыКассовойСмены.Закрыта Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Кассовая смена не открыта");
			Возврат;
		КонецЕсли;

		ОбъектДрайвера = Неопределено;
		ОбработкаОбслуживания = Неопределено;
		ПолучитьСерверТО().ПолучитьОбъектДрайвера(ФУ, ОбработкаОбслуживания, ОбъектДрайвера);
		
		ОбработкаОбслуживания.ПолучитьПараметрыККТ(ОбъектДрайвера);
		ВерсияФормата = МенеджерОборудованияКлиентСервер.ВерсияФФД(ОбъектДрайвера.ВыходныеПараметры);
		
		ПараметрыЧека = МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека();
		ПараметрыЧека.Вставить("ОписаниеПКС", ОписаниеПКС);
		МенеджерОборудованияВызовСервера.ПодготовитьДанныеДляФискализацииЧека(Ссылка, ПараметрыЧека, ВерсияФормата, 
			ПолучитьСерверТО().ПолучитьМодель(ФУ), Ссылка.ПринятоОт, Ссылка.Основание);
		
		ОшибкаТО = ОбработкаОбслуживания.ФискализироватьЧек(ОбъектДрайвера, ПараметрыЧека);
		Если ЗначениеЗаполнено(ОшибкаТО) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(ОбъектДрайвера.ОписаниеОшибки);
			Возврат;
		Иначе
			Объект.НомерЧекаККМ = ОбъектДрайвера.ВыходныеПараметры[1];
			Объект.ККМ = ОписаниеПКС.КассаККМ;
			Объект.ТекстЭлектронногоЧека = ПараметрыЧека.ТекстЭлектронногоЧека;
		КонецЕсли;

	КонецЕсли;
	Объект.Записать(РежимЗаписиДокумента.Запись);

КонецПроцедуры



///////////////////////////////////////////////////////////////////////////////
//// ФУНКЦИИ ВЗАИМОДЕЙСТВИЯ С ТОРГОВЫМ ОБОРУДОВАНИЕМ (ОБЩИЕ ФУНКЦИИ API)

// Функция возвращает признак того, что клиент поддерживает работу с видом ТО,
// переданным в качестве параметра.
//
// Параметры:
//  Вид      - <ПеречислениеСсылка.ВидыТорговогоОборудования>
//           - Вид торгового оборудования, информация о поддержке
//             которого запрашивается.
//
// Возвращаемое значение:
//  <Булево> - Признак поддержки указанного класса торгового оборудования.
//
Функция ПоддерживаетсяВидТО(Вид) Экспорт

	Результат = Ложь;

	Если Вид = Перечисления.ВидыТорговогоОборудования.ФискальныйРегистратор 
		ИЛИ Вид = Перечисления.ВидыТорговогоОборудования.ККТ Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПоддерживаетсяВидТО()

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
