////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обаботчик события "ПередОткрытием" Формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПередОткрытиемФормыДокументаВведенногоНаОсновании(ЭтотОбъект, Отказ, ЭтаФорма);	
	ЭлектронныеДокументы.УстановитьЗаголовокФормыЭлектронногоДокумента(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обаботчик события "ПослеЗаписи" Формы
//
Процедура ПослеЗаписи() Экспорт
	
	ЭлектронныеДокументы.ПослеЗаписиФормыДокумента(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ОбновитьСтатусДокумента()
	
	СтатусДокумента = ?(Акцептовать, "Документ принят", "Документ НЕ ПРИНЯТ");
	
КонецПроцедуры

// Процедура - обаботчик события, при нажатии на кнопку "Структура подчиненности документа" Командной панели "ДействияФормы"
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

Процедура ДействияОтправкаДокумента(ЗадаватьВопросОПовторнойОтправке = Истина, ЗадаватьВопросОЗаписиДокумента = Истина)
	
	Если Не ЭлектронныеДокументы.ПроверитьПередОтправкойЭлектронногоДокумента(ЭтаФорма, ЗадаватьВопросОПовторнойОтправке, ЗадаватьВопросОЗаписиДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ     = Ложь;
	Сообщение = "";
	ЭлектронныеДокументы.ОтправитьИсходящийЭлектронныйДокумент(ЭтотОбъект, Отказ, Сообщение);
	
	ЭлектронныеДокументы.ДействияПослеОтправкиДокумента(Ссылка, Отказ, Сообщение, ЭтаФорма);	
	
КонецПроцедуры

// Процедура - обаботчик события, при нажатии на кнопку "Отправить" Командной панели "ОсновныеДействияФормы"
//
Процедура ОсновныеДействияФормыОтправить(Кнопка)
	
	ДействияОтправкаДокумента(Истина, Ложь);
	
КонецПроцедуры

// Процедура - обаботчик события "ПриИзменении" в: Поле ввода "УчетнаяЗаписьЭлектронногоОбмена"
//
Процедура УчетнаяЗаписьЭлектронногоОбменаПриИзменении(Элемент)
	
	ЭлектронныеДокументы.ПриИзмененииУчетнойЗаписиВДокументе(ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обаботчик события "Нажатие" в: Кнопка "СоздатьНакладную"
//
Процедура СоздатьДокументНажатие(Элемент)
	
	Если ЗначениеЗаполнено(УчетныйДокумент) Тогда
		Предупреждение("Документ ""Счет-фактура полученный"" уже создан!");
		Возврат;
	КонецЕсли;
	
	Док = Документы.СчетФактураПолученный.СоздатьДокумент();
	
	Док.НомерВходящегоДокументаЭлектронногоОбмена = ИсходныйДокумент.НомерСчетаФактуры;
	Док.ДатаВходящегоДокументаЭлектронногоОбмена = ИсходныйДокумент.ДатаСчетаФактуры;
	
	Док.Дата = ТекущаяДата();
			
	Док.Организация = Организация;
	Док.Контрагент  = Контрагент;
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Док, ПараметрыСеанса.ТекущийПользователь);
	
	Для каждого СтрокаТовараЭлДок Из ИсходныйДокумент.ДокументыОснования Цикл
		
		СтрокаТабличнойЧасти = Док.ДокументыОснования.Добавить();
		СтрокаТабличнойЧасти.ДокументОснование = СтрокаТовараЭлДок.ДокументОснование;	
			
	КонецЦикла;
		
	Попытка
		Док.Записать();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		Акцептовать = Ложь;
		ОбновитьСтатусДокумента();
		Предупреждение("Операция не выполнена");		
		Возврат;
	КонецПопытки; 
		
	УчетныйДокумент = Док.Ссылка;
	
	ЭлектронныеДокументы.СкопироватьПрикрепленныйФайлы(ИсходныйДокумент, УчетныйДокумент);
	
	Акцептовать = Истина;
	ЗаписатьВФорме();
	ОбновитьСтатусДокумента();
	
	ФормаДокумента = Док.ПолучитьФорму(, ЭтаФорма);
	ФормаДокумента.Открыть();		
		
КонецПроцедуры

Процедура УчетнаяЗаписьЭлектронногоОбменаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.НачалоВыбораУчетнойЗаписиВДокументе(Элемент, СтандартнаяОбработка, ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

Процедура ПриИзмененииДанных()
	
	ОбновитьСтатусДокумента();
	
КонецПроцедуры

Процедура ОтклонитьДокументНажатие(Элемент)
	
	Если ЗначениеЗаполнено(УчетныйДокумент) Тогда
		
		ОтветПользователя = Вопрос("На основании документа создан документ счет-фактура. Вы уверены что хотите отклонить документ?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		
		Если ОтветПользователя <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
		ОбъектУчетногоДокумента = УчетныйДокумент.ПолучитьОбъект();
		ОбъектУчетногоДокумента.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;
		
	Акцептовать = Ложь;
	
	ОбновитьСтатусДокумента();
	
	ЗаписатьВФорме();
	
	// предлагаем отправить документ
	ОтветПользователя = Вопрос("Документ ОТКЛОНЕН! Отправить отклонение?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
	Если ОтветПользователя <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДействияОтправкаДокумента(Ложь, Ложь);
	
КонецПроцедуры

// обработчик показа состава файла обмена
Процедура ДействияФормыПоказатьДанныеОбмена(Кнопка)
	
	ЭлектронныеДокументы.ПоказатьДанныеОбмена(ЭтотОбъект);	
	
КонецПроцедуры

// показ примечания
Процедура ПримечаниеОткрытие(Элемент, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПоказатьДлинныеСтроковыеДанные(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	ЭлектронныеДокументы.ПоказатьДлинныеСтроковыеДанные(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
КонецПроцедуры
