
Перем мСтруктураПоложенийКолонок;
Перем мФлагСодержания;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура настраивает отображение колонок и состояние кнопки "Содержание" тулбара.
//
Процедура СостояниеКнопкиИКолонкиОтображенияСодержания()

	ЭлементыФормы.ДействияФормы.Кнопки.Содержание.Пометка = мФлагСодержания;
	ЭлементыФормы.ДокументСписок.Колонки.СодержаниеСобытия.Видимость = мФлагСодержания;
	
	Для каждого Колонка Из ЭлементыФормы.ДокументСписок.Колонки Цикл
		Если мФлагСодержания Тогда
			Колонка.Положение = мСтруктураПоложенийКолонок[Колонка.Имя];
		Иначе
			Колонка.Положение = ПоложениеКолонки.НоваяКолонка;
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	ФлагСодержанияСобытия = ВосстановитьЗначение("ОтображатьСодержанияСобытия_Список");
	
	Если ТипЗнч(ФлагСодержанияСобытия) = Тип("Булево") Тогда
		мФлагСодержания = ФлагСодержанияСобытия;
	КонецЕсли;
	
	СостояниеКнопкиИКолонкиОтображенияСодержания();
	
	// Установка видимости реквизита "Проект".
	Отказ = Ложь;
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ТекущаяДата(), Отказ);
	Если Отказ Тогда
		ВедениеУчетаПоПроектам = Ложь;
	Иначе
		ВедениеУчетаПоПроектам = УчетнаяПолитика.ВедениеУчетаПоПроектам;
	КонецЕсли;
	ЭлементыФормы.ДокументСписок.Колонки.Проект.Видимость = ВедениеУчетаПоПроектам;
	
КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ОтображатьСодержанияСобытия_Список", мФлагСодержания);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ДанныеСтроки.ВидСобытия.Пустая() Тогда
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки     = УправлениеКонтактами.ОпределитьИндексКартинкиВидаСобытия(ДанныеСтроки.ВидСобытия,ДанныеСтроки.ТипСобытия);
	Иначе
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьКартинку = Ложь;
	КонецЕсли;

	ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьТекст    = Ложь;
	ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьФлажок   = Ложь;
	ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьКартинку = Истина;
	
	Если ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Запланировано Тогда
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 6;
	ИначеЕсли ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Завершено Тогда
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 4;
	ИначеЕсли ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Отменено Тогда
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 5;
	КонецЕсли; 
	
	Если ТипЗнч(ДанныеСтроки.Контрагент) = Тип("Строка") Тогда
		ОформлениеСтроки.Ячейки.Контрагент.Шрифт       = Новый Шрифт(,, Истина);
		ОформлениеСтроки.Ячейки.Контрагент.ЦветТекста  = WebЦвета.ТемноСиний;
	КонецЕсли; 
	
	Если ТипЗнч(ДанныеСтроки.КонтактноеЛицо) = Тип("Строка") Тогда
		ОформлениеСтроки.Ячейки.КонтактноеЛицо.Шрифт       = Новый Шрифт(,, Истина);
		ОформлениеСтроки.Ячейки.КонтактноеЛицо.ЦветТекста  = WebЦвета.ТемноСиний;
	КонецЕсли; 
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ДействияФормыСодержание(Кнопка)
	
	мФлагСодержания = НЕ мФлагСодержания;
	СостояниеКнопкиИКолонкиОтображенияСодержания();
	
КонецПроцедуры

Процедура ДокументСписокПередНачаломДобавления(Элемент, Отказ, Копирование)

	Если НЕ Копирование Тогда
		
		Отказ = Истина;

		НовоеСобытие = Документы.Событие.СоздатьДокумент();
		Если ДокументСписок.Отбор.Основание.Использование И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДокументСписок.Отбор.Основание.Значение)) Тогда
	
			НовоеСобытие.Основание = ДокументСписок.Отбор.Основание.Значение;
			
		ИначеЕсли ДокументСписок.Отбор.ДокументыПоКонтрагенту.Использование И ДокументСписок.Отбор.ДокументыПоКонтрагенту.ВидСравнения = ВидСравнения.Равно Тогда
			
			НовоеСобытие.Контрагент = ДокументСписок.Отбор.ДокументыПоКонтрагенту.Значение;
			
		Иначе
			
			Если Элемент <> Неопределено И Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.Ссылка.Пустая() Тогда
				ВыбранныйВидСобытия = РаботаСДиалогами.ВыбратьВидНовогоСобытия(ВыбранныйВидСобытия, Элемент.ТекущиеДанные.ВидСобытия);
			Иначе
				ВыбранныйВидСобытия = РаботаСДиалогами.ВыбратьВидНовогоСобытия(ВыбранныйВидСобытия);
			КонецЕсли;
			
			Если ВыбранныйВидСобытия = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			НовоеСобытие.ВидСобытия = ВыбранныйВидСобытия;
			
		КонецЕсли;
		
		НовоеСобытие.ПолучитьФорму().Открыть();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

мФлагСодержания = Ложь;

мСтруктураПоложенийКолонок = Новый Структура;
мСтруктураПоложенийКолонок.Вставить("Картинка"         , ПоложениеКолонки.НоваяКолонка);
мСтруктураПоложенийКолонок.Вставить("СостояниеСобытия" , ПоложениеКолонки.НоваяКолонка);
мСтруктураПоложенийКолонок.Вставить("Дата"             , ПоложениеКолонки.НоваяКолонка);
мСтруктураПоложенийКолонок.Вставить("Номер"            , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("ВидСобытия"       , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("ГруппаСобытия"    , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("Контрагент"       , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("КонтактноеЛицо"   , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("ОписаниеСобытия"  , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("Ответственный"    , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("Проект"		   , ПоложениеКолонки.ВТойЖеКолонке);
мСтруктураПоложенийКолонок.Вставить("СодержаниеСобытия", ПоложениеКолонки.НаСледующейСтроке);


ДокументСписок.Колонки.Добавить("ТипСобытия");
