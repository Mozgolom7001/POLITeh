Перем мТаблицаОбработокИзСправочника;
Перем мТаблицаОбработокССайта Экспорт;

Перем мАдресИПараметрыСервера Экспорт;

Перем мСообщениеОбОшибке;

Перем мПоследнееСостояниеОтображатьОтсутсвующие;
Перем мПоследнееСостояниеОтображатьТекущие;

Процедура КнопкаОбновитьНажатие(Кнопка)

	МассивСтрокТаблицыОбработокССайта = ТаблицаСостоянияОбновления.НайтиСтроки(Новый Структура("Обновить", Истина));

	Если МассивСтрокТаблицыОбработокССайта.Количество() > 0 Тогда
		Для Каждого СтрокаТаблицы Из МассивСтрокТаблицыОбработокССайта Цикл
			КаталогОбработки = РаботаСТорговымОборудованием.ЗагрузитьОбработкиССервера(мАдресИПараметрыСервера, , СтрокаТаблицы.ИмяОбработкиОбслуживания);

			Если КаталогОбработки <> "" Тогда
				ВыбранныйФайл = КаталогОбработки + СтрокаТаблицы.ИмяОбработкиОбслуживания; // Получаем полный путь к выбранному файлу

				// Находим запись для обновления в справочнике "ОбработкиОбслуживания"
				Если СтрокаТаблицы.ТекущееНаименование <> "Отсутствует" Тогда 
					ОбъектСправочника = мТаблицаОбработокИзСправочника.Найти(СтрокаТаблицы.ИмяОбработкиОбслуживания).Ссылка.ПолучитьОбъект();
					Попытка
						Если ОбъектСправочника.ПолучитьФорму().ЗагрузитьОбработкуОбслуживания(ВыбранныйФайл) Тогда
							ОбъектСправочника.Записать();
						КонецЕсли;
					Исключение
						ОписаниеОшибки = ОписаниеОшибки();
						Сообщить("Не удалось записать элемент с кодом " + ОбъектСправочника.Код +
						"Описание ошибки: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
					КонецПопытки;
				Иначе
					Попытка
						ФайлОО = Новый Файл(ВыбранныйФайл);
					Исключение
						Сообщить("Не удалось загрузить обработку.", СтатусСообщения.Внимание);
						Продолжить;
					КонецПопытки;

					Попытка
						ОбъектСправочника = Справочники.ОбработкиОбслуживанияТО.СоздатьЭлемент();

						Если ОбъектСправочника.ПолучитьФорму().ЗагрузитьОбработкуОбслуживания(ФайлОО.ПолноеИмя) Тогда
							ОбъектСправочника.Записать();
						КонецЕсли;
					Исключение
						ОписаниеОшибки = ОписаниеОшибки();
						Сообщить("Не удалось записать элемент с кодом " + ОбъектСправочника.Код +
						"Описание ошибки: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
						Возврат;
					КонецПопытки;
				КонецЕсли;
			Иначе
				Сообщить("Ошибка! Не удалось загрузить обработку обслуживания: """ + СтрокаТаблицы.ТекущееНаименование +
				 " (" + СтрокаТаблицы.ИмяОбработкиОбслуживания + ")" + """", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Сообщить("Ошибка! Перед обновлением необходимо выбрать хотя бы одну обновляемую обработку.", СтатусСообщения.Важное);
	КонецЕсли;

	ОбновитьТаблицу(ОтображатьОтсутствующиеОбработки, ОтображатьТекущиеИНовыеОбработки);

КонецПроцедуры

Процедура ТаблицаСостоянияОбновленияПриПолученииДанных(Элемент, ОформленияСтрок)

	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ТекущаяСтрока = ОформлениеСтроки.ДанныеСтроки;
		Если ТекущаяСтрока.ТекущееНаименование <> "Отсутствует" И ТекущаяСтрока.НовоеНаименование <> "Отсутствует" Тогда
			Если ТекущаяСтрока.ТекущаяВерсия = ТекущаяСтрока.НоваяВерсия
			   И ТекущаяСтрока.ТекущаяВерсияAPI = ТекущаяСтрока.НоваяВерсияAPI Тогда
				ОформлениеСтроки.ЦветТекста = Новый Цвет(0, 0, 0);
			ИначеЕсли ТекущаяСтрока.ТекущаяВерсия < ТекущаяСтрока.НоваяВерсия
			 Или ТекущаяСтрока.ТекущаяВерсияAPI < ТекущаяСтрока.НоваяВерсияAPI Тогда
				ОформлениеСтроки.ЦветТекста = Новый Цвет(255, 0, 0);
			ИначеЕсли ТекущаяСтрока.ТекущаяВерсия > ТекущаяСтрока.НоваяВерсия
			   И ТекущаяСтрока.ТекущаяВерсияAPI >= ТекущаяСтрока.НоваяВерсияAPI Тогда
				ОформлениеСтроки.ЦветТекста = Новый Цвет(0, 192, 0);
			КонецЕсли;
		ИначеЕсли ТекущаяСтрока.ТекущееНаименование = "Отсутствует" Тогда
			ОформлениеСтроки.ЦветТекста = Новый Цвет(0, 0, 255);
		Иначе
			ОформлениеСтроки.ЦветТекста = Новый Цвет(192, 192, 192);
		КонецЕсли;

		Если ТекущаяСтрока.Обновить Тогда
			ОформлениеСтроки.Шрифт = Новый Шрифт(, , Истина);
		КонецЕсли;

		Если ТекущаяСтрока.ТекущееНаименование = ТекущаяСтрока.НовоеНаименование Тогда
			ОформлениеСтроки.Ячейки.НовоеНаименование.УстановитьТекст("");
		КонецЕсли;
		Если ТекущаяСтрока.ТекущаяВерсия = ТекущаяСтрока.НоваяВерсия Тогда
			ОформлениеСтроки.Ячейки.НоваяВерсия.УстановитьТекст("");
		КонецЕсли;
		Если ТекущаяСтрока.ТекущаяВерсияAPI = ТекущаяСтрока.НоваяВерсияAPI Тогда
			ОформлениеСтроки.Ячейки.НоваяВерсияAPI.УстановитьТекст("");
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПриОткрытии()

	ОбновитьТаблицу();

	// Восстановление настройки проверки наличия комплекта обновления обработок обслуживания торгового оборудования
	ПроверятьООПриЗапуске = ВосстановитьЗначение("ПроверкаНаличияОбновленияОбработокОбслуживанияПриЗапуске");
	ПроверятьООПриЗапуске = ?(ПроверятьООПриЗапуске = Неопределено, Ложь, ПроверятьООПриЗапуске);
	ПроверятьПриЗапуске   = ПроверятьООПриЗапуске;
	Если ТаблицаСостоянияОбновления.Количество() = 0 Тогда
		ОтображатьТекущиеИНовыеОбработки = Истина;
		ОбновитьТаблицу(ОтображатьОтсутствующиеОбработки, ОтображатьТекущиеИНовыеОбработки);
	КонецЕсли;

КонецПроцедуры

Процедура ТаблицаСостоянияОбновленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если Элемент.ТекущаяСтрока.НовоеНаименование = "Отсутствует" Тогда
		Элемент.ТекущаяСтрока.Обновить = Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьТаблицу(ОтображатьОтсутствующиеОбработки = Ложь, ОтображатьТекущиеИНовыеОбработки = Ложь)

	мТаблицаОбработокИзСправочника = РаботаСТорговымОборудованием.ПолучитьОбработки();

	ТаблицаСостоянияОбновления.Очистить();

	Для Каждого СтрокаТаблицыСправочника Из мТаблицаОбработокИзСправочника Цикл
		НоваяСтрока = ТаблицаСостоянияОбновления.Добавить();
		НоваяСтрока.Обновить            = Ложь;
		НоваяСтрока.ИмяОбработкиОбслуживания = СтрокаТаблицыСправочника.ИмяФайла;
		НоваяСтрока.ТекущееНаименование = СтрокаТаблицыСправочника.Наименование;
		НоваяСтрока.ТекущаяВерсия       = СтрокаТаблицыСправочника.Версия;
		НоваяСтрока.ТекущаяВерсияAPI    = СтрокаТаблицыСправочника.ВерсияAPI;
		НоваяСтрока.Подсказка           = СтрокаТаблицыСправочника.Описание;
		НоваяСтрока.НовоеНаименование   = "";
		НоваяСтрока.НоваяВерсия         = 0;
		НоваяСтрока.НоваяВерсияAPI      = 0;
	КонецЦикла;

	КоличествоСтрок = ТаблицаСостоянияОбновления.Количество();
	Для ИндексСтроки = 1 По КоличествоСтрок Цикл
		СтрокаТаблицыОбработокССайта = мТаблицаОбработокССайта.Найти(ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].ИмяОбработкиОбслуживания);
		Если СтрокаТаблицыОбработокССайта <> Неопределено Тогда
			Если (Не ОтображатьТекущиеИНовыеОбработки)
			   И ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].ТекущаяВерсия    >= Число(СтрокаТаблицыОбработокССайта.ВерсияОбработки)
			   И ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].ТекущаяВерсияAPI >= Число(СтрокаТаблицыОбработокССайта.ВерсияAPI) Тогда
				ТаблицаСостоянияОбновления.Удалить(ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки]);
				Продолжить;
			КонецЕсли;

			ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].НовоеНаименование   = СтрокаТаблицыОбработокССайта.Наименование;
			ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].НоваяВерсия         = СтрокаТаблицыОбработокССайта.ВерсияОбработки;
			ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].НоваяВерсияAPI      = СтрокаТаблицыОбработокССайта.ВерсияAPI;
			ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].Подсказка           = СтрокаТаблицыОбработокССайта.Описание;
		Иначе
			Если (Не ОтображатьТекущиеИНовыеОбработки) Тогда
				ТаблицаСостоянияОбновления.Удалить(ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки]);
				Продолжить;
			КонецЕсли;
			ТаблицаСостоянияОбновления[КоличествоСтрок - ИндексСтроки].НовоеНаименование   = "Отсутствует"
		КонецЕсли;
	КонецЦикла;

	Если ОтображатьОтсутствующиеОбработки Тогда
		Для Каждого СтрокаТаблицыОбработокССайта Из мТаблицаОбработокССайта Цикл
			МассивСтрокТаблицыСправочника = мТаблицаОбработокИзСправочника.НайтиСтроки(Новый Структура("ИмяФайла", СтрокаТаблицыОбработокССайта.Имя));
			Если МассивСтрокТаблицыСправочника.Количество() = 0 Тогда
				НоваяСтрока = ТаблицаСостоянияОбновления.Добавить();
				НоваяСтрока.Обновить            = Ложь;
				НоваяСтрока.ИмяОбработкиОбслуживания = СтрокаТаблицыОбработокССайта.Имя;
				НоваяСтрока.ТекущееНаименование = "Отсутствует";
				НоваяСтрока.ТекущаяВерсия       = 0;
				НоваяСтрока.ТекущаяВерсияAPI    = 0;
				НоваяСтрока.НовоеНаименование   = СтрокаТаблицыОбработокССайта.Наименование;
				НоваяСтрока.НоваяВерсия         = СтрокаТаблицыОбработокССайта.ВерсияОбработки;
				НоваяСтрока.НоваяВерсияAPI      = СтрокаТаблицыОбработокССайта.ВерсияAPI;
				НоваяСтрока.Подсказка           = СтрокаТаблицыОбработокССайта.Описание;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ТаблицаСостоянияОбновления.Сортировать("ТекущееНаименование Возр");

КонецПроцедуры

Процедура КоманднаяПанель1ВыбратьВсе(Кнопка)

	Если ТаблицаСостоянияОбновления.Количество() > 0 Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаСостоянияОбновления Цикл
			Если СтрокаТаблицы.НовоеНаименование = "Отсутствует" Тогда
				Продолжить;
			КонецЕсли;

			СтрокаТаблицы.Обновить = Истина;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель1СнятьВсе(Кнопка)

	ТаблицаСостоянияОбновления.ЗаполнитьЗначения(Ложь, "Обновить");

КонецПроцедуры

Процедура ОтображатьОтсутствующиеОбработкиПриИзменении(Элемент)

	мПоследнееСостояниеОтображатьОтсутсвующие = ОтображатьОтсутствующиеОбработки;
	мПоследнееСостояниеОтображатьТекущие      = ОтображатьТекущиеИНовыеОбработки;
	ОбновитьТаблицу(ОтображатьОтсутствующиеОбработки, ОтображатьТекущиеИНовыеОбработки);

КонецПроцедуры

Процедура ПриЗакрытии()

	// Сохранение настройки проверки наличия комплекта обновления обработок обслуживания торгового оборудования
	СохранитьЗначение("ПроверкаНаличияОбновленияОбработокОбслуживанияПриЗапуске", ЭлементыФормы.ПроверятьПриЗапуске.Значение);

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(мТаблицаОбработокССайта) Тогда
		Сообщить("Не удалось загрузить список обработок обслуживания с сайта.
		|Работа с формой невозможна.", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель1ОбновитьСписокОбработокССайта(Кнопка)

	СообщениеОбОшибке = "";
	мТаблицаОбработокССайта = РаботаСТорговымОборудованием.ПолучитьСписокОбработокССайта(мАдресИПараметрыСервера, , СообщениеОбОшибке);

	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Обновить.Доступность = ЗначениеЗаполнено(мТаблицаОбработокССайта);
	ЭлементыФормы.ОтображатьОтсутствующиеОбработки.Доступность      = ЗначениеЗаполнено(мТаблицаОбработокССайта);
	ЭлементыФормы.ОтображатьТекущиеИНовыеОбработки.Доступность      = ЗначениеЗаполнено(мТаблицаОбработокССайта);

	Если Не ЗначениеЗаполнено(мТаблицаОбработокССайта) Тогда
		Если СообщениеОбОшибке <> "" И мАдресИПараметрыСервера.HTTP = Неопределено Тогда
			Сообщить("Не удалось выполнить операцию.
			|Проверьте наличие соединения с Интернетом и параметры подключения к ресурсу обновления обработок обслуживания.", СтатусСообщения.Важное);
			мТаблицаОбработокИзСправочника = Неопределено;
		ИначеЕсли мАдресИПараметрыСервера.HTTP <> Неопределено Тогда
			Сообщить("Не удалось загрузить список обработок обслуживания с сайта.", СтатусСообщения.Важное);
		КонецЕсли;

		ОтображатьОтсутствующиеОбработки = Истина;
		ОтображатьТекущиеИНовыеОбработки = Истина;
		ТаблицаСостоянияОбновления.Очистить();
	Иначе
		ОтображатьОтсутствующиеОбработки = мПоследнееСостояниеОтображатьОтсутсвующие;
		ОтображатьТекущиеИНовыеОбработки = мПоследнееСостояниеОтображатьТекущие;
		ОбновитьТаблицу(ОтображатьОтсутствующиеОбработки, ОтображатьТекущиеИНовыеОбработки);
	КонецЕсли;

КонецПроцедуры


