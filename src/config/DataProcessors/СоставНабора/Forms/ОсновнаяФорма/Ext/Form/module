Перем мФормаДокумента;
Перем мКолонкиСоставНабора;

Перем мКартинкаСерийныеНомера;

Перем мЕстьЦена;

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура проверки заполнения табличной части состав набора.
//
// Параметры:
//  СтруктураОбязательныхПолей - структура, содержащая имена полей, которые собственно и надо проверить.
//  Отказ                      - флаг проверки.
//  Заголовок                  - строка, заголовок сообщения об ошибке.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиСоставНабора(СтруктураОбязательныхПолей, Отказ, Заголовок)

	МетаданныеРеквизиты = ЭтотОбъект.Метаданные().ТабличныеЧасти.СоставНабора.Реквизиты;

	// Цикл по строкам табличной части.
	Для каждого СтрокаТаблицы Из СоставНабора Цикл

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) +
		                                """ табличной части ""Состав набора"": ";

		// Цикл по проверяемым полям
		Для каждого КлючЗначение Из СтруктураОбязательныхПолей Цикл

			Значение = СтрокаТаблицы[КлючЗначение.Ключ];
			Если НЕ ЗначениеЗаполнено(Значение) Тогда

				Если НЕ ЗначениеЗаполнено(КлючЗначение.Значение) Тогда
					ПредставлениеРеквизита = МетаданныеРеквизиты[КлючЗначение.Ключ].Представление();
					СтрокаСообщения = "Не заполнено значение реквизита """ + СокрЛП(ПредставлениеРеквизита) + """!";
				Иначе
					СтрокаСообщения = КлючЗначение.Значение;
				КонецЕсли;
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, Отказ, Заголовок);

			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиСоставНабора()

// Процедура сохраняет в документе состав набора.
//
Процедура ЗаписатьСоставНабораВДокумент()

	Документ.СоставНабора.Загрузить(СоставНабора.Выгрузить());

КонецПроцедуры // ЗаписатьСоставНабораВДокумент()

// Процедура устанавливает значения исходных параметров.
//
Процедура УстановитьЗначенияИсходныхПараметров()
	Перем ДоступностьКнСерийныеНомера;
	
	ЗаголовокФормы = Неопределено;
	мТолькоПросмотр = Неопределено;
	СтруктураИсходныхПараметров.Свойство("Номенклатура",				Номенклатура);
	СтруктураИсходныхПараметров.Свойство("Количество",					Количество);
	СтруктураИсходныхПараметров.Свойство("ЕдиницаИзмерения",			ЕдиницаИзмерения);
	СтруктураИсходныхПараметров.Свойство("ДокументОбъект",				Документ);
	СтруктураИсходныхПараметров.Свойство("ФормаДокумента",				мФормаДокумента);
	СтруктураИсходныхПараметров.Свойство("ИмяТабличнойЧасти",			ИмяТабличнойЧасти);
	СтруктураИсходныхПараметров.Свойство("КлючСтроки",					КлючСтроки);
	СтруктураИсходныхПараметров.Свойство("ЗаголовокФормы",				ЗаголовокФормы);
	СтруктураИсходныхПараметров.Свойство("ТолькоПросмотр",				мТолькоПросмотр);
	СтруктураИсходныхПараметров.Свойство("ДоступностьКнСерийныеНомера",	ДоступностьКнСерийныеНомера);
	
	ЭлементыФормы.КоманднаяПанельТовары.Кнопки.СерийныеНомера.Доступность = ДоступностьКнСерийныеНомера = Неопределено;
	
	Если ЗаголовокФормы <> Неопределено Тогда
		ЭтаФорма.Заголовок = ЗаголовокФормы;
		ЭлементыФормы.РамкаГруппыСоставНабора.Заголовок = ЗаголовокФормы;
	КонецЕсли;

	мТолькоПросмотр = ?(мТолькоПросмотр = Неопределено, Ложь, мТолькоПросмотр);

	ТолькоПросмотр = мТолькоПросмотр;

КонецПроцедуры // УстановитьЗначенияИсходныхПараметров()

// Процедура устанавливает отбор табличной части по реквизиту "КлючСтроки".
//
Процедура УстановитьОтборТабЧасти()

	ЭлементыФормы.СоставНабора.ОтборСтрок.КлючСтроки.Установить(КлючСтроки);

КонецПроцедуры // УстановитьОтборТабЧасти()

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Проверим тип реквизита формы СтруктураПараметровФормы. Должен быть "Структура".
	// При неверном типе не будем запускать подбор.
	Если ТипЗнч(СтруктураИсходныхПараметров) <> Тип("Структура") Тогда
		Отказ = Истина;
		Предупреждение("Не верный тип параметра ""СтруктураИсходныхПараметров""!
		               |Данная обработка вызывается из других процедур конфигурации.
		               |Вручную ее вызывать запрещено."); 
		Возврат;
	КонецЕсли;

	УстановитьЗначенияИсходныхПараметров();

	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Предупреждение("Не выбрана номенклатура!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	СоставНабора.Загрузить(Документ.СоставНабора.Выгрузить());

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	КолонкиТабЧастиДокумента = мФормаДокумента.ЭлементыФормы[ИмяТабличнойЧасти].Колонки;
	НастройкаОтбораСтрок     = ЭлементыФормы.СоставНабора.НастройкаОтбораСтрок;

	мЕстьЦена = (КолонкиТабЧастиДокумента.Найти("Цена") <> Неопределено);

	// Установим видимость и доступность колонок
	Для каждого Колонка Из мКолонкиСоставНабора Цикл
		Имя = Колонка.Имя;

		Если Имя = "НомерСтроки"
		 ИЛИ Имя = "Номенклатура"
		 ИЛИ Имя = "Количество"
		 ИЛИ Имя = "Всего"
		 ИЛИ Имя = "ЕдиницаИзмерения" Тогда
			Продолжить;
		КонецЕсли;

		Если КолонкиТабЧастиДокумента.Найти(Имя) = Неопределено Тогда
			Видимость         = Ложь;
			ИзменятьВидимость = Ложь;
			Доступность       = Ложь;
		Иначе
			Видимость         = КолонкиТабЧастиДокумента[Имя].Видимость;
			ИзменятьВидимость = КолонкиТабЧастиДокумента[Имя].ИзменятьВидимость;
			Доступность       = КолонкиТабЧастиДокумента[Имя].Доступность;
		КонецЕсли;

		Колонка.Видимость         = Видимость;
		Колонка.ИзменятьВидимость = ИзменятьВидимость;
		Колонка.Доступность       = Видимость;

		Если Имя <> "Код"
		   И Имя <> "Артикул"
		   И Имя <> "Всего" Тогда
			НастройкаОтбораСтрок[Имя].Доступность = ИзменятьВидимость;
		КонецЕсли;
	КонецЦикла;

	УстановитьОтборТабЧасти();

	Если мЕстьЦена Тогда
		ЭлементыФормы.ПанельСуммарнаяЦенаКомплекта.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельСуммарнаяЦенаКомплекта.Свертка = РежимСверткиЭлементаУправления.Низ;
	КонецЕсли;

	РаботаСДиалогами.УстановитьДоступностьКнопкиСерийныеНомера(ЭлементыФормы.КоманднаяПанельТовары.Кнопки);

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриПовторномОткрытии" формы.
//
Процедура ПриПовторномОткрытии(СтандартнаяОбработка)

	Если ЭтаФорма.Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьСоставНабораВДокумент();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ЭтаФорма.Модифицированность = Ложь;

	УстановитьЗначенияИсходныхПараметров();

	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Предупреждение("Не выбрана номенклатура!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	УстановитьОтборТабЧасти();

КонецПроцедуры // ПриПовторномОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если ЭтаФорма.Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьСоставНабораВДокумент();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "СерийныеНомера" командной панели
// табличного поля "Товары".
//
Процедура КоманднаяПанельТоварыСерийныеНомера(Кнопка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.СоставНабора.ТекущиеДанные;
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьСоставНабораВДокумент();
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Номенклатура", 				СтрокаТабличнойЧасти.Номенклатура);
	СтруктураПараметров.Вставить("ХарактеристикаНоменклатуры", 	СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры);
	СтруктураПараметров.Вставить("СерияНоменклатуры", 			СтрокаТабличнойЧасти.СерияНоменклатуры);
	СтруктураПараметров.Вставить("Количество", 					СтрокаТабличнойЧасти.Количество);
	СтруктураПараметров.Вставить("ЕдиницаИзмерения", 			СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	СтруктураПараметров.Вставить("СозданиеНовыхСерийныхНомеров",Ложь);
	СтруктураПараметров.Вставить("ДокументОбъект", 				Документ);
	СтруктураПараметров.Вставить("ОбработкаСоставНабора", 		ЭтотОбъект);
	СтруктураПараметров.Вставить("ИмяТабличнойЧасти", 			"СоставНабора");
	СтруктураПараметров.Вставить("ИмяТабличнойЧастиСерийныеНомера", "СерийныеНомераСоставНабора");
	СтруктураПараметров.Вставить("НомерСтрокиТабличнойЧасти", 	СтрокаТабличнойЧасти.НомерСтроки);
	СтруктураПараметров.Вставить("ПараметрыСвязиСтрокТЧ", 		Документ.мПараметрыСвязиСтрокТЧ);
	СтруктураПараметров.Вставить("СоставНабораСтрокаТабличнойЧасти", СтрокаТабличнойЧасти);
	
	// Открываем форму подбора.
	ФормаВводСерийныхНомеров = Обработки.ВводСерийныхНомеров.ПолучитьФорму("ОсновнаяФорма", ЭтаФорма, ЭтаФорма);
	ФормаВводСерийныхНомеров.СтруктураИсходныхПараметров = СтруктураПараметров;
	ФормаВводСерийныхНомеров.Открыть();

КонецПроцедуры // КоманднаяПанельТоварыСерийныеНомера()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ СОСТАВ НАБОРА

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
//
Процедура СоставНабораПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если мКолонкиСоставНабора.Всего.Видимость Тогда
		ТекКоличество = ?(ДанныеСтроки.ЕдиницаИзмерения.Коэффициент <> 0, ДанныеСтроки.Количество * Количество * ЕдиницаИзмерения.Коэффициент / ДанныеСтроки.ЕдиницаИзмерения.Коэффициент, 0);
		ОформлениеСтроки.Ячейки.Всего.УстановитьТекст(СокрЛ(Формат(ТекКоличество, "ЧЦ=15; ЧДЦ=3")));
	КонецЕсли;

	РаботаСДиалогами.ПоказатьКодАртикул(мКолонкиСоставНабора, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);

КонецПроцедуры // СоставНабораПриВыводеСтроки()

// Процедура - обработчик события "ПриПолученииДанных" табличной части
//
Процедура СоставНабораПриПолученииДанных(Элемент, ОформленияСтрок)

	РаботаСДиалогами.УстановитьКартинкиВСтрокахТЧ(ОформленияСтрок, мКартинкаСерийныеНомера, Неопределено, Истина, Ложь);

КонецПроцедуры // СоставНабораПриПолученииДанных()

// Процедура - обработчик события "ПриНачалеРедактирования" табличной части
//
Процедура СоставНабораПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = КлючСтроки;
	КонецЕсли;

КонецПроцедуры // СоставНабораПриНачалеРедактирования()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК" командной панели формы.
//
Процедура КнопкаОКНажатие(Кнопка)

	Отказ = Ложь;
	ТекстЗаголовка = "Проверка заполнения состава набора документа """ + СокрЛП(Документ) + """: ";
	СтруктураОбязательныхПолей = Новый Структура("ЕдиницаИзмерения");

	ПроверитьЗаполнениеТабличнойЧастиСоставНабора(СтруктураОбязательныхПолей, Отказ, ТекстЗаголовка);

	Если НЕ Отказ Тогда
		ЗаписатьСоставНабораВДокумент();

		Если мЕстьЦена Тогда
			ТекЦена = ПолучитьСуммарнуюЦенуКомплекта();
			Если ТекЦена <> 0 Тогда
				СтрокаТЧ = Документ[ИмяТабличнойЧасти].Найти(КлючСтроки, "КлючСтроки");
				Если СтрокаТЧ.Цена = 0 Тогда
					УстановитьЦенуКомплектаВДокументе(СтрокаТЧ, ТекЦена);
				ИначеЕсли СтрокаТЧ.Цена <> ТекЦена Тогда
					Ответ = Вопрос("Изменить цену в документе на суммарную цену комплекта?", РежимДиалогаВопрос.ДаНет);
					Если Ответ = КодВозвратаДиалога.Да Тогда
						УстановитьЦенуКомплектаВДокументе(СтрокаТЧ, ТекЦена);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		ЭтаФорма.Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры // КнопкаОКНажатие()

// Обработчик события "ПриИзменении" реквизита "Номенклатура" в ТЧ "СоставНабора".
//
Процедура СоставНабораНоменклатураПриИзменении(Элемент)

	ТекущаяСтрока = ЭлементыФормы.СоставНабора.ТекущиеДанные;

	ТекущаяСтрока.ЕдиницаИзмерения = ТекущаяСтрока.Номенклатура.ЕдиницаХраненияОстатков;

	ЗаполнитьЦенуКомплектующей(ТекущаяСтрока);

КонецПроцедуры // СоставНабораНоменклатураПриИзменении()

// Процедура - обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()

	Если мЕстьЦена Тогда
		ЭлементыФормы.СуммарнаяЦенаКомплекта.Значение = ОбщегоНазначения.ФорматСумм(ПолучитьСуммарнуюЦенуКомплекта());
	КонецЕсли;

КонецПроцедуры // ОбновлениеОтображения()

// Функция возвращается суммарную цену комплекта.
//
// Возвращаемое значение:
//  Число.
//
Функция ПолучитьСуммарнуюЦенуКомплекта()

	ТекЦена = 0;

	Выборка = ОбщегоНазначения.ОтобратьСтрокиПоКритериям(СоставНабора, Новый Структура("КлючСтроки", КлючСтроки)).Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекЦена = ТекЦена + Выборка.Количество * Выборка.Цена;
	КонецЦикла;

	Возврат ТекЦена;

КонецФункции // ПолучитьСуммарнуюЦенуКомплекта()

// Процедура устанавливает цену комплекта в переданную строку табличной части документа
// и вызывает пересчет сумм в этой строке табличной части.
//
// Параметры:
//  СтрокаТЧ - строка табличной части, в которой нужно установить цену.
//  ТекЦена - значение цены, которое нужно установить.
//
Процедура УстановитьЦенуКомплектаВДокументе(СтрокаТЧ, ТекЦена)

	СтрокаТЧ.Цена = ТекЦена;
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТЧ, Документ);

	Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", Документ.Метаданные(), ИмяТабличнойЧасти) Тогда
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТЧ, Документ);
	КонецЕсли;

КонецПроцедуры // УстановитьЦенуКомплектаВДокументе()

// Процедура при необходимости заполняет цену комплектующей в переданной строке табличной части.
//
// Параметры:
//  ТекущаяСтрока - строка табличной части, в которой необходимо заполнить цену.
//
Процедура ЗаполнитьЦенуКомплектующей(ТекущаяСтрока)

	Если мЕстьЦена Тогда
		ОбработкаТабличныхЧастей.ЗаполнитьЦенуПродажиТабЧасти(ТекущаяСтрока, Документ, глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	КонецЕсли;

КонецПроцедуры // ЗаполнитьЦенуКомплектующей()

// Обработчик события "ПриИзменении" реквизита "ХарактеристикаНоменклатуры" в ТЧ "СоставНабора".
//
Процедура СоставНабораХарактеристикаНоменклатурыПриИзменении(Элемент)

	ТекущаяСтрока = ЭлементыФормы.СоставНабора.ТекущиеДанные;

	ЗаполнитьЦенуКомплектующей(ТекущаяСтрока);

КонецПроцедуры // СоставНабораХарактеристикаНоменклатурыПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мКолонкиСоставНабора = ЭлементыФормы.СоставНабора.Колонки;
мКолонкиСоставНабора.СпособСписанияОстаткаТоваров.ЭлементУправления.СписокВыбора.Добавить(Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
мКолонкиСоставНабора.СпособСписанияОстаткаТоваров.ЭлементУправления.СписокВыбора.Добавить(Перечисления.СпособыСписанияОстаткаТоваров.СоСклада);
