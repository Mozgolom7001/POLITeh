Перем мЗапускИзФормы;
Процедура КнопкаВыполнитьНажатие(Кнопка)
		ТекстВопроса = 
	"Выполнение данной обработки может занять продолжительное время
	|и является необратимой операцией. Настоятельно рекомендуется предварительно ознакомиться
	|cо справочной информацией. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Если СписокДокументов.Количество()=0 Тогда
		Сообщить("Не заполнен список документов для обработки");
		Возврат;
	КонецЕсли;

    ВыполнитьОбработку();

КонецПроцедуры

Процедура ВыполнитьОбработку() экспорт
	Если не мЗапускИзФормы Тогда
		КоманднаяПанельДокументыЗаполнить("");
		Если СписокДокументов.Количество()=0 Тогда
			СообщитьОСостоянииОбновления("Управление заказами",ЭтаФорма.Заголовок+" не выполнено: отсутствуют документы для обработки");
            Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	СообщитьОСостоянииОбновления("Управление заказами",ЭтаФорма.Заголовок+" запущено");
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");

	Для каждого Строка из СписокДокументов цикл
		ДокументЗакрытие = Строка.ДокументЗакрытие;
		Если ДокументЗакрытие = Документы.ЗакрытиеЗаказовПокупателей.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		//Создание нового документа
		НовыйДокумент = Документы.ЗакрытиеВнутреннихЗаказов.СоздатьДокумент();
		НовыйДокумент.Ответственный = ТекПользователь;
		НовыйДокумент.ВидОперации = ?(ДокументЗакрытие.ВидОперации = Перечисления.ВидыОперацийЗакрытиеЗаказовПокупателей.ЗакрытиеЗаказов,Перечисления.ВидыОперацийЗакрытиеВнутреннихЗаказов.ЗакрытиеЗаказов,Перечисления.ВидыОперацийЗакрытиеВнутреннихЗаказов.СнятиеРезервов);
		НовыйДокумент.Дата = ДокументЗакрытие.Дата;
		НовыйДокумент.Комментарий = "Создан при обновлении ИБ из документа "+ДокументЗакрытие;
		ДокументЗакрытиеОбъект = ДокументЗакрытие.ПолучитьОбъект();
		КоличествоСтрок = ДокументЗакрытиеОбъект.Заказы.Количество();
		Для нстр = 1 по КоличествоСтрок цикл
			ЗаказПокупателя = ДокументЗакрытиеОбъект.Заказы[КоличествоСтрок-нстр].ЗаказПокупателя;
			Если ТипЗнч(ЗаказПокупателя)=Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
				НовСтрока = НовыйДокумент.Заказы.Добавить();
				НовСтрока.ВнутреннийЗаказ = ЗаказПокупателя;
				
				ДокументЗакрытиеОбъект.Заказы.Удалить(КоличествоСтрок-нстр);
			КонецЕсли;
		КонецЦикла;
		
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		ДокументЗакрытиеОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		//Перенос движений документа
		
		ДвиженияВнутренниеЗаказы = НовыйДокумент.Движения.ВнутренниеЗаказы;
		ДвиженияВнутренниеЗаказы.Прочитать();
		ДвиженияВнутренниеЗаказы.Очистить();
		ДвиженияВнутренниеЗаказы.Записать();
		
		ДвиженияТоварыВРезерве = НовыйДокумент.Движения.ТоварыВРезервеНаСкладах;
		ДвиженияТоварыВРезерве.Прочитать();
		ДвиженияТоварыВРезерве.Очистить();
		ДвиженияТоварыВРезерве.Записать();

		ДвиженияРазмещение = НовыйДокумент.Движения.РазмещениеЗаказовПокупателей;
		ДвиженияРазмещение.Прочитать();
		ДвиженияРазмещение.Очистить();
		ДвиженияРазмещение.Записать();

		ДвиженияВнутренниеЗаказыИсх = ДокументЗакрытиеОбъект.Движения.ВнутренниеЗаказы;
		ДвиженияТоварыВРезервеИсх = ДокументЗакрытиеОбъект.Движения.ТоварыВРезервеНаСкладах;
        ДвиженияРазмещениеИсх = ДокументЗакрытиеОбъект.Движения.РазмещениеЗаказовПокупателей;
		
		//движения по внутренним заказам переносятся целиком
		ДвиженияВнутренниеЗаказыИсх.Прочитать();
		ДвиженияВнутренниеЗаказы.Загрузить(ДвиженияВнутренниеЗаказыИсх.Выгрузить());
		Для каждого Запись из ДвиженияВнутренниеЗаказы цикл
			Запись.Регистратор = НовыйДокумент.Ссылка; 
		КонецЦикла;
		
		ДвиженияВнутренниеЗаказы.Записать();
		ДвиженияВнутренниеЗаказыИсх.Очистить();
		ДвиженияВнутренниеЗаказыИсх.Записать();
		
		//движения по резервам переносим избирательно
		ДвиженияТоварыВРезервеИсх.Прочитать();
		КоличествоЗаписей = ДвиженияТоварыВРезервеИсх.Количество();
		Для инд=1 По КоличествоЗаписей цикл
			СтрокаДвижениеИсх = ДвиженияТоварыВРезервеИсх[КоличествоЗаписей-инд];
			Если ТипЗнч(СтрокаДвижениеИсх.ДокументРезерва) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
				СтрокаДвижение = ДвиженияТоварыВРезерве.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДвижение, СтрокаДВижениеИсх);
				СтрокаДвижение.Регистратор = НовыйДокумент.Ссылка;
				
				ДвиженияТоварыВРезервеИсх.Удалить(КоличествоЗаписей-инд);
			КонецЕсли;
		КонецЦикла;
		ДвиженияТоварыВРезервеИсх.Записать();
		ДвиженияТоварыВРезерве.Записать();

		//движения по размещениям
		ДвиженияРазмещениеИсх.Прочитать();
		КоличествоЗаписей = ДвиженияРазмещениеИсх.Количество();
		Для инд=1 По КоличествоЗаписей цикл
			СтрокаДвижениеИсх = ДвиженияРазмещениеИсх[КоличествоЗаписей-инд];
			Если ТипЗнч(СтрокаДвижениеИсх.ЗаказПокупателя) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
				СтрокаДвижение = ДвиженияРазмещение.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДвижение, СтрокаДВижениеИсх);
				СтрокаДвижение.Регистратор = НовыйДокумент.Ссылка;
				
				ДвиженияРазмещениеИсх.Удалить(КоличествоЗаписей-инд);
			КонецЕсли;
		КонецЦикла;
		ДвиженияРазмещениеИсх.Записать();
        ДвиженияРазмещение.Записать();
	КонецЦикла;
		
    СообщитьОСостоянииОбновления("Управление заказами",ЭтаФорма.Заголовок+" завершено");

КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельДокументыЗаполнить(Кнопка)
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|Ссылка КАК ДокументЗакрытие
	|ИЗ
	|Документ.ЗакрытиеЗаказовПокупателей.Заказы
	|ГДЕ (Ссылка.Дата>=&ДатаНач или &ДатаНач=&ПустаяДата)
	| И  (Ссылка.Дата<=&ДатаКон или &ДатаКон=&ПустаяДата)
	|	И ЗаказПокупателя ССЫЛКА Документ.ВнутреннийЗаказ
	|";
	Запрос = новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ДатаКон",?(КонПериода = Дата('00010101'),Дата('00010101'),КонецДня(КонПериода)));
	Запрос.УстановитьПараметр("ПустаяДата",Дата('00010101'));

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		нстр = СписокДокументов.Добавить();
		нстр.ДокументЗакрытие = Выборка.ДокументЗакрытие;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Отказ = не ПолучитьРазрешениеНаОткрытиеФормы();
КонецПроцедуры

Процедура ПриОткрытии()

	мЗапускИзФормы = истина;

КонецПроцедуры
мЗапускИзФормы = ложь;