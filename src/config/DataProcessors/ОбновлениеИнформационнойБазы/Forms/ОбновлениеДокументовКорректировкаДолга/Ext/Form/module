
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТекстВопроса = 
	"Выполнение данной обработки может занять продолжительное время
	|и является необратимой операцией. Настоятельно рекомендуется предварительно ознакомиться
	|cо справочной информацией. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ВыполнитьОбработку();
КонецПроцедуры

Процедура ВыполнитьОбработку() Экспорт
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
	"Запущена обработка " + ЭтаФорма.Заголовок);

	СообщитьОСостоянииОбновления("","Обновление документов Корректировка долга");
	ОбновлениеДокументовКорректировкаДолга();
	СообщитьОСостоянииОбновления("","Обновление документов Корректировка долга завершено");
    ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
	"Выполнена обработка " + ЭтаФорма.Заголовок);

КонецПроцедуры

Функция ПолучитьВыборкуДокументовКорректировкаДолга(СсылкаНач)
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ПустойВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ПустаяСсылка());
	Запрос.УстановитьПараметр("СсылкаНач", СсылкаНач);

	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 500
	|	Ссылка
	|ИЗ
	|	Документ.КорректировкаДолга 
	|ГДЕ ВидОперации=&ПустойВидОперации"+
	?(СсылкаНач = Неопределено,"","
	|	И Ссылка > &СсылкаНач")+"
	|Упорядочить по Ссылка
	|";
    Возврат Запрос.Выполнить().Выбрать();

КонецФункции


//Процедура заполнения новых реквизитов документа КорректировкаДолга
Процедура ОбновлениеДокументовКорректировкаДолга()
		
	ВалютаРег = глЗначениеПеременной("ВалютаРегламентированногоУчета");
	
	ЕстьДокументы = Истина;
	ДокументСсылка = Неопределено;
    Пока ЕстьДокументы Цикл
		Выборка = ПолучитьВыборкуДокументовКорректировкаДолга(ДокументСсылка);
		ЕстьДокументы = Выборка.Количество()>0;

		Пока Выборка.Следующий() Цикл
			ДокументСсылка = Выборка.Ссылка;
			
			// Обновление информации в документе "Корректировка долга"
			Док = Выборка.Ссылка.ПолучитьОбъект();
			Док.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности;
			
			Если Док.СуммыДолга.Количество() > 0 Тогда
				
				//реквизиты Валюта, Курс, Кратность заполним из первой строки документа
				Строка1 = Док.СуммыДолга[0];
				Док.ВалютаДокумента    = Строка1.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				Док.КурсДокумента      = Строка1.КурсВзаиморасчетов;
				Док.КратностьДокумента = Строка1.КратностьВзаиморасчетов;
				
				ТаблицаДопСтрок = Док.СуммыДолга.ВыгрузитьКолонки();
				
				//заполнение реквизитов ТЧ Суммы Долга
				Для каждого СтрокаДок из Док.СуммыДолга цикл
					Если  (СтрокаДок.УдалитьУменьшениеДолгаКонтрагента<>0) И (СтрокаДок.Сумма<>0) Тогда
						//добавляем новую строку во врем.таблицу
						НоваяСтрока = ТаблицаДопСтрок.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
						НоваяСтрока.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
						НоваяСтрока.УдалитьУменьшениеДолгаКонтрагента = 0;
							
						СтрокаДок.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
						СтрокаДок.Сумма = СтрокаДок.УдалитьУменьшениеДолгаКонтрагента;
						СтрокаДок.УдалитьУменьшениеДолгаКонтрагента = 0;
					ИначеЕсли СтрокаДок.УдалитьУменьшениеДолгаКонтрагента<>0 Тогда
						СтрокаДок.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
						СтрокаДок.Сумма = СтрокаДок.УдалитьУменьшениеДолгаКонтрагента;
						СтрокаДок.УдалитьУменьшениеДолгаКонтрагента = 0;
					Иначе
						СтрокаДок.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
					КонецЕсли;
				КонецЦикла;
				
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДопСтрок, Док.СуммыДолга);
				
				Для каждого СтрокаДок из Док.СуммыДолга цикл
					ВалютаДоговора = СтрокаДок.ДоговорКонтрагента.ВалютаВзаиморасчетов;
					Если ВалютаДоговора = ВалютаРег Тогда
						СтрокаДок.СуммаРегл = СтрокаДок.Сумма;
					Иначе
						СтрокаДок.СуммаРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаДок.Сумма,
								 ВалютаДоговора,ВалютаРег,
								 СтрокаДок.КурсВзаиморасчетов, 1, 
								 СтрокаДок.КратностьВзаиморасчетов, 1);
					КонецЕсли;
						
					Если СтрокаДок.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом Тогда
						СтрокаДок.ДокументРасчетовСКонтрагентом = СтрокаДок.Сделка;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Док.ОбменДанными.Загрузка = Истина;
			Док.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = не ПолучитьРазрешениеНаОткрытиеФормы();
	
КонецПроцедуры


