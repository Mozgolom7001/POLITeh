
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТекстВопроса = 
	"Выполнение данной обработки может занять продолжительное время
	|и является необратимой операцией. Настоятельно рекомендуется предварительно ознакомиться
	|cо справочной информацией. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
    ВыполнитьОбработку(истина);

КонецПроцедуры

Процедура ВыполнитьОбработку(флЗапускИзФормы=ложь) Экспорт
	Если не флЗапускИзФормы Тогда
		флРегистрыЗакупкиПродажи = истина;
		флРегистрыДенежныхСредств = истина;
		флРегистрыВзаиморасчетов = истина;
		флРегистрыТоварыПереданныеПолученные = истина;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
	"Запущена обработка " + ЭтаФорма.Заголовок);

	Если флРегистрыЗакупкиПродажи Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Регистры Закупки, Продажи', обработка " + ЭтаФорма.Заголовок);

		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров Закупки, Продажи");
		ЗаполнитьИзмеренияРегистровЗакупкиПродажи();
		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров Закупки, Продажи завершено");
        ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Регистры Закупки, Продажи', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
	
	Если флРегистрыТоварыПереданныеПолученные Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Регистры Товары переданные, Товары полученные', обработка " + ЭтаФорма.Заголовок);

		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров Товары переданные, Товары полученные");
		ЗаполнитьИзмеренияРегистровТоварыПереданныеПолученные();
		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров Товары переданные, Товары полученные завершено");
        ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Регистры Товары переданные, Товары полученные', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
	
	Если флРегистрыДенежныхСредств Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Регистры денежных средств', обработка " + ЭтаФорма.Заголовок);

		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров учета денежных средств");

		ЗаполнитьИзмеренияРегистровДенежныхСредств();
		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров учета денежных средств завершено");
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Регистры денежных средств', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
	Если флРегистрыВзаиморасчетов Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Регистры взаиморасчетов', обработка " + ЭтаФорма.Заголовок);

		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров учета взаиморасчетов");
		ЗаполнитьИзмерениеРегистровВзаиморасчетов();
		СообщитьОСостоянииОбновления("","Заполнение измерений Контрагент, Организация регистров учета взаиморасчетов завершено");
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Регистры взаиморасчетов', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
    ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
	"Выполнена обработка " + ЭтаФорма.Заголовок);

КонецПроцедуры

//заполнение новых измерений Организация, Контрагент в регистрах Закупки, Продажи
Процедура ЗаполнитьИзмеренияРегистровЗакупкиПродажи()
	СписокРегистров = Новый СписокЗначений;
	СписокРегистров.Добавить("Продажи");
	СписокРегистров.Добавить("Закупки");
	
	Для Каждого Регистр из СписокРегистров Цикл
		
		ЕстьДокументы = Истина;
		ДокументСсылка = Неопределено;
		НаборЗаписей = РегистрыНакопления[Регистр.Значение].СоздатьНаборЗаписей();

		Пока ЕстьДокументы Цикл
			
			ВыборкаДокументов = ПолучитьВыборкуДокументовЗакупкиПродажи(ДокументСсылка, Регистр.Значение);
			
			ЕстьДокументы = ВыборкаДокументов.Количество()>0;
			
			Пока ВыборкаДокументов.Следующий() цикл
				
				ДокументСсылка = ВыборкаДокументов.Регистратор;
				
				НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
                НаборЗаписей.Прочитать();
				
				Организация = ВыборкаДокументов.Организация;
				Контрагент = ВыборкаДокументов.Контрагент;
				ИзмененыДвижения = Ложь;
				Для Каждого Запись Из НаборЗаписей Цикл
					ЗаполнитьПустоеЗначениеОрганизация(Запись, ИзмененыДвижения, Организация,Регистр.Значение, истина,истина,ложь);
					ЗаполнитьПустоеЗначениеКонтрагент(Запись, ИзмененыДвижения, Контрагент,Регистр.Значение, истина,истина,ложь);
				КонецЦикла;
						
				Если ИзмененыДвижения Тогда
					НаборЗаписей.Записать(Истина);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры  //ЗаполнитьИзмеренияРегистровЗакупкиПродажи

//заполнение новых измерений Организация, Контрагент в регистрах взаиморасчетов
Процедура ЗаполнитьИзмерениеРегистровВзаиморасчетов()
	СписокРегистров = Новый СписокЗначений;
	СписокРегистров.Добавить("ВзаиморасчетыСКонтрагентами");
	СписокРегистров.Добавить("ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов");
	СписокРегистров.Добавить("РасчетыСКонтрагентами");


	Для Каждого Регистр из СписокРегистров Цикл
		
		ЕстьДокументы = Истина;
		ДокументСсылка = Неопределено;
		ЗаполнятьВидОперации = ложь;

		Если Регистр.Значение = "РасчетыПоПриобретениюОрганизации" или Регистр.Значение="РасчетыПоРеализацииОрганизации" Тогда
			ЗаполнятьВидОперации = истина;

			НаборЗаписей = РегистрыСведений[Регистр.Значение].СоздатьНаборЗаписей();
		Иначе
			НаборЗаписей = РегистрыНакопления[Регистр.Значение].СоздатьНаборЗаписей();
		КонецЕсли;
		
		Пока ЕстьДокументы Цикл
			
			ВыборкаДокументов = ПолучитьВыборкуДокументовВзаиморасчеты(ДокументСсылка, Регистр.Значение);
			
			ЕстьДокументы = ВыборкаДокументов.Количество() > 0;
			
			Пока ВыборкаДокументов.Следующий() Цикл
				
				ДокументСсылка = ВыборкаДокументов.Регистратор;
				
				НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
                НаборЗаписей.Прочитать();

				ИзмененыДвижения = Ложь;
				Для Каждого Движение Из НаборЗаписей Цикл
					Если ЗаполнятьВидОперации Тогда
						ЗаполнитьПустоеЗначениеДокумент(Движение, ИзмененыДвижения, ДокументСсылка);
						ЗаполнитьПустоеЗначениеВидОперации(Движение, ИзмененыДвижения, ВыборкаДокументов.ВидОперации);
					Иначе
						ЗаполнитьПустоеЗначениеОрганизация(Движение, ИзмененыДвижения, ВыборкаДокументов.Организация,Регистр.Значение,истина,истина,ложь);
						ЗаполнитьПустоеЗначениеКонтрагент(Движение, ИзмененыДвижения, ВыборкаДокументов.Контрагент,Регистр.Значение,истина,истина,ложь);
					КонецЕсли;
				КонецЦикла;
						
				Если ИзмененыДвижения Тогда
					НаборЗаписей.Записать(Истина);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры  //ЗаполнитьИзмерениеРегистровВзаиморасчетов

// Процедура заполняет значение организации в движении по регистру.
// НовоеЗначениеИзмерения - значение, которое необходимо присвоить измерению регистра
Процедура ЗаполнитьПустоеЗначениеОрганизация(Движение, ИзмененыДвижения, Знач ЗначениеРеквизитаДокумента, ИмяРегистра, Знач ЕстьИзмерениеОрганизация, Знач ЕстьИзмерениеДоговорКонтрагента, Знач ЕстьИзмерениеБанковскийСчетКасса)
	Если ЕстьИзмерениеОрганизация Тогда
		Если ЗначениеЗаполнено(Движение.Организация) Тогда
			Возврат;
		КонецЕсли;
	//если измерения Организация нет - возврат	
	Иначе
        Возврат;
	КонецЕсли;

	//если значение реквизита документа не заполнено, определим организацию
	//		по значению измерения регистра
	Если Не ЗначениеЗаполнено(ЗначениеРеквизитаДокумента) Тогда
		Если ЕстьИзмерениеДоговорКонтрагента Тогда
			Движение.Организация = Движение.ДоговорКонтрагента.Организация;
			ИзмененыДвижения = Истина;
            Возврат;
		КонецЕсли;
		
		Если ЕстьИзмерениеБанковскийСчетКасса Тогда
			Движение.Организация = Движение.БанковскийСчетКасса.Владелец;
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		Движение.Организация = ЗначениеРеквизитаДокумента;
	КонецЕсли;
	
	ИзмененыДвижения = Истина;
	
КонецПроцедуры // ЗаполнитьПустоеЗначениеОрганизация()

// Процедура заполняет значение контрагента в движении по регистру.
// НовоеЗначениеИзмерения - значение, которое необходимо присвоить измерению регистра
Процедура ЗаполнитьПустоеЗначениеКонтрагент(Движение, ИзмененыДвижения, Знач ЗначениеРеквизитаДокумента, ИмяРегистра, Знач ЕстьИзмерениеКонтрагент, Знач ЕстьИзмерениеДоговорКонтрагента, Знач ЕстьИзмерениеБанковскийСчетКасса)

	//если есть измерение Контрагент, и оно заполнено - возврат
	Если ЕстьИзмерениеКонтрагент Тогда
		Если ЗначениеЗаполнено(Движение.Контрагент) Тогда
			Возврат;
		КонецЕсли;
	//если измерения Контрагент нет - возврат	
	Иначе
        Возврат;
	КонецЕсли;
	
	//если значение реквизита документа не заполнено, определим контрагента
	//		по значению измерения регистра
	Если Не ЗначениеЗаполнено(ЗначениеРеквизитаДокумента) Тогда
		Если ЕстьИзмерениеДоговорКонтрагента Тогда
			Движение.Контрагент = Движение.ДоговорКонтрагента.Владелец;
            ИзмененыДвижения = Истина;
            Возврат;
		КонецЕсли;
		Если  ЕстьИзмерениеБанковскийСчетКасса Тогда
			Движение.Контрагент = Движение.БанковскийСчетКасса.Владелец;
		Иначе
			Возврат;
		КонецЕсли;
		
	Иначе
		Движение.Контрагент = ЗначениеРеквизитаДокумента;
	КонецЕсли;
	
	ИзмененыДвижения = Истина;
	
КонецПроцедуры // ЗаполнитьПустоеЗначениеКонтрагент()

// Процедура заполняет значение реквизита ВидОперации в движении по регистру РасчетыПоПриобретениюОрганизации, РасчетыПоРеализацииОрганизации.
//
Процедура ЗаполнитьПустоеЗначениеВидОперации(Движение, ИзмененыДвижения, Знач НовоеЗначениеРеквизита);
	
	//реквизит ВидОперации может быть заполнен не всегда
	Если НовоеЗначениеРеквизита = неопределено Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(Движение.ВидОперации) Тогда
		Возврат;
	КонецЕсли;
	
	Движение.ВидОперации = НовоеЗначениеРеквизита;
	ИзмененыДвижения = Истина;
	
КонецПроцедуры // ЗаполнитьПустоеЗначениеВидОперации()

//заполнение новых измерений Организация, Контрагент в регистрах Товары Переданные, Товары Полученные
Процедура ЗаполнитьИзмеренияРегистровТоварыПереданныеПолученные()
	СписокРегистров = Новый СписокЗначений;
	СписокРегистров.Добавить("ТоварыПереданные");
	СписокРегистров.Добавить("ТоварыПолученные");
	
	Для Каждого Регистр из СписокРегистров Цикл
		
		ЕстьДокументы = Истина;
		ДокументСсылка = Неопределено;
		НаборЗаписей = РегистрыНакопления[Регистр.Значение].СоздатьНаборЗаписей();
		Пока ЕстьДокументы Цикл
			
			ВыборкаДокументов = ПолучитьВыборкуДокументовТоварыПереданныеПолученные(ДокументСсылка, Регистр.Значение);
			
			ЕстьДокументы = ВыборкаДокументов.Количество() > 0;
			
			Пока ВыборкаДокументов.Следующий() цикл
				
				ДокументСсылка = ВыборкаДокументов.Регистратор;

				Организация = ВыборкаДокументов.Организация;
				Контрагент = ВыборкаДокументов.Контрагент;
				
				НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
                НаборЗаписей.Прочитать();

				ИзмененыДвижения = Ложь;
				Для Каждого Движение Из НаборЗаписей Цикл
					ЗаполнитьПустоеЗначениеОрганизация(Движение, ИзмененыДвижения, Организация,Регистр.Значение,истина,истина,ложь);
					ЗаполнитьПустоеЗначениеКонтрагент(Движение, ИзмененыДвижения, Контрагент,Регистр.Значение,истина,истина,ложь);
				КонецЦикла;
						
				Если ИзмененыДвижения Тогда
					НаборЗаписей.Записать(Истина);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры  //ЗаполнитьИзмеренияРегистровТоварыПереданныеПолученные

//заполнение новых измерений Организация, Контрагент в регистрах учета денежных средств
Процедура ЗаполнитьИзмеренияРегистровДенежныхСредств()
	СписокРегистров = Новый СписокЗначений;
	СписокРегистров.Добавить("ДвиженияДенежныхСредств");
	СписокРегистров.Добавить("ДенежныеСредства");
	СписокРегистров.Добавить("ДенежныеСредстваВРезерве");
	СписокРегистров.Добавить("ДенежныеСредстваКомиссионера");
	СписокРегистров.Добавить("ДенежныеСредстваКомитента");
	СписокРегистров.Добавить("ДенежныеСредстваКПолучению");
	СписокРегистров.Добавить("ДенежныеСредстваКСписанию");
    СписокРегистров.Добавить("ЗаявкиНаРасходованиеСредств");
    СписокРегистров.Добавить("ПланируемыеПоступленияДенежныхСредств");
	
	
	Для Каждого Регистр из СписокРегистров Цикл
		
		ИзмеренияРегистра = Метаданные.РегистрыНакопления[Регистр.Значение].Измерения;
		ЕстьИзмерениеКонтрагент = ИзмеренияРегистра.Найти("Контрагент")<>неопределено;
        ЕстьИзмерениеОрганизация = ИзмеренияРегистра.Найти("Организация")<>неопределено;
		ЕстьИзмерениеДоговор = ИзмеренияРегистра.Найти("ДоговорКонтрагента")<>неопределено;
		ЕстьИзмерениеБанкСчет = ИзмеренияРегистра.Найти("БанковскийСчетКасса")<>неопределено;
		
		НаборЗаписей = РегистрыНакопления[Регистр.Значение].СоздатьНаборЗаписей();
		
		ЕстьДокументы = Истина;
		ДокументСсылка = Неопределено;
		
		Пока ЕстьДокументы Цикл

			ВыборкаДокументов = ПолучитьВыборкуДокументовДенежныеСредства(ДокументСсылка, Регистр.Значение, ЕстьИзмерениеКонтрагент);
			
			ЕстьДокументы = ВыборкаДокументов.Количество() > 0;
			
			Пока ВыборкаДокументов.Следующий() Цикл
				
				ДокументСсылка = ВыборкаДокументов.Регистратор;
				
				Организация = ВыборкаДокументов.Организация;
				Контрагент = неопределено;
				
			    НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
                НаборЗаписей.Прочитать();

				ИзмененыДвижения = Ложь;
				Для Каждого Движение Из НаборЗаписей Цикл
					ЗаполнитьПустоеЗначениеОрганизация(Движение, ИзмененыДвижения, Организация, Регистр.Значение, ЕстьИзмерениеОрганизация, ЕстьИзмерениеДоговор,ЕстьИзмерениеБанкСчет);
					ЗаполнитьПустоеЗначениеКонтрагент(Движение, ИзмененыДвижения, Контрагент, Регистр.Значение, ЕстьИзмерениеКонтрагент,ЕстьИзмерениеДоговор,ЕстьИзмерениеБанкСчет);
				КонецЦикла;
						
				Если ИзмененыДвижения Тогда
					НаборЗаписей.Записать(Истина);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	
	КонецЦикла;
		

КонецПроцедуры //ЗаполнитьИзмеренияРегистровДенежныхСредств

// Возвращает список документов, для которых нужно обновлять движения регистров учета денежных средств.
//
Функция ПолучитьВыборкуДокументовДенежныеСредства(СсылкаНач, ИмяРегистра, ЕстьИзмерениеКонтрагент)
	
	
	УсловиеКонтрагент = "";
	Если ЕстьИзмерениеКонтрагент Тогда
		УсловиеКонтрагент	= " ИЛИ (РегистрУчета.Контрагент = &ПустойКонтрагент И РегистрУчета.ДоговорКонтрагента<>&ПустойДоговор)";
	КонецЕсли;
	УсловиеВыбор = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров";

	Если ИмяРегистра = "ДвиженияДенежныхСредств" или ИмяРегистра = "ДенежныеСредства"
		или ИмяРегистра = "ДенежныеСредстваКПолучению" или ИмяРегистра = "ДенежныеСредстваКСписанию" Тогда
		УсловиеВыбор = УсловиеВыбор+" ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВнутреннееПеремещениеНаличныхДенежныхСредств";
	ИначеЕсли ИмяРегистра = "ЗаявкиНаРасходованиеСредств" или  ИмяРегистра = "ДенежныеСредстваВРезерве"   Тогда
		УсловиеВыбор = УсловиеВыбор+" ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаявокНаРасходованиеСредств";
	ИначеЕсли  ИмяРегистра = "ПланируемыеПоступленияДенежныхСредств" Тогда
		УсловиеВыбор = УсловиеВыбор+" ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеПланируемыхПоступленийДенежныхСредств";
	КонецЕсли;
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	|	РегистрУчета.Регистратор КАК Регистратор,
	|	ВЫБОР КОГДА "+УсловиеВыбор+"  Тогда
	|	&ПустаяОрганизация
	|	ИНАЧЕ РегистрУчета.Регистратор.Организация КОНЕЦ КАК Организация
	|ИЗ 
	|	РегистрНакопления." + ИмяРегистра + " КАК РегистрУчета
	|ГДЕ
	|	(РегистрУчета.Организация = &ПустаяОрганизация "+ УсловиеКонтрагент+")"+
	?(СсылкаНач = Неопределено,"","
	|	И РегистрУчета.Регистратор > &СсылкаНач")+"
	|
	|Упорядочить по Регистратор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("НетИзмеренияКонтрагент",   не ЕстьИзмерениеКонтрагент);
	Запрос.УстановитьПараметр("СсылкаНач", 				СсылкаНач);
	Запрос.УстановитьПараметр("ПустойДоговор", 			Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяОрганизация", 	Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции // ПолучитьВыборкуДокументовДенежныеСредства()

// Процедура заполняет значение реквизита документ в движении по регистру РасчетыПоПриобретениюОрганизации, РасчетыПоРеализацииОрганизации.
//
Процедура ЗаполнитьПустоеЗначениеДокумент(Движение, ИзмененыДвижения, Знач НовоеЗначениеРеквизита);
	
	Если ЗначениеЗаполнено(Движение.Документ) Тогда
		Возврат;
	КонецЕсли;
	
	Движение.Документ = НовоеЗначениеРеквизита;
	ИзмененыДвижения = Истина;
	
КонецПроцедуры // ЗаполнитьПустоеЗначениеДокумент()

// Возвращает список документов, для которых нужно обновлять движения регистров Товары переданные, Товары полученные.
//
Функция ПолучитьВыборкуДокументовТоварыПереданныеПолученные(СсылкаНач, ИмяРегистра)
	
	Если ИмяРегистра = "ТоварыПереданные" Тогда
		ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров";
	Иначе
		ВыборКонтрагент =  "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров 
		|		ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет";
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	|	РегистрУчета.Регистратор КАК Регистратор,
	|	ВЫБОР КОГДА РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров ТОГДА
	|	&ПустаяОрганизация
	|	ИНАЧЕ РегистрУчета.Регистратор.Организация КОНЕЦ КАК Организация,
	|	ВЫБОР КОГДА "+ВыборКонтрагент+" ТОГДА
    |	&ПустойКонтрагент
	|	ИНАЧЕ РегистрУчета.Регистратор.Контрагент КОНЕЦ КАК Контрагент
	|ИЗ 
	|	РегистрНакопления." + ИмяРегистра + " КАК РегистрУчета
	|ГДЕ
	|	(РегистрУчета.Организация = &ПустаяОрганизация ИЛИ РегистрУчета.Контрагент = &ПустойКонтрагент)"+
	?(СсылкаНач = Неопределено,"","
	|	И РегистрУчета.Регистратор > &СсылкаНач")+"
	|Упорядочить по Регистратор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("СсылкаНач", 				СсылкаНач);
	Запрос.УстановитьПараметр("ПустаяОрганизация", 	Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции // ПолучитьВыборкуДокументовТоварыПереданныеПолученные()

// Возвращает список документов, для которых нужно обновлять движения регистров Закупки, Продажи.
//
Функция ПолучитьВыборкуДокументовЗакупкиПродажи(СсылкаНач, ИмяРегистра)
	
	Если ИмяРегистра = "Продажи" Тогда
		УсловиеКонтрагент = "(РегистрУчета.Контрагент = &ПустойКонтрагент И НЕ РегистрУчета.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах)";
		ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров 
		|		ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах";
	Иначе
		ВыборКонтрагент =  "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров 
		|		ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет";
		УсловиеКонтрагент	= "РегистрУчета.Контрагент = &ПустойКонтрагент";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	|	РегистрУчета.Регистратор КАК Регистратор,
	|	ВЫБОР КОГДА РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров ТОГДА
	|	&ПустаяОрганизация
	|	ИНАЧЕ РегистрУчета.Регистратор.Организация КОНЕЦ КАК Организация,
	|	ВЫБОР КОГДА "+ВыборКонтрагент+" ТОГДА
    |	&ПустойКонтрагент
	|	ИНАЧЕ РегистрУчета.Регистратор.Контрагент КОНЕЦ КАК Контрагент
	|	
	|ИЗ 
	|	РегистрНакопления." + ИмяРегистра + " КАК РегистрУчета
	|ГДЕ
	|	(РегистрУчета.Организация = &ПустаяОрганизация ИЛИ "+ УсловиеКонтрагент+")"+
	?(СсылкаНач = Неопределено,"","
	|	И РегистрУчета.Регистратор > &СсылкаНач")+"
	|
	|Упорядочить по Регистратор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("СсылкаНач", 				СсылкаНач);
	Запрос.УстановитьПараметр("ПустаяОрганизация", 	Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции // ПолучитьВыборкуДокументовЗакупкиПродажи()

// Возвращает список документов, для которых нужно обновлять движения регистров учета взаиморасчетов
Функция ПолучитьВыборкуДокументовВзаиморасчеты(СсылкаНач, ИмяРегистра)
	
	Если ИмяРегистра = "РасчетыПоПриобретениюОрганизации" или ИмяРегистра="РасчетыПоРеализацииОрганизации" Тогда
		Если ИмяРегистра = "РасчетыПоПриобретениюОрганизации" Тогда
			ВыборВидОперации = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщикуИзНТТ
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОПродажах";
		Иначе
			ВыборВидОперации = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|";
		КонецЕсли;
		
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
		|	РегистрУчета.Регистратор КАК Регистратор,
		|	ВЫБОР КОГДА "+ВыборВидОперации+" ТОГДА """"
		|	Иначе РегистрУчета.Регистратор.ВидОперации КОНЕЦ КАК ВидОперации
		|ИЗ 
		|	РегистрСведений." + ИмяРегистра + " КАК РегистрУчета
		|ГДЕ
		|	(РегистрУчета.Документ.Дата = &ПустаяДата или РегистрУчета.Документ.Дата is null) "+
		?(СсылкаНач = Неопределено,"","
		|	И РегистрУчета.Регистратор > &СсылкаНач")+"
		|Упорядочить по Регистратор
		|";

	Иначе	
		
		Если ИмяРегистра = "ВзаиморасчетыСКонтрагентами" Тогда
			ВыборОрганизация = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ПереоценкаВалютныхСредств";
		ИначеЕсли ИмяРегистра = "РасчетыСКонтрагентами"	Тогда
			ВыборОрганизация = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ПереоценкаВалютныхСредств
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказовПокупателей
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказовПоставщикам
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаявокНаРасходованиеСредств
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеПланируемыхПоступленийДенежныхСредств
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПокупателя
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику";
		Иначе
			ВыборОрганизация = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров";
		КонецЕсли;
		ВыборКонтрагент = "";
		Если ИмяРегистра = "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации" или ИмяРегистра = "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации" Тогда
			ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковНДС
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковПоВзаиморасчетам
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаДолга";
			Если ИмяРегистра = "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации"	Тогда
				ВыборКонтрагент = ВыборКонтрагент+" ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет";
			КонецЕсли;
		ИначеЕсли  ИмяРегистра = "ВзаиморасчетыСКонтрагентами" Тогда
			ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковПоВзаиморасчетам
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаДолга
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ПереоценкаВалютныхСредств";
        ИначеЕсли  ИмяРегистра = "ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов" Тогда
             ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковПоВзаиморасчетам
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаДолга";
		ИначеЕсли ИмяРегистра = "РасчетыСКонтрагентами"	Тогда
			ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.АвансовыйОтчет
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковПоВзаиморасчетам
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаДолга
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ПереоценкаВалютныхСредств
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказовПокупателей
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказовПоставщикам
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаявокНаРасходованиеСредств
			|ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.ЗакрытиеПланируемыхПоступленийДенежныхСредств
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПокупателя
            |ИЛИ РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику";
		Иначе
			ВыборКонтрагент = "РегистрУчета.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров";
		КонецЕсли;
		
		
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
		|	РегистрУчета.Регистратор КАК Регистратор,
		|	ВЫБОР КОГДА "+ВыборОрганизация+" ТОГДА &ПустаяОрганизация
		|	ИНАЧЕ РегистрУчета.Регистратор.Организация КОНЕЦ КАК Организация,
		|	ВЫБОР КОГДА "+ВыборКонтрагент+" ТОГДА &ПустойКонтрагент
		|	ИНАЧЕ РегистрУчета.Регистратор.Контрагент КОНЕЦ КАК Контрагент
		|ИЗ 
		|	РегистрНакопления." + ИмяРегистра + " КАК РегистрУчета
		|ГДЕ
		|	((РегистрУчета.Организация = &ПустаяОрганизация) ИЛИ 
		| 	(РегистрУчета.Контрагент = &ПустойКонтрагент)) И РегистрУчета.ДоговорКонтрагента<>&ПустойДоговор "+
		?(СсылкаНач = Неопределено,"","
		|	И РегистрУчета.Регистратор > &СсылкаНач")+"
		|Упорядочить по Регистратор
		|";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("СсылкаНач", 				СсылкаНач);
	Запрос.УстановитьПараметр("ПустойДоговор", 			Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяОрганизация", 	Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДата", 	 Дата('00010101'));

	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции // ПолучитьВыборкуДокументовВзаиморасчеты()

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = не ПолучитьРазрешениеНаОткрытиеФормы();
	
КонецПроцедуры

Процедура ПриОткрытии()
	флРегистрыЗакупкиПродажи = истина;
	флРегистрыДенежныхСредств = истина;
	флРегистрыВзаиморасчетов = истина;
    флРегистрыТоварыПереданныеПолученные = истина;
КонецПроцедуры


