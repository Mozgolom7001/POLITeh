
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТекстВопроса = 
	"Выполнение данной обработки может занять продолжительное время
	|и является необратимой операцией. Настоятельно рекомендуется предварительно ознакомиться
	|cо справочной информацией. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
   ВыполнитьОбработку(истина);

КонецПроцедуры

Процедура ВыполнитьОбработку(флЗапускИзФормы=ложь) Экспорт
	Если не флЗапускИзФормы Тогда
		флЗаполнениеТиповОплатДляВидовОплатЧекаККМ = истина;
		флЗаполнениеРеквизитаВидОперации = истина;
		флЗаполнениеРеквизитаСпособРасчетаЦены = истина;
		флНазначитьСкидкиПоИнформационнымКартам = истина;
	КонецЕсли;
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
	"Запущена обработка " + ЭтаФорма.Заголовок);

	Если флЗаполнениеТиповОплатДляВидовОплатЧекаККМ Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Заполнение Типов оплат для Видов оплат чека ККМ', обработка " + ЭтаФорма.Заголовок);
		СообщитьОСостоянииОбновления("","Заполнение Типов оплат для Видов оплат чека ККМ");

		ЗаполнитьТипыОплатДляВидовОплатЧекаККМ();
		
		СообщитьОСостоянииОбновления("","Заполнение Типов оплат для Видов оплат чека ККМ завершено");
        ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Заполнение Типов оплат для Видов оплат чека ККМ', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
	Если флНазначитьСкидкиПоИнформационнымКартам Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Назначение скидок по информационным картам', обработка " + ЭтаФорма.Заголовок);
		СообщитьОСостоянииОбновления("","Назначение скидок по информационным картам");

		НазначитьСкидкиПоИнформационнымКартам();
		
        ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Назначение скидок по информационным картам', обработка " + ЭтаФорма.Заголовок);
		СообщитьОСостоянииОбновления("","Назначение скидок по информационным картам завершено");
	КонецЕсли;
	Если флЗаполнениеРеквизитаВидОперации Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Заполнение реквизита Вид операции', обработка " + ЭтаФорма.Заголовок);

		СообщитьОСостоянииОбновления("","Заполнение реквизита ВидОперации документов ценообразования");

		ЗаполнитьВидОперацииДляДокументовЦенообразования();
		СообщитьОСостоянииОбновления("","Заполнение реквизита ВидОперации документов ценообразования завершено");
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Заполнение реквизита Вид операции', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
	Если флЗаполнениеРеквизитаСпособРасчетаЦены Тогда
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Заполнение реквизита Способ расчета цены', обработка " + ЭтаФорма.Заголовок);

		СообщитьОСостоянииОбновления("","Заполнение реквизита СпособРасчетаЦены документов ценообразования");
		ЗаполнитьСпособРасчетаЦены();
		СообщитьОСостоянииОбновления("","Заполнение реквизита СпособРасчетаЦены документов ценообразования завершено");
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Заполнение реквизита Способ расчета цены', обработка " + ЭтаФорма.Заголовок);

	КонецЕсли;
    ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
	"Выполнена обработка " + ЭтаФорма.Заголовок);

КонецПроцедуры


//процедура заполняет реквизит ВидОперации для документов УстановкаСкидокНоменклатуры, ПереоценкаТоваровВРознице
Процедура ЗаполнитьВидОперацииДляДокументовЦенообразования()
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Ссылка, &ВидОперацииУстановкаСкидок КАК ВидОперации
	|ИЗ Документ.УстановкаСкидокНоменклатуры
	|ГДЕ ВидОперации = &ПустаяОперацияУстановкаСкидок
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ Ссылка, &ВидОперацииПереоценка КАК ВидОперации
	|ИЗ Документ.ПереоценкаТоваровВРознице
	|ГДЕ ВидОперации = &ПустаяОперацияПереоценка";
	Запрос.УстановитьПараметр("ВидОперацииУстановкаСкидок", Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре);
	Запрос.УстановитьПараметр("ПустаяОперацияУстановкаСкидок", Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидОперацииПереоценка", Перечисления.ВидыОперацийПереоценкаТоваровВРознице.ПереоценкаВНТТ);
	Запрос.УстановитьПараметр("ПустаяОперацияПереоценка", Перечисления.ВидыОперацийПереоценкаТоваровВРознице.ПустаяСсылка());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		текОбъект = Выборка.Ссылка.ПолучитьОбъект();
		текОбъект.ВидОперации = Выборка.ВидОперации;
		текОбъект.Записать(РежимЗаписиДокумента.Запись);
	Конеццикла;
КонецПроцедуры

//процедура заполняет способ расчета цены для базовых и динамических цен
//	в справочнике ТипыЦенНоменклатуры и в документах УстановкаЦенНоменклатуры
Процедура ЗаполнитьСпособРасчетаЦены()
	//корректировка справочника ТипыЦенНоменклатуры
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Ссылка ИЗ Справочник.ТипыЦенНоменклатуры
	|ГДЕ СпособРасчетаЦены = &ПустойСпособ И (Рассчитывается = истина ИЛИ БазовыйТипЦен<>&ПустойТипЦен)";
	Запрос.УстановитьПараметр("ПустойСпособ",Перечисления.СпособыРасчетаЦены.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойТипЦен", Справочники.ТипыЦенНоменклатуры.ПустаяСсылка());
	
	Таб = Запрос.Выполнить().Выгрузить();
	СписокТиповЦен = Таб.ВыгрузитьКолонку("Ссылка");
	Для каждого стр из Таб цикл
		текОбъект = стр.Ссылка.ПолучитьОбъект();
		текОбъект.СпособРасчетаЦены = Перечисления.СпособыРасчетаЦены.ПоПроцентнойНаценкеНаБазовыйТип;
		текОбъект.Записать();
	КонецЦикла;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ Ссылка ИЗ Документ.УстановкаЦенНоменклатуры.ТипыЦен
	|ГДЕ ТипЦен в (&СписокТиповЦен)";
	Запрос.УстановитьПараметр("СписокТиповЦен",СписокТиповЦен);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		текОбъект = Выборка.ССылка.ПолучитьОбъект();
		Для каждого стр из ТекОбъект.Товары цикл
			Если стр.ТипЦен.СпособРасчетаЦены<>Перечисления.СпособыРасчетаЦены.ПустаяСсылка() Тогда
				стр.СпособРасчетаЦены = стр.ТипЦен.СпособРасчетаЦены;
			КонецЕсли;
		КонецЦикла;
		текОбъект.Записать(РежимЗаписиДОкумента.Запись);
		Если текОбъект.Проведен Тогда
			НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.регистратор.Значение = Выборка.ССылка;
			НаборЗаписей.Отбор.регистратор.Использование = истина;
			НаборЗаписей.Прочитать();
			Для каждого Запись из НаборЗаписей цикл
				Если Запись.ТипЦен.СпособРасчетаЦены<>Перечисления.СпособыРасчетаЦены.ПустаяСсылка() Тогда
					Запись.СпособРасчетаЦены = Запись.ТипЦен.СпособРасчетаЦены;
				КонецЕсли;

			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = не ПолучитьРазрешениеНаОткрытиеФормы();
	
КонецПроцедуры

Процедура ПриОткрытии()
	флЗаполнениеТиповОплатДляВидовОплатЧекаККМ = истина;
	флЗаполнениеРеквизитаВидОперации = истина;
	флЗаполнениеРеквизитаСпособРасчетаЦены = истина;
	флНазначитьСкидкиПоИнформационнымКартам = истина;
КонецПроцедуры

//заполнение реквизита ТипОплаты значением Наличные в справочнике ВидыОплатЧекаККМ
Процедура ЗаполнитьТипыОплатДляВидовОплатЧекаККМ()
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Ссылка ИЗ Справочник.ВидыОплатЧекаККМ
	|ГДЕ ЭтоГруппа = ложь и ТипОплаты = &ПустаяСсылка";
	Запрос.УстановитьПараметр("ПустаяСсылка", Перечисления.ТипыОплатЧекаККМ.ПустаяСсылка());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		текОбъект = Выборка.ссылка.ПолучитьОбъект();
		текОбъект.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Наличные;
		текОбъект.Записать();
	КонецЦикла;
КонецПроцедуры

//создание элементов справочника ВидыДисконтныхКарт в соответствии с имеющимися процентами скидок по информационным картам
//создание документов установки скидок по видам информационных карт
Процедура НазначитьСкидкиПоИнформационнымКартам()
	мВалютаУпрУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");

	//обработка справочника Информационные карты
	СписокВидовДисконтныхКарт = новый СписокЗначений;
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Ссылка, УдалитьПроцентСкидки ИЗ
	|Справочник.ИнформационныеКарты
	|ГДЕ УдалитьПроцентСкидки<>0 И ТипКарты = &Дисконтная И ЭтоГруппа=ложь
	|	И ВидДисконтнойКарты=&ПустойВид
	|ИТОГИ ПО УдалитьПроцентСкидки";
	Запрос.УстановитьПараметр("Дисконтная",Перечисления.ТипыИнформационныхКарт.Дисконтная);
	Запрос.УстановитьПараметр("ПустойВид",Справочники.ВидыДисконтныхКарт.ПустаяСсылка());

	ВыборкаПроцент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПроцент.Следующий() цикл
		ПроцентСкидки = ВыборкаПроцент.УдалитьПроцентСкидки;
		ИмяВида = "Скидка "+ПроцентСкидки+"%";
		ВидКарты = Справочники.ВидыДисконтныхКарт.НайтиПоНаименованию(ИмяВида);
		Если Не ЗначениеЗаполнено(ВидКарты) Тогда
			текОбъект = Справочники.ВидыДисконтныхКарт.СоздатьЭлемент();
			текОбъект.Наименование = ИмяВида;
			текОбъект.Записать();
			ВидКарты = текОбъект.Ссылка;
		КонецЕсли;
		СписокВидовДисконтныхКарт.Добавить(ВидКарты, ПроцентСкидки);
		
		ВыборкаИнфКарта = ВыборкаПроцент.Выбрать();
		Пока ВыборкаИнфКарта.Следующий() цикл
			текОбъект = ВыборкаИнфКарта.ссылка.ПолучитьОбъект();
			текОбъект.ВидДисконтнойКарты = ВидКарты;
			текОбъект.Записать();
		Конеццикла;
	КонецЦикла;
	
	//создание документов УстановкаСкидокНоменклатуры
	Для каждого ЭлементСписка ИЗ СписокВидовДисконтныхКарт цикл
		ВидДисконтнойКарты = ЭлементСписка.Значение;
		Процент = Число(ЭлементСписка.Представление);
		//оптовая скидка
		ДокументОбъект = Документы.УстановкаСкидокНоменклатуры.СоздатьДокумент();
		ДокументОбъект.Дата = РабочаяДата;
		ДокументОбъект.ДатаНачала = НачалоГода(РабочаяДата);
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументОбъект, глЗначениеПеременной("глТекущийПользователь"));

		ДокументОбъект.Дата = РабочаяДата;
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре;
		ДокументОбъект.Валюта = мВалютаУпрУчета;
		ДокументОбъект.ВидСкидки = Перечисления.ВидыСкидок.Оптовая;
		ДокументОбъект.ДляВсейНоменклатуры = истина;
		ДокументОбъект.ДляВсехПолучателей = истина;
		ДокументОбъект.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуДисконтныхКарт;
		ДокументОбъект.ЗначениеУсловия = ВидДисконтнойКарты;
		ДокументОбъект.Качество = Справочники.Качество.Новый;
		ДокументОбъект.ПроцентСкидкиНаценки = Процент;
		ДокументОбъект.Комментарий = "Сформирована автоматически при переходе на редакцию 10.3 по данным справочника ""Информационные карты"".";

		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
		//розничная скидка
		ДокументОбъект = Документы.УстановкаСкидокНоменклатуры.СоздатьДокумент();
		ДокументОбъект.Дата = РабочаяДата;
		ДокументОбъект.ДатаНачала = НачалоГода(РабочаяДата);
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументОбъект, глЗначениеПеременной("глТекущийПользователь"));

		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре;
		ДокументОбъект.Валюта = мВалютаУпрУчета;
		ДокументОбъект.ВидСкидки = Перечисления.ВидыСкидок.Розничная;
		ДокументОбъект.ДляВсейНоменклатуры = истина;
		ДокументОбъект.ДляВсехПолучателей = истина;
		ДокументОбъект.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуДисконтныхКарт;
		ДокументОбъект.ЗначениеУсловия = ВидДисконтнойКарты;
		ДокументОбъект.Качество = Справочники.Качество.Новый;
		ДокументОбъект.ПроцентСкидкиНаценки = Процент;
		ДокументОбъект.Комментарий = "Сформирована автоматически при переходе на редакцию 10.3 по данным справочника ""Информационные карты"".";

		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры



