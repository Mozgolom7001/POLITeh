
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТекстВопроса = 
	"Выполнение данной обработки может занять продолжительное время
	|и является необратимой операцией. Настоятельно рекомендуется предварительно ознакомиться
	|cо справочной информацией. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
    ВыполнитьОбработку(истина);

КонецПроцедуры

Процедура ВыполнитьОбработку(флЗапускИзФормы=ложь) Экспорт

		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Запущен этап 'Заполнение ресурса ""стоимость без скидок"" в регистре ""Продажи"" для услуг', обработка " + ЭтаФорма.Заголовок);

		ВыполнитьЗаполнениеРесурсаСтоимостьБезСкидокВРегистреПродажиДляУслуг();
		
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, ЭтотОбъект.Метаданные(), ,
		"Выполнен этап 'Заполнение ресурса ""стоимость без скидок"" в регистре ""Продажи"" для услуг', обработка " + ЭтаФорма.Заголовок);

КонецПроцедуры

//заполнение ресурса СтоимостьБезСкидок в регистре продажи, при обновлении с релиза 1.1 для услуг
//
Процедура ВыполнитьЗаполнениеРесурсаСтоимостьБезСкидокВРегистреПродажиДляУслуг()
	КолЗаписей = 10000;//Количество записей на транзакцию
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Регистратор КАК Регистратор,
	               |	ВложенныйЗапрос.Регистратор.УчитыватьНДС КАК УчитыватьНДС,
	               |	ВложенныйЗапрос.Регистратор.СуммаВключаетНДС КАК СуммаВключаетНДС,
	               |	ВложенныйЗапрос.Регистратор.ВалютаДокумента КАК ВалютаДокумента,
	               |	ВложенныйЗапрос.Регистратор.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	               |	ВложенныйЗапрос.Регистратор.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	               |	ВложенныйЗапрос.Регистратор.Дата КАК Дата,
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.НомерСтроки,
	               |	ВложенныйЗапрос.СтоимостьОборот,
	               |	ВложенныйЗапрос.НужноРассчитатьСумму
	               |ИЗ
	               |	(
				   //Продажи по документам РеализацияТоваровУслуг, где есть скидки
				   |	ВЫБРАТЬ
	               |		ПродажиОбороты.Регистратор КАК Регистратор,
	               |		ПродажиОбороты.Номенклатура КАК Номенклатура,
	               |		ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	               |		ПродажиОбороты.СтоимостьОборот КАК СтоимостьОборот,
	               |		ВложенныйЗапрос.НужноРассчитатьСумму КАК НужноРассчитатьСумму
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(, , Регистратор, Номенклатура.Услуга) КАК ПродажиОбороты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	               |				РеализацияТоваровУслугУслуги.Количество КАК Количество,
	               |				РеализацияТоваровУслугУслуги.Цена КАК Цена,
	               |				РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка,
	               |				РеализацияТоваровУслугУслуги.НомерСтроки КАК НомерСтроки,
				   //Если в документе есть другие строки с какой же номенклатурой, то автоматический пересчет не возможен
	               |				ВЫБОР
	               |					КОГДА ВложенныйЗапрос.НомерСтроки ЕСТЬ NULL 
	               |						ТОГДА 1
	               |					ИНАЧЕ 2
	               |				КОНЕЦ КАК НужноРассчитатьСумму
	               |			ИЗ
	               |				Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	               |					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |						РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	               |						РеализацияТоваровУслугУслуги.НомерСтроки КАК НомерСтроки,
	               |						РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка
	               |					ИЗ
	               |						Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги) КАК ВложенныйЗапрос
	               |					ПО РеализацияТоваровУслугУслуги.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |						И ((НЕ ВложенныйЗапрос.НомерСтроки = РеализацияТоваровУслугУслуги.НомерСтроки))
	               |						И РеализацияТоваровУслугУслуги.Ссылка = ВложенныйЗапрос.Ссылка
	               |			ГДЕ
	               |				((НЕ РеализацияТоваровУслугУслуги.ПроцентАвтоматическихСкидок = 0)
	               |						ИЛИ (НЕ РеализацияТоваровУслугУслуги.ПроцентСкидкиНаценки = 0))) КАК ВложенныйЗапрос
	               |			ПО ПродажиОбороты.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |				И ПродажиОбороты.Регистратор = ВложенныйЗапрос.Ссылка
	               |	ГДЕ
	               |		ПродажиОбороты.СтоимостьБезСкидокОборот = 0
	               |		И (НЕ ВложенныйЗапрос.Номенклатура ЕСТЬ NULL )
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
				   //Продажи по документам РеализацияТоваровУслуг, без скидок
	               |	ВЫБРАТЬ
	               |		ПродажиОбороты.Регистратор,
	               |		ПродажиОбороты.Номенклатура,
	               |		ВложенныйЗапрос.НомерСтроки,
	               |		ПродажиОбороты.СтоимостьОборот,
	               |		0
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(, , Регистратор, Номенклатура.Услуга) КАК ПродажиОбороты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	               |				РеализацияТоваровУслугУслуги.Количество КАК Количество,
	               |				РеализацияТоваровУслугУслуги.Цена КАК Цена,
	               |				РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка,
	               |				РеализацияТоваровУслугУслуги.НомерСтроки КАК НомерСтроки
	               |			ИЗ
	               |				Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	               |			ГДЕ
	               |				РеализацияТоваровУслугУслуги.ПроцентАвтоматическихСкидок = 0
	               |				И РеализацияТоваровУслугУслуги.ПроцентСкидкиНаценки = 0) КАК ВложенныйЗапрос
	               |			ПО ПродажиОбороты.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |				И ПродажиОбороты.Регистратор = ВложенныйЗапрос.Ссылка
	               |	ГДЕ
	               |		(НЕ ВложенныйЗапрос.Номенклатура ЕСТЬ NULL )
	               |		И ПродажиОбороты.СтоимостьБезСкидокОборот = 0
	               |	
	               |	) КАК ВложенныйЗапрос
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Регистратор
	               |ИТОГИ ПО
	               |	ВложенныйЗапрос.Регистратор.Дата,
	               |	Регистратор";
				   
	Результат = Запрос.Выполнить();
			
	Если НЕ Результат.Пустой() ТОгда
				
		НачатьТранзакцию();
		НомерДокВТранзакции = 0;
		СтарыйРегистратор = Неопределено;
		НаборЗаписей = Неопределено;
		
		ВалютаУпрУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");			   
		СтрокаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Дата");
		Пока СтрокаПериод.Следующий() Цикл
			СтруктураКурсаУпр = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаУпрУчета,СтрокаПериод.Дата);
			СтрокаРегистратор = СтрокаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);			
			Пока СтрокаРегистратор.Следующий() Цикл
				Если НомерДокВТранзакции = КолЗаписей Тогда
					ЗафиксироватьТранзакцию();
					НачатьТранзакцию();
					НомерДокВТранзакции = 0;
				КонецЕсли;	
				
				СписокСообщений = Новый СписокЗначений();
				
				НаборЗаписей = РегистрыНакопления.Продажи.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Установить(СтрокаРегистратор.Регистратор);
				НаборЗаписей.Прочитать();
				
				Строка = СтрокаРегистратор.Выбрать();
				
				Пока Строка.Следующий() Цикл
					Для каждого СтрокаНабора Из НаборЗаписей Цикл
						Если СтрокаНабора.Номенклатура = Строка.Номенклатура Тогда
							Если НЕ СтрокаНабора.СтоимостьБезСкидок = 0 Тогда
								Продолжить;
							КонецЕсли;
							Если Строка.НужноРассчитатьСумму = 0 Тогда
								//Переносим как есть, скидок нет
								СтрокаНабора.СтоимостьБезСкидок = СтрокаНабора.Стоимость;
							ИначеЕсли Строка.НужноРассчитатьСумму = 1 Тогда
								//Рассчитаем скидку
								СтрокаТаблицы = Строка.Регистратор.Услуги.Получить(Строка.НомерСтроки-1);
								УчитыватьНДС = Строка.УчитыватьНДС;
								СуммаВключаетНДС = Строка.СуммаВключаетНДС;
								ВалютаДокумента = Строка.ВалютаДокумента;
								КурсДокумента = Строка.КурсВзаиморасчетов;
								КратностьДокумента = Строка.КратностьВзаиморасчетов;
								СтрокаНабора.СтоимостьБезСкидок = СтрокаТаблицы.Цена * СтрокаТаблицы.Количество;
								Если УчитыватьНДС И Не СуммаВключаетНДС Тогда
									СтрокаНабора.СтоимостьБезСкидок = СтрокаНабора.СтоимостьБезСкидок + УчетНДС.РассчитатьСуммуНДС(СтрокаНабора.СтоимостьБезСкидок, 
																		УчитыватьНДС, СуммаВключаетНДС, УчетНДС.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС));
								КонецЕсли;
								
								СтрокаНабора.СтоимостьБезСкидок = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаНабора.СтоимостьБезСкидок, ВалютаДокумента,
									ВалютаУпрУчета,
									Строка.КурсВзаиморасчетов, СтруктураКурсаУпр.Курс,
									Строка.КратностьВзаиморасчетов, СтруктураКурсаУпр.Кратность);
							Иначе
								//В документе присутствуют разные скидки на одну и ту же услугу
								Если СписокСообщений.НайтиПоЗначению(Строка.Номенклатура) = Неопределено Тогда
									Сообщить("В документе " +  Строка.Регистратор + " присутствует более одной строки с услугой " + Строка.Номенклатура + " и наличием скидок. Стоимость без скидок в регистре Продажи не заполнена");
									СписокСообщений.Добавить(Строка.Номенклатура);
								КонецЕсли;	
								Прервать;
							КонецЕсли;
						КонецЕсли;	
					КонецЦикла;	
				КонецЦикла;
				НомерДокВТранзакции = НомерДокВТранзакции + 1;
				НаборЗаписей.Записать();
			КонецЦикла;	
		КонецЦикла;	
		ЗафиксироватьТранзакцию();
	КонецЕсли;	
КонецПроцедуры	


 Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = не ПолучитьРазрешениеНаОткрытиеФормы();
	
КонецПроцедуры




