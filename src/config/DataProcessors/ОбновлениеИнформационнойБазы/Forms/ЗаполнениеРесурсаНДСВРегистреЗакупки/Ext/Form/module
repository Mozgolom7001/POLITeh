Процедура КнопкаВыполнитьНажатие(Кнопка)

	ТекстВопроса = 
		"Выполнение данной обработки может занять продолжительное время
		|и является необратимой операцией. Настоятельно рекомендуется предварительно ознакомиться
		|cо справочной информацией. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
    ВыполнитьОбработку();

КонецПроцедуры // КнопкаВыполнитьНажатие()

Процедура ВыполнитьОбработку() Экспорт

	ЗаписьЖурналаРегистрации(
		"ИнформационнаяБаза.ОбновлениеИБ",
		УровеньЖурналаРегистрации.Информация,
		ЭтотОбъект.Метаданные(), ,
		"Запущена обработка " + ЭтаФорма.Заголовок);

	ВыполнитьЗаполнениеРесурсаНДСВРегистреЗакупки();
	
	ЗаписьЖурналаРегистрации(
		"ИнформационнаяБаза.ОбновлениеИБ",
		УровеньЖурналаРегистрации.Информация,
		ЭтотОбъект.Метаданные(), ,
		"Выполнена обработка " + ЭтаФорма.Заголовок);

КонецПроцедуры // ВыполнитьОбработку()

Функция ПолучитьТаблицуДокументовЗакупки(СсылкаНач, ИмяДокумента, СписокТЧ)

	//получим список документов для обработки
	//выполняем это отдельным запросом для того, чтобы можно было корректно ограничить
	//	количество обрабатываемых в один прием документов
	
	ТекстЗапроса =
		" ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
		|	ДокументРег.Ссылка КАК Регистратор
		|ИЗ 
		|	Документ." + ИмяДокумента + " КАК ДокументРег
		|ГДЕ
		|	ДокументРег.Проведен " + ?(СсылкаНач = Неопределено, "", "
		|		И ДокументРег.Ссылка > &СсылкаНач") + "
		|Упорядочить по Регистратор"; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("СсылкаНач", СсылкаНач);

	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	СписокДокументов = ТаблицаДокументов.ВыгрузитьКолонку("Регистратор");
	
	ТекстЗапроса = "";
	Если ИмяДокумента = "ГТДИмпорт" Тогда
	
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ГТДИмпортТовары.Ссылка      КАК Регистратор,
			|	ГТДИмпортТовары.Ссылка.Дата КАК ДатаДокумента,
			|	ГТДИмпортТовары.Номенклатура,
			|	ГТДИмпортТовары.СуммаНДС,
			|	ГТДИмпортРазделы.НДСВВалюте,
			|	ГТДИмпортРазделы.Ссылка.ВалютаДокумента    КАК ВалютаДокумента,
			|	ГТДИмпортРазделы.Ссылка.КурсДокумента      КАК КурсДокумента,
			|	ГТДИмпортРазделы.Ссылка.КратностьДокумента КАК КратностьДокумента
			|ИЗ
			|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
			|		ПО ГТДИмпортТовары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
			|ГДЕ
			|	ГТДИмпортТовары.Ссылка В(&СписокДокументов)
			|ИТОГИ ПО
			|	Регистратор";
	
	ИначеЕсли СписокТЧ.Количество() = 1 Тогда
	
		Если ИмяДокумента = "ОтчетКомиссионераОПродажах" Тогда
		
			ТекстЗапроса =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Ссылка                  КАК Регистратор,
				|	Неопределено            КАК Номенклатура, 
				|	СтавкаНДСВознаграждения КАК СтавкаНДС
				|ИЗ
				|	Документ." + ИмяДокумента + "
				|ГДЕ
				|	Ссылка В (&СписокДокументов)
				|Итоги по Регистратор";
				
		ИначеЕсли ИмяДокумента = "ПоступлениеДопРасходов" Тогда
		
			ТекстЗапроса =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Ссылка        КАК Регистратор,
				|	Неопределено  КАК Номенклатура, 
				|	СтавкаНДС     КАК СтавкаНДС
				|ИЗ
				|	Документ." + ИмяДокумента + "
				|ГДЕ
				|	Ссылка В (&СписокДокументов)
				|Итоги по Регистратор";
			
		Иначе	
		
			ТекстЗапроса =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Ссылка КАК Регистратор,
				|	Номенклатура, 
				|	СтавкаНДС
				|ИЗ
				|	Документ." + ИмяДокумента + "." + СписокТЧ[0].Значение + "
				|ГДЕ
				|	Ссылка В (&СписокДокументов)
				|Итоги по Регистратор";
			
		КонецЕсли;	
		
	Иначе
	
		Для Каждого ЭлементТЧ из СписокТЧ цикл
		
			Если ТекстЗапроса <> "" Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|	ОБЪЕДИНИТЬ ВСЕ 
				|";
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Ссылка,
				|	Номенклатура,
				|	СтавкаНДС
				|ИЗ
				|	Документ." + ИмяДокумента + "." + ЭлементТЧ.Значение + "
				|ГДЕ
				|	Ссылка В (&СписокДокументов)";
			
		Конеццикла;
		
		ТекстЗапроса = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Ссылка КАК Регистратор,
			|	Номенклатура,
			|	СтавкаНДС
			|ИЗ
			|	(" + ТекстЗапроса + ") КАК ВложенныйЗапрос
			|
			|Итоги по Регистратор";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	
	Возврат Запрос.Выполнить();

КонецФункции // ПолучитьТаблицуДокументовЗакупки()

Процедура ВыполнитьЗаполнениеРесурсаНДСВРегистреЗакупки()

	Перем ВалютаУпр;
	Перем ВалютаРегл;
	
	ВалютаУпр  = глЗначениеПеременной("ВалютаУправленческогоУчета");
	ВалютаРегл = глЗначениеПеременной("ВалютаРегламентированногоУчета");
	
	ТаблицаОбрабатываемыхДокументов = Новый ТаблицаЗначений;
	ТаблицаОбрабатываемыхДокументов.Колонки.Добавить("ИмяДокумента");
	ТаблицаОбрабатываемыхДокументов.Колонки.Добавить("СписокТЧ");
	
	СтруктДокументов = Новый Структура;
	СтруктДокументов.Вставить("АвансовыйОтчет",                "Товары, Прочее");
	СтруктДокументов.Вставить("ВозвратТоваровПоставщику",      "Товары");
	СтруктДокументов.Вставить("ВозвратТоваровПоставщикуИзНТТ", "Товары");
	СтруктДокументов.Вставить("ГТДИмпорт",                     "Товары");
	СтруктДокументов.Вставить("ОтчетКомиссионераОПродажах",    "Товары");
	СтруктДокументов.Вставить("ПоступлениеДопРасходов",        "Товары");
	СтруктДокументов.Вставить("ПоступлениеТоваровУслуг",       "Товары, Услуги");
	СтруктДокументов.Вставить("ПоступлениеТоваровУслугВНТТ",   "Товары, Услуги");
	
	Для Каждого ТипДок Из СтруктДокументов Цикл
	
		НоваяСтрока = ТаблицаОбрабатываемыхДокументов.Добавить();
		НоваяСтрока.ИмяДокумента = ТипДок.Ключ;
		НоваяСтрока.СписокТЧ = Новый СписокЗначений;
		
		СтруктТабЧасти = Новый Структура(ТипДок.Значение);
		
		Для Каждого ИмяТабЧасть Из СтруктТабЧасти Цикл
			НоваяСтрока.СписокТЧ.Добавить(ИмяТабЧасть.Ключ);
		КонецЦикла;
		
	КонецЦикла;
	
	НаборЗаписей = РегистрыНакопления.Закупки.СоздатьНаборЗаписей();

	Для Каждого СтрокаТаблицы Из ТаблицаОбрабатываемыхДокументов цикл
	
		ИмяДокумента   = СтрокаТаблицы.ИмяДокумента;
		СписокТЧ       = СтрокаТаблицы.СписокТЧ;
		ЕстьДокументы  = Истина;
		ДокументСсылка = Неопределено;
		
		Пока ЕстьДокументы Цикл
		
            РезультатЗапроса = ПолучитьТаблицуДокументовЗакупки(ДокументСсылка, ИмяДокумента, СписокТЧ);
			ЕстьДокументы    = НЕ РезультатЗапроса.Пустой();
			
			//обход по документам
			ВыборкаПоДокументам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоДокументам.Следующий() Цикл
				
				ДокументСсылка        = ВыборкаПоДокументам.Регистратор;
				ВыборкаПоНоменклатуре = ВыборкаПоДокументам.Выбрать();
				
			    //создание набора записей в регистр
				НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
                НаборЗаписей.Прочитать();

				флИзмененыДвижения = ложь;
				
				Для Каждого Запись из НаборЗаписей цикл
				
					Если Запись.НДС <> 0 Тогда
						Продолжить;
					КонецЕсли;
					
					// т.к. по одной номенклатуре может быть несколько записей, надо каждый раз обновлять выборку
					ВыборкаПоНоменклатуре = ВыборкаПоДокументам.Выбрать();

					ТекНоменклатура = Запись.Номенклатура;
					
					//в данном документе ставка НДС определяется в шапке.
					//	Запрос построен так, что результат содержит одну строку с Номенклатура = Неопределено
					Если ИмяДокумента = "ОтчетКомиссионераОПродажах" ИЛИ ИмяДокумента = "ПоступлениеДопРасходов" Тогда
						ТекНоменклатура = Неопределено;
					КонецЕсли;
					
					Если ВыборкаПоНоменклатуре.НайтиСледующий(ТекНоменклатура, "Номенклатура") Тогда
					
						Если ИмяДокумента = "ГТДИмпорт" Тогда
						
							КурсУпр = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаУпр, ВыборкаПоНоменклатуре.ДатаДокумента);
							СуммаНДСУпр = 0;
							
							Если ВыборкаПоНоменклатуре.НДСВВалюте Тогда // Данные о курсе валюты берем из документа
							
								СуммаНДСУпр = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(
									ВыборкаПоНоменклатуре.СуммаНДС,
									ВыборкаПоНоменклатуре.ВалютаДокумента,
									ВалютаУпр,
									ВыборкаПоНоменклатуре.КурсДокумента,
									КурсУпр.Курс, 
	               					ВыборкаПоНоменклатуре.КратностьДокумента,
	               					КурсУпр.Кратность);
							Иначе
							
								КурсРегл = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаРегл, ВыборкаПоНоменклатуре.ДатаДокумента);
								
								СуммаНДСУпр = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(
									ВыборкаПоНоменклатуре.СуммаНДС,
									ВалютаРегл,
									ВалютаУпр,
									КурсРегл.Курс,
									КурсУпр.Курс, 
	               					КурсРегл.Кратность,
	               					КурсУпр.Кратность);
								
							КонецЕсли;
							
							Если СуммаНДСУпр <> 0 Тогда
								флИзмененыДвижения = Истина;
								Запись.НДС = СуммаНДСУпр;
							КонецЕсли;
							
						Иначе
						
							СтавкаНДС = УчетНДС.ПолучитьСтавкуНДС(ВыборкаПоНоменклатуре.СтавкаНДС);
							Если СтавкаНДС <> 0 Тогда
								флИзмененыДвижения = Истина;
								Запись.НДС = Запись.Стоимость * СтавкаНДС / (100 + ставкаНДС);
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если флИзмененыДвижения Тогда
					НаборЗаписей.Записать();
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла; // Пока ЕстьДокументы Цикл
		
	КонецЦикла; // Для Каждого СтрокаТаблицы Из ТаблицаОбрабатываемыхДокументов цикл

КонецПроцедуры // ВыполнитьЗаполнениеРесурсаНДСВРегистреЗакупки()


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = НЕ ПолучитьРазрешениеНаОткрытиеФормы();
	
КонецПроцедуры // ПередОткрытием()


