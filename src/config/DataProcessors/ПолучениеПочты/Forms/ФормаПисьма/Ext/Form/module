
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Сохранение на диск отмеченных файлов объекта.
//
// Параметры
//  ТекущийПользователь - Ссылка на справочник Пользователи, с текущим пользователем
//                 конфигурации.
//  ФайлыВложения       - СписокЗначений, двоичные данные с файлами
//
Процедура СохранитьФайлыПисьма(ТекущийПользователь, ФайлыВложения)

	Если ФайлыВложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяКаталога = РаботаСФайлами.ПолучитьИмяКаталога();
	ТолькоЧтение = Ложь;

	ФормаСохраненияФайлов                = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСохраненияФайлов");
	ФормаСохраненияФайлов.ИмяКаталога    = ИмяКаталога;
	ФормаСохраненияФайлов.ТолькоЧтение   = ТолькоЧтение;
	ФормаСохраненияФайлов.ОткрытьКаталог = Истина;
	СтруктураПараметров                  = ФормаСохраненияФайлов.ОткрытьМодально();

	Если СтруктураПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не РаботаСФайлами.ПроверитьСуществованиеКаталога(СтруктураПараметров.ИмяКаталога) Тогда
		Возврат;
	КонецЕсли;

	СпособПерезаписи = "";

	Для каждого ФайлВложения из ФайлыВложения Цикл

		Состояние("Сохраняется файл: " + ФайлВложения.Представление);

		ИмяФайла = РаботаСФайлами.ПолучитьИмяФайла(СтруктураПараметров.ИмяКаталога, ФайлВложения.Представление);
		РаботаСФайлами.СохранитьФайлНаДиске(ФайлВложения.Значение, ИмяФайла, СтруктураПараметров.ТолькоЧтение, СпособПерезаписи);

		Если СпособПерезаписи = Неопределено Тогда
			Прервать;
		КонецЕсли; 

	КонецЦикла;

	Если СтруктураПараметров.ОткрытьКаталог Тогда
		ЗапуститьПриложение("explorer " + СтруктураПараметров.ИмяКаталога);
	КонецЕсли;

КонецПроцедуры // РаботаСФайлами.СохранитьФайлы()

//Сохранение на диск отмеченных файлов объекта и их открытие.
//Параметры
// ТекущийПользователь - Ссылка на справочник Пользователи, с текущим пользователем
//				конфигурации.
//  ФайлыВложения       - СписокЗначений, двоичные данные с файлами
//
Процедура ОткрытьФайлыПисьма(ТекущийПользователь, ФайлыВложения)

	Если ФайлыВложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяКаталога = РаботаСФайлами.ПолучитьИмяКаталога();
	ТолькоЧтение = Ложь;

	СпособПерезаписи = "";

	Для каждого ФайлВложения из ФайлыВложения Цикл

		Состояние("Сохраняется файл: " + ФайлВложения.Представление);

		ИмяФайла = РаботаСФайлами.ПолучитьИмяФайла(ИмяКаталога, ФайлВложения.Представление);
		РаботаСФайлами.СохранитьФайлНаДиске(ФайлВложения.Значение, ИмяФайла, Ложь, СпособПерезаписи);

		Если СпособПерезаписи = Неопределено Тогда
			Прервать;
		КонецЕсли;

		РаботаСФайлами.ОткрытьФайлДополнительнойИнформации(ИмяКаталога, ФайлВложения.Представление);

	КонецЦикла;

КонецПроцедуры // РаботаСФайлами.ОткрытьФайлы()

// Сохраняет файлы выделенные в списке на диск.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловСохранитьНаДиске(Кнопка)

	Если ЭлементыФормы.ФайлыПисьма.ТекущиеДанные <> Неопределено Тогда

		ФайлыВложения = Новый СписокЗначений;

		НомерСтроки = 0;
		Для каждого Строки Из ЭлементыФормы.ФайлыПисьма.ВыделенныеСтроки Цикл
			НомерСтроки = НомерСтроки + 1;
			Если РаботаСФайлами.ЕстьЗапрещенныеСимволыИмени(ЭлементыФормы.ФайлыПисьма.ТекущиеДанные.Файл) Тогда
				Сообщить("Обнаружены запрещенные символы имени файла. Строка №" + НомерСтроки);
				Продолжить;
			КонецЕсли;
			ФайлыВложения.Добавить(ЭлементыФормы.ФайлыПисьма.ТекущиеДанные.ДанныеФайла, ЭлементыФормы.ФайлыПисьма.ТекущиеДанные.Файл);
		КонецЦикла; 
		
	КонецЕсли; 

	Если ФайлыВложения <> Неопределено И ФайлыВложения.Количество() > 0 Тогда
		СохранитьФайлыПисьма(глЗначениеПеременной("глТекущийПользователь"), ФайлыВложения);
	КонецЕсли; 

КонецПроцедуры

// Сохраняет файлы выделенные в списке на диск и открывает их.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловОткрытьФайлы(Кнопка)
	
	Если ЭлементыФормы.ФайлыПисьма.ТекущиеДанные <> Неопределено Тогда

		ФайлыВложения = Новый СписокЗначений;

		НомерСтроки = 0;
		
		Для каждого Строки Из ЭлементыФормы.ФайлыПисьма.ВыделенныеСтроки Цикл
			НомерСтроки = НомерСтроки + 1;
			Если РаботаСФайлами.ЕстьЗапрещенныеСимволыИмени(ЭлементыФормы.ФайлыПисьма.ТекущиеДанные.Файл) Тогда
				Сообщить("Обнаружены запрещенные символы имени файла. Строка №" + НомерСтроки);
				Продолжить;
			КонецЕсли;
			ФайлыВложения.Добавить(ЭлементыФормы.ФайлыПисьма.ТекущиеДанные.ДанныеФайла, ЭлементыФормы.ФайлыПисьма.ТекущиеДанные.Файл);
		КонецЦикла; 
		
	КонецЕсли; 

	Если ФайлыВложения <> Неопределено И ФайлыВложения.Количество() > 0 Тогда
		ОткрытьФайлыПисьма(глЗначениеПеременной("глТекущийПользователь"), ФайлыВложения);
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события Нажатие элемента формы КнопкаДобавитьКИ.
//
Процедура КнопкаДобавитьКИНажатие(Элемент)

	Если Отправитель = Неопределено ИЛИ Отправитель.Пустая() Тогда
		
		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("Объект"       , Неопределено);
		СтруктураЗаписи.Вставить("Тип"          , Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		СтруктураЗаписи.Вставить("Вид"          , "");
		СтруктураЗаписи.Вставить("Представление", СокрЛП(АдресОтправителя));
		СтруктураЗаписи.Вставить("Комментарий"  , "");
		Для а = 1 По 10 Цикл
			СтруктураЗаписи.Вставить("Поле" + Строка(а), "");
		КонецЦикла;
		
		КонтактнаяИнформация = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
		ОбработкаРедактирования = Обработки.РедактированиеКонтактнойИнформации.Создать();
		ОбработкаРедактирования.РедактироватьЗапись(КонтактнаяИнформация, Истина, ЭтаФорма, СтруктураЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы ФайлыПисьма.
//
Процедура ФайлыПисьмаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.Файл.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Файл.ИндексКартинки     = РаботаСФайлами.ПолучитьИндексПиктограммыФайла(РаботаСФайлами.ПолучитьРасширениеФайла(ДанныеСтроки.Файл));

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы ФайлыПисьма.
//
Процедура ФайлыПисьмаПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы ФайлыПисьма.
//
Процедура ФайлыПисьмаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы Отправитель.
//
Процедура ОтправительНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Объект КАК Объект,
	|	КонтактнаяИнформация.Вид,
	|	КонтактнаяИнформация.Тип,
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Представление ПОДОБНО &АдресОтправителя
	|	И
	|	КонтактнаяИнформация.Тип = &ТипЭлПочта
	|	И
	|	(КонтактнаяИнформация.Объект ССЫЛКА Справочник.Контрагенты
	|	ИЛИ
	|	КонтактнаяИнформация.Объект ССЫЛКА Справочник.КонтактныеЛица
	|	ИЛИ
	|	КонтактнаяИнформация.Объект ССЫЛКА Справочник.ФизическиеЛица)
	|";

	Запрос.УстановитьПараметр("ТипЭлПочта", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("АдресОтправителя", ("%" + СокрЛП(АдресОтправителя) + "%"));

	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();

	СписокОбъектов = Новый СписокЗначений;
	
	СписокОбъектов.ЗагрузитьЗначения(ТаблицаЗапроса.ВыгрузитьКолонку("Объект"));

	Если СписокОбъектов.Количество() = 0 Тогда
	
		Отправитель = Неопределено;
		Предупреждение("Нет объектов в контактной информации с текущим адресом эл.почты.");
		Возврат;

	Иначе

		ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокОбъектов, Элемент);
		Если ВыбранныйЭлемент <> Неопределено Тогда
		
			Отправитель = ВыбранныйЭлемент.Значение;
		
		КонецЕсли;
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события формы ОбновлениеОтображения.
//
Процедура ОбновлениеОтображения()
	
	Если Отправитель = Неопределено ИЛИ Отправитель.Пустая() Тогда
		ЭлементыФормы.Отправитель.Видимость      = Ложь;
		ЭлементыФормы.КнопкаДобавитьКИ.Видимость = Истина;
	Иначе
		ЭлементыФормы.Отправитель.Видимость      = Истина;
		ЭлементыФормы.КнопкаДобавитьКИ.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается по нажатию кнопки ОК нижней командной панели формы.
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	СтрокаВладельца = ЭтаФорма.ВладелецФормы.ТаблицаПисем.Найти(ЭтаФорма.КлючУникальности, "Письмо");

	Если СтрокаВладельца <> Неопределено Тогда
	
		СтрокаВладельца.Тема         = ТекстТемы;
		СтрокаВладельца.Письмо.Тема  = ТекстТемы;
		СтрокаВладельца.Письмо.Текст = ТекстПисьма;
		СтрокаВладельца.Отправитель = Отправитель;
		
		ЭтаФорма.ВладелецФормы.ПроставитьОтправителя();

	КонецЕсли; 
	
	// Проверим изменяли ли имена вложений
	Для каждого СтрокаФайлов Из ФайлыПисьма Цикл
		Вложение = ВложенияПисьма[ФайлыПисьма.Индекс(СтрокаФайлов)];
		Вложение.Наименование = СтрокаФайлов.Файл;
	КонецЦикла; 
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанаКИ" И ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Объект") Тогда
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Контрагенты,СправочникСсылка.КонтактныеЛица,СправочникСсылка.ФизическиеЛица");
		Если ОписаниеТипов.СодержитТип(ТипЗнч(Параметр.Объект)) Тогда
			Отправитель = Параметр.Объект;
			ОбновлениеОтображения();
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

ФайлыПисьма.Колонки.Добавить("ДанныеФайла");

