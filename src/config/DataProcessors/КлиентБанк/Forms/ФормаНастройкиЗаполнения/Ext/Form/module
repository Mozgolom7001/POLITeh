
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СписокКБ = Новый СписокЗначений;
	СписокКБ.Добавить("АРМ ""Клиент"" АС ""Клиент-Сбербанк"" Сбербанка России");
	СписокКБ.Добавить("""АРМ удаленного клиента СПЭД""  ВКФ АО ""Банк ТуранАлем""");
	СписокКБ.Добавить("Банк-клиент АКБ ""Лефко-Банк""");
	СписокКБ.Добавить("ИНИСТ Банк-Клиент ЗАО ИНИСТ");
	СписокКБ.Добавить("Клиент банка InterBank v.5.1 R-Style Software Lab");
	СписокКБ.Добавить("Клиент-банк ""BARS"" фирмы ""Оникс Капитал""");
	СписокКБ.Добавить("Клиент-Банк ""ВЕДАНА""");
	СписокКБ.Добавить("Клиент-банк МИБ");
	СписокКБ.Добавить("Клиент-Банк ОАО ""Прио-Внешторгбанк""");	
	СписокКБ.Добавить("Клиент-Банк РФК");
	СписокКБ.Добавить("""Клиент-ТЕЛЕБАНК"" АОЗТ Степ Ап");
	СписокКБ.Добавить("Комплекс обмена платежными документами Курьер. АОЗТ АстраСофт");
	СписокКБ.Добавить("Система ""iBank 2"" ООО ""БИФИТ""");
	СписокКБ.Добавить("Система ""MailBank"" фирмы ""Системные технологии"" Минск");
	СписокКБ.Добавить("Система ""PSB On-Line"" ОАО ""ПРОМСВЯЗЬБАНК""");
	СписокКБ.Добавить("Система ""Клиент-Банк Плюс"" ОАО ""Уралвнешторгбанка""");
	СписокКБ.Добавить("Система ""Клиент-Банк"" АРМ ""Украина-Клиент""");
	СписокКБ.Добавить("Система ""Клиент-Банк"" ЗАО ""Банк ""Новый Символ""");
	СписокКБ.Добавить("Система Банк-Клиент АКБ ""София""");
	СписокКБ.Добавить("Система ДБО BS-Client");
	СписокКБ.Добавить("Система Клиент-Банк ""BClient""");
	СписокКБ.Добавить("Система клиент-банк TIVAL");
	СписокКБ.Добавить("Система клиент-банк ""Электронный Офис"" ЗАО ""Райффайзенбанк""");
	СписокКБ.Добавить("Система электронных расчетов QuickPay ЗАО АО Кворум");
	СписокКБ.Добавить("ЦФТ - Интернет-банк (Faktura.ru)");
	СписокКБ.Добавить("""Электронный клиент"" АКБ Автобанк");
	СписокКБ.Добавить("""Электронный Офис"" фирмы ""ИМПЭКСБАНК""");
	СписокКБ.Добавить("DiasoftCLIENT 4x4 for Windows Диасофт");
	СписокКБ.Добавить("LanVisit DOS 4.90 Ланит");
	СписокКБ.Добавить("On-Soft Клиент-Банк КБ ""ЛОКО-Банк""");
	СписокКБ.Добавить("WinClient фирмы МПИ-Банк");
	СписокКБ.Добавить("""Yugo-Vostok Online"" ОАО БАНК ""ЮГО-ВОСТОК""");	
	
	ЭлементыФормы.Программа.СписокВыбора=СписокКБ;
	
	ПолучитьДанные(БанковскийСчет);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура БанковскийСчетПриИзменении(Элемент)
	
	ПолучитьДанные(Элемент.Значение);
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если Не ЗначениеЗаполнено(Настр_БанковскийСчет) Тогда
		Предупреждение("Не выбран банковский счет!");
		Возврат;
	КонецЕсли;
	
	Если Настр_Программа = "" Тогда
		Предупреждение("Не выбрана программа Клиента банка");
		Возврат;
	КонецЕсли;
	
	Если Настр_Дос Тогда
		Настр_Кодировка = "DOS";
	Иначе
		Настр_Кодировка = "Windows";
	КонецЕсли;
		
	ПрограммаКБ.Организация = Организация;
	ПрограммаКБ.БанковскийСчет = Настр_БанковскийСчет;
	ПрограммаКБ.Программа = Настр_Программа;
	ПрограммаКБ.Кодировка = Настр_Кодировка;
	ПрограммаКБ.ФайлВыгрузки = Настр_ФайлВыгрузки;
	ПрограммаКБ.ФайлЗагрузки = Настр_ФайлЗагрузки;
	ПрограммаКБ.ВидыВыгружаемыхПлатДокументов = Новый ХранилищеЗначения(Настр_ТаблицаДокументов);
	ПрограммаКБ.НеКонтролироватьОкончаниеНомера = Настр_НеКонтролироватьОкончаниеНомера;
	ПрограммаКБ.НеКонтролироватьБезопасностьОбменаСБанком = Не Настр_КонтролироватьБезопасностьОбменаСБанком;
	
	ПрограммаКБ.Записать();
	
	БанковскийСчет = Настр_БанковскийСчет;
	ФайлВыгрузки = Настр_ФайлВыгрузки;
	ФайлЗагрузки = Настр_ФайлЗагрузки;
	Кодировка = Настр_Кодировка;
	Программа = Настр_Программа;
	
	Для каждого СтрокаДокумента из Настр_ТаблицаДокументов Цикл
		НайденаяСтрока = ТаблицаДокументов.Найти(СтрокаДокумента.Документ,"Название");
		НайденаяСтрока.Пометка = СтрокаДокумента.Пометка; 
	КонецЦикла;
	
	НастройкаЗаполнения.Загрузить(Настр_ТаблицаНастроекПриЗагрузке);
	ГруппаДляНовыхКонтрагентов = Настр_Группа;
	Оповестить("ИзмененыНастройкиКлиентБанка");
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	ОткрытьФайлДляПросмотра(Элемент,Кодировка,"Файл загрузки");
		
КонецПроцедуры

Процедура ФайлЗагрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборФайлаДляЗагрузки(Элемент);

КонецПроцедуры

Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	ОткрытьФайлДляПросмотра(Элемент,Кодировка,"Файл выгрузки");
		
КонецПроцедуры

Процедура ФайлВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборФайлаДляВыгрузки(Элемент);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПолучитьДанные(Счет)
	
	ПрограммаКБ = РегистрыСведений.НастройкиОбменаСКлиентомБанка.СоздатьМенеджерЗаписи();
	ПрограммаКБ.БанковскийСчет = Счет;
	ПрограммаКБ.Организация = Организация;
	ПрограммаКБ.Прочитать();
	   
	Настр_БанковскийСчет = Счет;
	Настр_ТаблицаНастроекПриЗагрузке = НастройкаЗаполнения.Выгрузить();
	Настр_Группа = ГруппаДляНовыхКонтрагентов;
	
	Если ПрограммаКБ.Выбран() Тогда
		Настр_Программа = ПрограммаКБ.Программа;
		Настр_Кодировка = ПрограммаКБ.Кодировка;
		Настр_ФайлВыгрузки = ПрограммаКБ.ФайлВыгрузки;
		Настр_ФайлЗагрузки = ПрограммаКБ.ФайлЗагрузки;
		Настр_НеКонтролироватьОкончаниеНомера = ПрограммаКБ.НеКонтролироватьОкончаниеНомера;
		Настр_КонтролироватьБезопасностьОбменаСБанком = НЕ ПрограммаКБ.НеКонтролироватьБезопасностьОбменаСБанком;
		Таб = ПрограммаКБ.ВидыВыгружаемыхПлатДокументов.Получить();
	Иначе
		Настр_ФайлВыгрузки = КаталогПрограммы() + "1c_to_kl.txt";
		Настр_ФайлЗагрузки = КаталогПрограммы() + "kl_to_1c.txt";
		Настр_КонтролироватьБезопасностьОбменаСБанком = Истина;
	КонецЕсли;
	
	Если Таб=неопределено ИЛИ Таб.Количество() = 0 Тогда
		Настр_ТаблицаДокументов.Очистить();
		Док=Настр_ТаблицаДокументов.Добавить();
		Док.Пометка=Истина;
		Док.Документ="Платежное поручение";
		Док=Настр_ТаблицаДокументов.Добавить();
		Док.Документ="Платежное требование";	
		Док=Настр_ТаблицаДокументов.Добавить();
		Док.Документ="Заявление на аккредитив";	
		Док=Настр_ТаблицаДокументов.Добавить();
		Док.Документ="Инкассовое поручение";	
	Иначе
		Настр_ТаблицаДокументов = Таб.Скопировать();               
	КонецЕсли;
	
	Если Настр_Кодировка = "DOS" Тогда
		Настр_Дос = Истина;
	Иначе
		Настр_Дос = Ложь;
	КонецЕсли;
	
КонецПроцедуры

