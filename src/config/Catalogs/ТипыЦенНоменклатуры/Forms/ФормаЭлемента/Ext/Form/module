////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет по реквизиту формы ВидТипаЦен требуемые реквизиты справочника
//
// Параметры:
//  Нет.
//
Процедура ЗаполнитьПризнакиПоВидуТипаЦен()

	Если ВидТипаЦен = "Базовый" Тогда
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.СпособРасчетаЦены.АвтоОтметкаНезаполненного =  Ложь;

		БазовыйТипЦен        = Неопределено;
		СпособРасчетаЦены    = Неопределено;
		
		ПроцентСкидкиНаценки = 0;
		Рассчитывается       = Ложь;
	ИначеЕсли ВидТипаЦен = "Динамический" Тогда
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.СпособРасчетаЦены.АвтоОтметкаНезаполненного = Истина;

		Рассчитывается       = Истина;
	ИначеЕсли ВидТипаЦен = "Расчетный" Тогда
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.СпособРасчетаЦены.АвтоОтметкаНезаполненного = Истина;

		Рассчитывается       = Ложь;
	КонецЕсли;

	УстановитьНадписи();

КонецПроцедуры // ЗаполнитьПризнакиПоВидуТипаЦен()

// Процедура заполняет на форме реквизит ВидТипаЦен по реквизитам элемента
//
// Параметры:
//  Нет.
//
Процедура ЗаполнитьВидТипаЦенПоПризнакам()

	Если Рассчитывается Тогда
		ВидТипаЦен = "Динамический";
	Иначе
		Если НЕ ЗначениеЗаполнено(БазовыйТипЦен) Тогда
			ВидТипаЦен = "Базовый";
		Иначе
			ВидТипаЦен = "Расчетный";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьВидТипаЦенПоПризнакам()

// Процедура устанавливает надписи в форме.
//
Процедура УстановитьНадписи()

	Если ВидТипаЦен = "Базовый" Тогда
		ЭлементыФормы.ИнфРассчитывается.Заголовок = "Цены назначаются и хранятся для каждой позиции номенклатуры.
		                                            |На основании цен этого типа могут рассчитываться цены других типов";
	ИначеЕсли ВидТипаЦен = "Динамический" Тогда
		ЭлементыФормы.ИнфРассчитывается.Заголовок = "Цены рассчитываются автоматически от цен базового типа";
	ИначеЕсли ВидТипаЦен = "Расчетный" Тогда
		ЭлементыФормы.ИнфРассчитывается.Заголовок = "Цены назначаются и хранятся для каждой позиции номенклатуры";
	КонецЕсли;

КонецПроцедуры // УстановитьНадписи()

// Процедура устанавливает доступность реквизитов формы.
//
Процедура УстановитьДоступность()

	Если ВидТипаЦен = "Базовый" Тогда
		ЭлементыФормы.БазовыйТипЦен.Доступность = Ложь;
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.БазовыйТипЦен.ОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ПроцентСкидкиНаценки.Доступность = Ложь;
		ЭлементыФормы.СпособРасчетаЦены.Доступность = Ложь;
		ЭлементыФормы.СпособРасчетаЦены.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.СпособРасчетаЦены.ОтметкаНезаполненного = Ложь;
	ИначеЕсли ВидТипаЦен = "Расчетный" ИЛИ ВидТипаЦен = "Динамический" Тогда
		ЭлементыФормы.БазовыйТипЦен.Доступность = Истина;
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.СпособРасчетаЦены.Доступность = Истина;
		ЭлементыФормы.СпособРасчетаЦены.АвтоОтметкаНезаполненного = Истина;

		Если СпособРасчетаЦены = Перечисления.СпособыРасчетаЦены.ПоВхождениюБазовойЦеныВДиапазон Тогда
			ЭлементыФормы.ПроцентСкидкиНаценки.Доступность = Ложь;
		ИначеЕсли СпособРасчетаЦены = Перечисления.СпособыРасчетаЦены.ПоПроцентнойНаценкеНаБазовыйТип Тогда
			ЭлементыФормы.ПроцентСкидкиНаценки.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // УстановитьДоступность()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ


Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	Если ЭтоНовый() Тогда
		ПорядокОкругления = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии(Отказ)

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);

	Если ЭтоНовый() Тогда
		ВалютаЦены = глЗначениеПеременной("ВалютаУправленческогоУчета");
	КонецЕсли;

	// Заполнить список выбора номенклатуры
	ЭлементыФормы.ВидТипаЦен.СписокВыбора.Добавить("Базовый");
	ЭлементыФормы.ВидТипаЦен.СписокВыбора.Добавить("Динамический");
	ЭлементыФормы.ВидТипаЦен.СписокВыбора.Добавить("Расчетный");

	ЗаполнитьВидТипаЦенПоПризнакам();

	УстановитьНадписи();

	УстановитьДоступность();

КонецПроцедуры

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если (ВидТипаЦен = "Расчетный" ИЛИ ВидТипаЦен = "Динамический") Тогда
		Если НЕ ЗначениеЗаполнено(СпособРасчетаЦены) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не выбран способ расчета цены!", Отказ);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(БазовыйТипЦен) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнен базовый тип цен!", Отказ);
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВалютаЦены) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена валюта цены!", Отказ);
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Обработчик события ПриИзменении поля выбора вида типа цен.
//
Процедура ВидТипаЦенПриИзменении(Элемент)

	Если НЕ ЗначениеЗаполнено(ВидТипаЦен) Тогда
		ВидТипаЦен = "Базовый";
	КонецЕсли;

	ЗаполнитьПризнакиПоВидуТипаЦен();

	УстановитьДоступность();

КонецПроцедуры // ВидТипаЦенПриИзменении()

// Обработчик события ПриИзменении поля "СпособРасчетаЦены".
//
Процедура СпособРасчетаЦеныПриИзменении(Элемент)

	Если СпособРасчетаЦены = Перечисления.СпособыРасчетаЦены.ПоВхождениюБазовойЦеныВДиапазон Тогда
		ПроцентСкидкиНаценки = 0;
	КонецЕсли;

	УстановитьДоступность();

КонецПроцедуры //СпособРасчетаЦеныПриИзменении()

Процедура ПослеЗаписи()
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

