////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ФОРМЫ


Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);

	ПрочитатьОтветственноеЛицо();

КонецПроцедуры

// Обработчик события ПриЗаписи формы.
//
Процедура ПриЗаписи(Отказ)

	ЗаписатьОтветственноеЛицо(Отказ);

КонецПроцедуры

// Обработчик события "ПослеЗаписи" формы
//
Процедура ПослеЗаписи()
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура читает данные о текущем ответсвенном лице.
//
Процедура ПрочитатьОтветственноеЛицо()

	Отбор = Новый Структура("СтруктурнаяЕдиница");
	Отбор.СтруктурнаяЕдиница = Ссылка;
	СрезПоследних   = РегистрыСведений.ОтветственныеЛица.СрезПоследних(ТекущаяДата(), Отбор);

	Если СрезПоследних.Количество() < 1 Тогда
		ЭлементыФормы.ОтветственноеЛицо.Значение = Неопределено;
	Иначе
		ЭлементыФормы.ОтветственноеЛицо.Значение = СрезПоследних[0].ФизическоеЛицо;
	КонецЕсли;

КонецПроцедуры // ПрочитатьОтветственноеЛицо()

// Процедура записывает данные об Ответственном лице.
//
// Параметры:
//  Отказ - в параметр записывается Истина при неудачной записи.
//
Процедура ЗаписатьОтветственноеЛицо(Отказ)

	Отбор = Новый Структура("СтруктурнаяЕдиница");
	Отбор.СтруктурнаяЕдиница = Ссылка;
	СрезПоследних   = РегистрыСведений.ОтветственныеЛица.СрезПоследних(ТекущаяДата(), Отбор);

	Если СрезПоследних.Количество() < 1 Тогда
		Если Не ЗначениеЗаполнено(ЭлементыФормы.ОтветственноеЛицо.Значение) Тогда
			Возврат;
		Иначе
			ПериодЗаписи = '19800101';
		КонецЕсли;
	Иначе
		Если ЭлементыФормы.ОтветственноеЛицо.Значение = СрезПоследних[0].ФизическоеЛицо Тогда
			Возврат;
		Иначе
			ПериодЗаписи = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;


	МенеджерЗаписи = РегистрыСведений.ОтветственныеЛица.СоздатьМенеджерЗаписи();

	МенеджерЗаписи.Период             = ТекущаяДата();
	МенеджерЗаписи.СтруктурнаяЕдиница = Ссылка;
	МенеджерЗаписи.ФизическоеЛицо     = ЭлементыФормы.ОтветственноеЛицо.Значение;

	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Сообщить("Не удалось записать данные об ответственном лице : " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Отказ = Истина;
	КонецПопытки;

КонецПроцедуры // ЗаписатьОтветственноеЛицо()

// Обработчик события пришедшего оповещения
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновитьФорму" 
	   И (Источник = Ссылка Или (ТипЗнч(Источник) = Тип("СправочникСсылка.Кассы") И Источник.Пустая())) Тогда
		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;

		Если ИмяОбновляемогоЭлемента = "ОтветственноеЛицо" Тогда
			ПрочитатьОтветственноеЛицо();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОбработкаОповещения()

// Обработчик события "Нажатие" кнопки "История...".
//
Процедура КнопкаИсторияНажатие(Элемент)

	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		Вопрос = "Перед просмотром истории необходимо записать элемент. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Попытка
				Отказ = Не ЗаписатьВФорме();
			Исключение
				Сообщить("Не удалось записать элемент!", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецПопытки;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	Если Не Отказ Тогда
		ФормаРегистра = РегистрыСведений.ОтветственныеЛица.ПолучитьФормуСписка();
		ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.Значение = Ссылка;
		ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.ВидСравнения = ВидСравнения.Равно;
		ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.Использование = Истина;
		ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;

		ФормаРегистра.Открыть();
	КонецЕсли;

КонецПроцедуры

