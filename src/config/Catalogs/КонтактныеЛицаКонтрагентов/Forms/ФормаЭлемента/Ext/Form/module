////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем мОбработкаПоискаПоСтрокеВидаКИ;
Перем мТекстПоискаПоСтрокеВидаКИ;
Перем мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ;
Перем мКнопкаРедактироватьКИВДиалоге;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Процедура считывает состояния контактного лица контрагента
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ПрочитатьСостояние() Экспорт

	СтруктураИстории = РегистрыСведений.ИсторияКонтактныхЛицКонтрагентов.ПолучитьПоследнее(ТекущаяДата(), Новый Структура("КонтактноеЛицоКонтрагента",Ссылка));
	ДатаУвольнения  = СтруктураИстории.ДатаУвольнения;
	
	Если ЭтоНовый() Тогда
		Состояние = "";
	ИначеЕсли НЕ ЗначениеЗаполнено(ДатаУвольнения) Тогда
		Состояние = "Работает";
	Иначе
		Состояние = "Уволен "+Формат(ДатаУвольнения,"ДФ=dd.MM.yyyy");
	КонецЕсли;

КонецПроцедуры

// Процедура управляет видимостью закладки События панели ПанельФормы.
// 
Процедура ВидимостьЗакладкиСобытия()

	ЭлементыФормы.ПанельФормы.Страницы.События.Видимость   = Истина;
	ЭлементыФормы.ПанельФормы.Страницы.События.Доступность = НЕ ЭтоНовый();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// Обработчик события ПередОткрытием
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Отказ = Истина;
		ПолучитьФорму("ФормаВводаНового").Открыть();
		Возврат;
	КонецЕсли;
	
	УправлениеКонтактнойИнформацией.ПрочитатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Ссылка);
	
	УправлениеКонтактнойИнформацией.ПрочитатьКонтактнуюИнформацию(НаборКонтактнойИнформацииЛичная, КонтактноеЛицо);
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события ПриОткрытии
//
Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
	// Контактная информация
	мКнопкаРедактироватьКИВДиалоге = ЭлементыФормы.КоманднаяПанельКонтактнаяИнформация.Кнопки.РедактироватьВДиалоге;
	УправлениеКонтактнойИнформацией.ИнициализацияКнопкиРедактированиеКИВДиалоге(мКнопкаРедактироватьКИВДиалоге);
	
	ПрочитатьСостояние();
	ОбновитьСвойства();
	ОбновитьКатегории();
	
	События.Отбор.КонтактноеЛицо.Значение                            = Ссылка;
	События.Отбор.КонтактноеЛицо.Использование                       = Истина;
	ЭлементыФормы.События.НастройкаОтбора.КонтактноеЛицо.Доступность = Ложь;
	События.Отбор.Контрагент.Использование                           = Ложь;
	ЭлементыФормы.События.НастройкаОтбора.Контрагент.Доступность     = Истина;
	
	ВидимостьЗакладкиСобытия();
	
КонецПроцедуры // ПриОткрытии()

// Обработчик события ОбработкаЗаписиНовогоОбъекта формы.
//
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Если ТипЗнч(Объект) = Тип("ПланВидовХарактеристикОбъект.СвойстваОбъектов") Тогда
		Свойства.ПроверитьДобавитьНовоеСвойство(Объект.Ссылка, ЭлементыФормы.Свойства);
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.КатегорииОбъектов") Тогда
		Категории.ПроверитьДобавитьНовуюКатегорию(Объект.Ссылка, ЭлементыФормы.Категории);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаписиНовогоОбъекта()

// Обработчик события ПриИзмененииДанных
//
Процедура ПриИзмененииДанных()
	
	Свойства.НазначениеСвойств = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_КонтактныеЛицаКонтрагентов;
	ОбновитьСвойства();
	
	Категории.НазначениеКатегорий = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_КонтактныеЛицаКонтрагентов;
	ОбновитьКатегории();
	
КонецПроцедуры // ПриИзмененииДанных()

// Обработчик события ПриЗаписи
//
Процедура ПриЗаписи(Отказ)
	
	УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(НаборКонтактнойИнформацииЛичная, КонтактноеЛицо, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьСостояние();
	
	Если Свойства.ЗначенияСвойствМодифицированы() Тогда
		Свойства.ЗаписатьЗначенияСвойств();
		ОбновитьСвойства();
	КонецЕсли;
	
	Если Категории.ЗначенияКатегорийМодифицированы() Тогда
		Категории.ЗаписатьКатегорииОбъекта();
		ОбновитьКатегории();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсторияКонтактныхЛицКонтрагентов.КонтактноеЛицоКонтрагента
	|ИЗ
	|	РегистрСведений.ИсторияКонтактныхЛицКонтрагентов КАК ИсторияКонтактныхЛицКонтрагентов
	|ГДЕ
	|	ИсторияКонтактныхЛицКонтрагентов.КонтактноеЛицоКонтрагента = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		
		НаборЗаписей = РегистрыСведений.ИсторияКонтактныхЛицКонтрагентов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.КонтактноеЛицоКонтрагента.Использование = Истина;
		НаборЗаписей.Отбор.КонтактноеЛицоКонтрагента.Значение = Ссылка;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.КонтактноеЛицоКонтрагента = Ссылка;
		НоваяЗапись.КонтактноеЛицо = КонтактноеЛицо;
		НоваяЗапись.Контрагент = Владелец;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

// Обработчик события ПослеЗаписи.
//
Процедура ПослеЗаписи()
	
	ВидимостьЗакладкиСобытия();
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ПослеЗаписи()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА КОНТАКТНОЙ ИНФОРМАЦИИ

// Обработчик события Нажатие элемента формы КоманднаяПанельКонтактнойИнформации.РедактироватьВДиалоге.
//
Процедура КоманднаяПанельКонтактнойИнформацииРедактироватьВДиалоге(Кнопка)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияРедактироватьВДиалоге(Кнопка);
	
КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПриНачалеРедактированияОбщая(Элемент, НоваяСтрока, мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы КонтактнаяИнформация.Представление.
//
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРедактирования = Обработки.РедактированиеКонтактнойИнформации.Создать();
	ОбработкаРедактирования.ДоступностьОбъекта = Ложь;
	ОбработкаРедактирования.РедактироватьЗапись(ЭлементыФормы.КонтактнаяИнформация.ТекущиеДанные, , ЭтаФорма);
	
КонецПроцедуры

// Обработчик события Очистка элемента формы КонтактнаяИнформация,Тип.
//
Процедура КонтактнаяИнформацияТипОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияВидНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, ЭлементыФормы.КонтактнаяИнформация.ТекущиеДанные.Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Ссылка));
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияВидПриИзменении(Элемент)
	
	Если Элемент.Значение = Неопределено Тогда
		Элемент.Значение = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли; 
	
	мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ = Элемент.Значение;
	
КонецПроцедуры

// Обработчик события АвтоПодборТекста элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияВидАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", ЭлементыФормы.КонтактнаяИнформация.ТекущиеДанные.Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Ссылка)), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецПроцедуры

// Обработчик события ОкончаниеВводаТекста элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияВидОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", ЭлементыФормы.КонтактнаяИнформация.ТекущиеДанные.Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Ссылка)), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаПоискаПоСтрокеВидаКИ, мТекстПоискаПоСтрокеВидаКИ, мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ);
	
КонецПроцедуры

// Обработчик события ПередОкончаниемРедактирования элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПередОкончаниемРедактированияОбщая(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ, мТекстПоискаПоСтрокеВидаКИ, мОбработкаПоискаПоСтрокеВидаКИ);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы КонтактнаяИнформация.Представление.
//
Процедура КонтактнаяИнформацияПредставлениеПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПредставлениеПриИзмененииОбщая(Элемент, ЭлементыФормы.КонтактнаяИнформация);
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельКонтактнойИнформации.УстановитьОсновным.
//
Процедура КоманднаяПанельКонтактнойИнформацииУстановитьОсновным(Кнопка)
	
	УправлениеКонтактнойИнформацией.УстановитьЗаписьОсновной(НаборКонтактнойИнформации, ЭлементыФормы.КонтактнаяИнформация, Кнопка);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПриАктивизацииСтроки(Элемент)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПриАктивизацииСтрокиТаблицы(Элемент, ЭлементыФормы.КоманднаяПанельКонтактнаяИнформация.Кнопки.УстановитьОсновным);
	
КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПередУдалением(Элемент, Отказ)

	УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	УправлениеКонтактнойИнформацией.УдалитьЗаписьКонтактнойИнформации(Элемент, Отказ);
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПередНачаломДобавленияОбщее(Элемент, Отказ, Копирование, мКнопкаРедактироватьКИВДиалоге, ЭлементыФормы.КонтактнаяИнформация, НаборКонтактнойИнформации, Ложь, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияПередНачаломИзменения(Элемент, Отказ)
	
	УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПередНачаломИзмененияОбщее(Элемент, Отказ, мКнопкаРедактироватьКИВДиалоге, Ложь, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы КонтактнаяИнформация.Тип.
//
Процедура КонтактнаяИнформацияТипПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияТипПриИзмененииОбщее(Элемент, ЭлементыФормы.КонтактнаяИнформация);
	
КонецПроцедуры

Процедура КоманднаяПанельКонтактнаяИнформацияПереместитьВсписокЛичные(Кнопка)
	
	Если ЭлементыФормы.КонтактнаяИнформация.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запись = ЭлементыФормы.КонтактнаяИнформация.ТекущиеДанные;
	
	НоваяЗапись = НаборКонтактнойИнформацииЛичная.Добавить();
	
	МетаданныеЗаписи =  НаборКонтактнойИнформацииЛичная.Метаданные();
	
	НоваяЗапись.Объект = КонтактноеЛицо;
	НоваяЗапись.Тип = Запись.Тип;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	
	Для каждого Ресурс из МетаданныеЗаписи.Ресурсы Цикл
		НоваяЗапись[Ресурс.имя] = Запись[Ресурс.Имя];
	КонецЦикла;

	Для каждого Реквизиты из МетаданныеЗаписи.Реквизиты Цикл
		НоваяЗапись[Реквизиты.имя] = Запись[Реквизиты.Имя];
	КонецЦикла;

	НаборКонтактнойИнформации.Удалить(Запись);
	
КонецПроцедуры

// Личная

// Обработчик события ПриНачалеРедактирования элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПриНачалеРедактированияОбщая(Элемент, НоваяСтрока, мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы КонтактнаяИнформация.Представление.
//
Процедура КонтактнаяИнформацияЛичнаяПредставлениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРедактирования = Обработки.РедактированиеКонтактнойИнформации.Создать();
	ОбработкаРедактирования.ДоступностьОбъекта = Ложь;
	ОбработкаРедактирования.РедактироватьЗапись(ЭлементыФормы.КонтактнаяИнформацияЛичная.ТекущиеДанные, , ЭтаФорма);
	
КонецПроцедуры

// Обработчик события Очистка элемента формы КонтактнаяИнформация,Тип.
//
Процедура КонтактнаяИнформацияЛичнаяТипОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияЛичнаяВидНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, ЭлементыФормы.КонтактнаяИнформацияЛичная.ТекущиеДанные.Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Ссылка));
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияЛичнаяВидПриИзменении(Элемент)
	
	Если Элемент.Значение = Неопределено Тогда
		Элемент.Значение = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли; 
	
	мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ = Элемент.Значение;
	
КонецПроцедуры

// Обработчик события АвтоПодборТекста элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияЛичнаяВидАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", ЭлементыФормы.КонтактнаяИнформацияЛичная.ТекущиеДанные.Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Ссылка)), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецПроцедуры

// Обработчик события ОкончаниеВводаТекста элемента формы КонтактнаяИнформация.Вид.
//
Процедура КонтактнаяИнформацияЛичнаяВидОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", ЭлементыФормы.КонтактнаяИнформацияЛичная.ТекущиеДанные.Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Ссылка)), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаПоискаПоСтрокеВидаКИ, мТекстПоискаПоСтрокеВидаКИ, мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ);
	
КонецПроцедуры

// Обработчик события ПередОкончаниемРедактирования элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПередОкончаниемРедактированияОбщая(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ, мТекстПоискаПоСтрокеВидаКИ, мОбработкаПоискаПоСтрокеВидаКИ);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы КонтактнаяИнформация.Представление.
//
Процедура КонтактнаяИнформацияЛичнаяПредставлениеПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПредставлениеПриИзмененииОбщая(Элемент, ЭлементыФормы.КонтактнаяИнформация);
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельКонтактнойИнформации.УстановитьОсновным.
//
Процедура КоманднаяПанельКонтактнойИнформацииЛичнаяУстановитьОсновным(Кнопка)
	
	УправлениеКонтактнойИнформацией.УстановитьЗаписьОсновной(НаборКонтактнойИнформацииЛичная, ЭлементыФормы.КонтактнаяИнформацияЛичная, Кнопка);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПриАктивизацииСтроки(Элемент)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПриАктивизацииСтрокиТаблицы(Элемент, ЭлементыФормы.КоманднаяПанельКонтактнаяИнформацияЛичная.Кнопки.УстановитьОсновным);
	
КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПередУдалением(Элемент, Отказ)

	УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	УправлениеКонтактнойИнформацией.УдалитьЗаписьКонтактнойИнформации(Элемент, Отказ);
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПередНачаломДобавленияОбщее(Элемент, Отказ, Копирование, мКнопкаРедактироватьКИВДиалоге, ЭлементыФормы.КонтактнаяИнформацияЛичная, НаборКонтактнойИнформацииЛичная, Ложь, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы КонтактнаяИнформация.
//
Процедура КонтактнаяИнформацияЛичнаяПередНачаломИзменения(Элемент, Отказ)
	
	УправлениеКонтактнойИнформацией.ПроизвестиПопыткуЗаблокироватьОбъект(ЭтотОбъект, ЭтаФорма);
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПередНачаломИзмененияОбщее(Элемент, Отказ, мКнопкаРедактироватьКИВДиалоге, Ложь, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы КонтактнаяИнформация.Тип.
//
Процедура КонтактнаяИнформацияЛичнаяТипПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформацией.КонтактнаяИнформацияТипПриИзмененииОбщее(Элемент, ЭлементыФормы.КонтактнаяИнформацияЛичная);
	
КонецПроцедуры

Процедура КоманднаяПанельКонтактнаяИнформацияЛичнаяПереместитьВсписокКонтрагента(Кнопка)
	
	Если ЭлементыФормы.КонтактнаяИнформацияЛичная.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запись = ЭлементыФормы.КонтактнаяИнформацияЛичная.ТекущиеДанные;
	
	НоваяЗапись = НаборКонтактнойИнформации.Добавить();
	
	МетаданныеЗаписи =  НаборКонтактнойИнформации.Метаданные();
	
	НоваяЗапись.Объект = Ссылка;
	НоваяЗапись.Тип = Запись.Тип;
	НоваяЗапись.Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	
	Для каждого Ресурс из МетаданныеЗаписи.Ресурсы Цикл
		НоваяЗапись[Ресурс.имя] = Запись[Ресурс.Имя];
	КонецЦикла;
	
	Для каждого Реквизиты из МетаданныеЗаписи.Реквизиты Цикл
		НоваяЗапись[Реквизиты.имя] = Запись[Реквизиты.Имя];
	КонецЦикла;
	
	НаборКонтактнойИнформацииЛичная.Удалить(Запись);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик нажатия пункта РедактироватьКод, подменю Действия, меню ДействияФормы
//
Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ДействияФормыРедактироватьКод()

// Обработчик события ПриВыводеСтроки элемента формы Контакты.
//
Процедура СобытияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьФлажок   = Ложь;
	ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьТекст    = Ложь;
	Если ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Завершено Тогда
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 4;
	ИначеЕсли ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Запланировано Тогда
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 6;
	ИначеЕсли ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Отменено Тогда
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 5;
	КонецЕсли; 

	ОформлениеСтроки.Ячейки.Важность.ОтображатьФлажок   = Ложь;
	ОформлениеСтроки.Ячейки.Важность.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Важность.ОтображатьТекст    = Ложь;
	Если ДанныеСтроки.Важность = Перечисления.Важность.Высокая Тогда
		ОформлениеСтроки.Ячейки.Важность.ИндексКартинки = 0;
	ИначеЕсли ДанныеСтроки.Важность = Перечисления.Важность.Низкая Тогда
		ОформлениеСтроки.Ячейки.Важность.ИндексКартинки = 1;
	КонецЕсли; 

	ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьФлажок   = Ложь;
	ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьТекст    = Истина;
	ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки     = УправлениеКонтактами.ОпределитьИндексКартинкиВидаСобытия(ДанныеСтроки.ВидСобытия,ДанныеСтроки.ТипСобытия);
	
КонецПроцедуры // СобытияПриВыводеСтроки()

// Обработчик события ПередНачаломДобавления элемента формы События.
//
Процедура СобытияПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Если Копирование Тогда
		Если Элемент.ТекущаяСтрока <> Неопределено И НЕ Элемент.ТекущаяСтрока.Пустая() Тогда
			Элемент.ТекущаяСтрока.Скопировать().ПолучитьФорму(,ЭтаФорма).Открыть();
		КонецЕсли;
	Иначе
		
		Если Элемент <> Неопределено И Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.Ссылка.Пустая() Тогда
			ВыбранныйВидСобытия = РаботаСДиалогами.ВыбратьВидНовогоСобытия(Неопределено, Элемент.ТекущиеДанные.ВидСобытия);
		Иначе
			ВыбранныйВидСобытия = РаботаСДиалогами.ВыбратьВидНовогоСобытия(Неопределено);
		КонецЕсли; 
		
		Если ВыбранныйВидСобытия = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Док = Документы.Событие.СоздатьДокумент();
			
		Док.ВидОбъекта     = Перечисления.ВидыОбъектовСобытия.Контрагент;
		Док.Контрагент     = Владелец;
		Док.ВидОбъекта     = Перечисления.ВидыОбъектовСобытия.Контрагент;
		Док.ВидСобытия     = ВыбранныйВидСобытия;
		Док.КонтактноеЛицо = Ссылка;
		
		Док.ПолучитьФорму(,ЭтаФорма).Открыть();
		
	КонецЕсли;
	
КонецПроцедуры // СобытияПередНачаломДобавления()

// Обработчик события Нажатие, элемента формы: надпись Состояние
//
Процедура СостояниеНажатие(Элемент)
	
	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		Предупреждение("Необходимо записать элемент");
		Отказ = Истина;
	КонецЕсли;

	Если Не Отказ Тогда
		ФормаСпискаРегистра = РегистрыСведений.ИсторияКонтактныхЛицКонтрагентов.ПолучитьФормуСписка(,ЭтаФорма,"КонтактноеЛицоКонтрагента"+Код);
		ФормаСпискаРегистра.РегистрСведенийСписок.Отбор.КонтактноеЛицоКонтрагента.Значение = Ссылка;
		ФормаСпискаРегистра.РегистрСведенийСписок.Отбор.КонтактноеЛицоКонтрагента.Использование = Истина;
		ФормаСпискаРегистра.Открыть();
	КонецЕсли;

КонецПроцедуры // СостояниеНажатие()

// Обработчик события ПриИзменении, элемента формы: поле ввода КонтактноеЛицо
//
Процедура КонтактноеЛицоПриИзменении(Элемент)
	
	Наименование = КонтактноеЛицо.Наименование;
	УправлениеКонтактнойИнформацией.ПрочитатьКонтактнуюИнформацию(НаборКонтактнойИнформацииЛичная, КонтактноеЛицо);
	
КонецПроцедуры // КонтактноеЛицоПриИзменении()

// Обработчик события НачалоВыбора, элемента формы: поле ввода КомментарийПросмотр
//
Процедура КомментарийПросмотрНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста");
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(Комментарий);
	ОтредактировалиТекст = ФормаРедактированияТекста.ОткрытьМодально();
	
	Если ОтредактировалиТекст = Истина Тогда
		Комментарий = ФормаРедактированияТекста.ПолучитьРедактируемыйТекст();
	КонецЕсли;
	
КонецПроцедуры // КомментарийПросмотрНачалоВыбора()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ МЕХАНИЗМА СВОЙСТВ
//

// Процедура обновляет информацию в таблице свойств объекта.
//
Процедура ОбновитьСвойства()

	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли; 
	
	Свойства.ОбъектОтбораЗначений   = Ссылка;
	Свойства.ОбъектОтбораНазначений = Ссылка;
	
	Свойства.ПрочитатьЗаполнитьСвойстваИЗначения();

КонецПроцедуры // ОбновитьСвойства()

// Обработчик события ПередНачаломДобавления элемента формы Свойства.
//
Процедура СвойстваПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;
	
	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Свойства.ОткрытьФормуНовогоСвойства(ЭтаФорма, Элемент, Копирование);

КонецПроцедуры // СвойстваПередНачаломДобавления()

// Обработчик события ПередУдалением элемента формы Свойства.
//
Процедура СвойстваПередУдалением(Элемент, Отказ)

	Отказ = Истина;

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	Свойства.ИнвертироватьПометкуУдаленияСвойства(Элемент.ТекущиеДанные);

КонецПроцедуры // СвойстваПередУдалением()

// Обработчик события ПриНачалеРедактирования элемента формы Свойства.
//
Процедура СвойстваПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Свойства.ПривестиТипЗначенияСвойства(Элемент.ТекущиеДанные, Элемент.Колонки.Значение.ЭлементУправления);

КонецПроцедуры // СвойстваПриНачалеРедактирования()

// Обработчик события ПриВыводеСтроки элемента формы Свойства.
//
Процедура СвойстваПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Свойства.ПриВыводеСтрокиСвойствИЗначений(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры // СвойстваПриВыводеСтроки()

// Обработчик события ПриИзменении элемента формы Свойства.Значение.
//
Процедура СвойстваЗначениеПриИзменении(Элемент)

	Модифицированность = Истина;

КонецПроцедуры // СвойстваЗначениеПриИзменении(

// Обработчик события Очистка элемента формы Свойства.Значение.
//
Процедура СвойстваЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭлементыФормы.Свойства.ТекущиеДанные.Значение = Неопределено;
	
	Свойства.ПривестиТипЗначенияСвойства(ЭлементыФормы.Свойства.ТекущиеДанные, Элемент);
	
	Модифицированность = Истина;
	
КонецПроцедуры // СвойстваЗначениеОчистка()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ МЕХАНИЗМА КАТЕГОРИЙ
//

// Процедура обновляет информацию в таблице категорий объекта.
//
Процедура ОбновитьКатегории()
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Категории.ОбъектОтбораКатегорий = Ссылка;
	
	Категории.ПрочитатьЗаполнитьКатегорииОбъекта();
	
КонецПроцедуры // ОбновитьКатегории()

// Обработчик события ПередНачаломДобавления элемента формы Категории.
//
Процедура КатегорииПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	Категории.ОткрытьФормуНовойКатегории(ЭтаФорма);

КонецПроцедуры // КатегорииПередНачаломДобавления()

// Обработчик события ПередУдалением элемента формы Категории.
//
Процедура КатегорииПередУдалением(Элемент, Отказ)

	Отказ = Истина;

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	Категории.ИнвертироватьПометкуУдаленияКатегории(Элемент.ТекущиеДанные);

КонецПроцедуры // КатегорииПередУдалением()

// Обработчик события ПриВыводеСтроки элемента формы Категории.
//
Процедура КатегорииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.ПометкаУдаления.Видимость Тогда
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ОтображатьТекст    = Ложь;
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ИндексКартинки     = Число(ДанныеСтроки.ПометкаУдаления);
	КонецЕсли;

	Если Элемент.Колонки.Принадлежность.Видимость Тогда
		ОформлениеСтроки.Ячейки.Принадлежность.ОтображатьФлажок    = Истина;
	КонецЕсли;

КонецПроцедуры // КатегорииПриВыводеСтроки()

// Обработчик события ПриИзмененииФлажка элемента формы Категории.
//
Процедура КатегорииПриИзмененииФлажка(Элемент, Колонка)

	Модифицированность = Истина;

КонецПроцедуры // КатегорииПриИзмененииФлажка()

мОбработкаПоискаПоСтрокеВидаКИ                 = Ложь;
мТекстПоискаПоСтрокеВидаКИ                     = "";
мПоследнееЗначениеЭлементаПоискаПоСтрокеВидаКИ = Неопределено;

События.Колонки.Добавить("ТипСобытия");
