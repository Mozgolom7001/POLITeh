
Перем мНаборЗаписейДокументаУдостоверяющегоЛичность;

Процедура ОбновитьНадписьУдостоверенияЛичности()
	
	Паспорт = РегистрыСведений.ПаспортныеДанныеФизЛиц.ПолучитьПоследнее(, Новый Структура("ФизЛицо", КонтактноеЛицо.Ссылка));
	УдостоверениеЛичности = "" + Паспорт.ДокументВид + ", серия: " + Паспорт.ДокументСерия + ", № " + Паспорт.ДокументНомер 
							+ ", выдан: " + Формат(Паспорт.ДокументДатаВыдачи,"ДФ='дд ММММ гггг'; ДП='Не указано'") + " года, " 
							+ Паспорт.ДокументКемВыдан + ", № подр. " + Паспорт.ДокументКодПодразделения;
	Если УдостоверениеЛичности = ", серия: , № , выдан: Не указано года, , № подр. " Тогда
		УдостоверениеЛичности = "Ввести данные об удостоверении личности";
	Иначе
		УдостоверениеЛичности = СтрЗаменить(УдостоверениеЛичности,"Не указано","...");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеИзКонтактногоЛица()
	
	ВыбраноКонтактноеЛицо = ЗначениеЗаполнено(КонтактноеЛицо);
	
	Если ВыбраноКонтактноеЛицо Тогда
		Фамилия                     = КонтактноеЛицо.Фамилия;
		Имя                         = КонтактноеЛицо.Имя;
		Отчество                    = КонтактноеЛицо.Отчество;
		
		ДатаРождения                = КонтактноеЛицо.ДатаРождения;
		Пол                         = КонтактноеЛицо.Пол;
		НапоминатьОДнеРождения      = КонтактноеЛицо.НапоминатьОДнеРождения;
		КоличествоДнейДоНапоминания = КонтактноеЛицо.КоличествоДнейДоНапоминания;
		
		СрезПаспортныхДанных = РегистрыСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(,Новый Структура("ФизЛицо",КонтактноеЛицо));
		Если СрезПаспортныхДанных.Количество() > 0 тогда
			ЗаписьНабора = мНаборЗаписейДокументаУдостоверяющегоЛичность[0];
			ЗаписьНабора.Период                             = СрезПаспортныхДанных[0].Период;
			ЗаписьНабора.Физлицо                            = СрезПаспортныхДанных[0].Физлицо;
			ЗаписьНабора.ДатаРегистрацииПоМестуЖительства   = СрезПаспортныхДанных[0].ДатаРегистрацииПоМестуЖительства;
			ЗаписьНабора.ДокументВид                        = СрезПаспортныхДанных[0].ДокументВид;
			ЗаписьНабора.ДокументДатаВыдачи                 = СрезПаспортныхДанных[0].ДокументДатаВыдачи;
			ЗаписьНабора.ДокументКемВыдан                   = СрезПаспортныхДанных[0].ДокументКемВыдан;
			ЗаписьНабора.ДокументКодПодразделения           = СрезПаспортныхДанных[0].ДокументКодПодразделения;
			ЗаписьНабора.ДокументНомер                      = СрезПаспортныхДанных[0].ДокументНомер;
			ЗаписьНабора.ДокументСерия                      = СрезПаспортныхДанных[0].ДокументСерия;
		КонецЕсли;
	Иначе
		Фамилия                     = "";
		Имя                         = "";
		Отчество                    = "";
		
		ДатаРождения                = "";
		Пол                         = Перечисления.ПолФизическихЛиц.ПустаяСсылка();
		НапоминатьОДнеРождения      = Ложь;
		КоличествоДнейДоНапоминания = 0;
	КонецЕсли;
	
	ЭлементыФормы.Фамилия.РедактированиеТекста               = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Имя.РедактированиеТекста                   = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Отчество.РедактированиеТекста              = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.ДатаРождения.ТолькоПросмотр                = ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Пол.ТолькоПросмотр                         = ВыбраноКонтактноеЛицо;
	ЭлементыФормы.НапоминатьОДнеРождения.Доступность         = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.КоличествоДнейДоНапоминания.ТолькоПросмотр = ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Удостоверение.ТолькоПросмотр               = ВыбраноКонтактноеЛицо;
	
КонецПроцедуры

Процедура ПроверитьНаСуществующиеКонтактныеЛица()
	
	Если НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Фамилия",Фамилия);
		Запрос.УстановитьПараметр("Имя",Имя);
		Запрос.УстановитьПараметр("Отчество",Отчество);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	КонтактныеЛица.Ссылка       КАК КонтактноеЛицо,
		|	КонтактныеЛица.Наименование КАК Наименование,
		|	КонтактныеЛица.ДатаРождения КАК ДатаРождения
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|ГДЕ
		|	КонтактныеЛица.Фамилия ПОДОБНО &Фамилия
		|	И КонтактныеЛица.Имя ПОДОБНО &Имя
		|	"+?(НЕ ЗначениеЗаполнено(Отчество),"","И КонтактныеЛица.Отчество ПОДОБНО &Отчество");
		
		Результат = Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			Ответ = Вопрос("В базе найдено существующее контактное лицо со следующими параметрами:
			|
			|Ф.И.О.: "+Результат.Наименование+"
			|Дата рождения: " + Формат(Результат.ДатаРождения,"ДФ=dd.MM.yyyy")+"
			|
			|Использовать данное контактное лицо?", РежимДиалогаВопрос.ДаНет);
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				КонтактноеЛицо = Результат.КонтактноеЛицо;
				
				ЗаполнитьДанныеИзКонтактногоЛица();
				
				ОбновитьНадписьУдостоверенияЛичности();
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдостоверениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		Вопрос = "Перед вводом паспортных данных необходимо записать элемент. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	Если Не Отказ Тогда
		
		ФормаРегистра = РегистрыСведений.ПаспортныеДанныеФизЛиц.ПолучитьФорму("ФормаЗаписи", ЭтаФорма);
		ФормаРегистра.Физлицо = КонтактноеЛицо.Ссылка;
		
		ТаблицаРегистра = РегистрыСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(, Новый Структура("ФизЛицо", КонтактноеЛицо.Ссылка));

		Если ТаблицаРегистра.Количество() > 0 Тогда
			
			ФормаРегистра.Период   				   = ТаблицаРегистра[0].Период;
			ФормаРегистра.ДокументВид 			   = ТаблицаРегистра[0].ДокументВид;
			ФормаРегистра.ДокументСерия 		   = ТаблицаРегистра[0].ДокументСерия;
			ФормаРегистра.ДокументНомер			   = ТаблицаРегистра[0].ДокументНомер;
			ФормаРегистра.ДокументДатаВыдачи       = ТаблицаРегистра[0].ДокументДатаВыдачи;
			ФормаРегистра.ДокументКемВыдан         = ТаблицаРегистра[0].ДокументКемВыдан;
			ФормаРегистра.ДокументКодПодразделения = ТаблицаРегистра[0].ДокументКодПодразделения;
			
		Иначе
			ФормаРегистра.Период = '19000101';
		КонецЕсли;
		
		ФормаРегистра.Открыть();
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФорму"
		И (Источник = КонтактноеЛицо.Ссылка 
		ИЛИ (ТипЗнч(Источник) = Тип("СправочникСсылка.КонтактныеЛица") И Источник.Пустая())) Тогда
		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;

		Если ИмяОбновляемогоЭлемента = "УдостоверениеЛичности" Тогда
			ОбновитьНадписьУдостоверенияЛичности();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбновитьНадписьУдостоверенияЛичности();
	ДоступностьДанныхНапоминанияОДнеРождения();
	Если ЭтоНовый() И ПустаяСтрока(Наименование) Тогда
		// Для реквизита "Наименование" необходимо присвоить значение, в целях адаптации под платформу 8.2
		// Перед записью элемента на платформе 8.2, событие ОбработкаПроверкиЗаполнения
		// отказывается от записи нового элемента.
		ФормаМодифицирована = Модифицированность;
		Наименование = "Наименование не заполнено";
		Если НЕ ФормаМодифицирована Тогда
			Модифицированность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидТелефонаКонтактногоЛицаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Телефон, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ВидТелефонаКонтактногоЛица2НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Телефон, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ВидЭлектроннойПочтыКонтактногоЛицаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ВидЭлектроннойПочтыКонтактногоЛица2НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		// новое контактное лицо
		НовоеКонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
		НовоеКонтактноеЛицо.Фамилия                     = Фамилия;
		НовоеКонтактноеЛицо.Имя                         = Имя;
		НовоеКонтактноеЛицо.Отчество                    = Отчество;
		НовоеКонтактноеЛицо.Наименование                = Фамилия + " " + Имя + " " + Отчество;
		НовоеКонтактноеЛицо.ДатаРождения                = ДатаРождения;
		НовоеКонтактноеЛицо.НапоминатьОДнеРождения      = НапоминатьОДнеРождения;
		НовоеКонтактноеЛицо.КоличествоДнейДоНапоминания = КоличествоДнейДоНапоминания;
		НовоеКонтактноеЛицо.Пол                         = Пол;
		
		Попытка
			НовоеКонтактноеЛицо.Записать();
		Исключение
			Отказ = Истина;
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
		КонтактноеЛицо = НовоеКонтактноеЛицо.Ссылка;
	КонецЕсли;
	
	Наименование = КонтактноеЛицо;
	Если ПустаяСтрока(Наименование) Тогда
		// Для реквизита "Наименование" необходимо присвоить значение, в целях адаптации под платформу 8.2
		// Перед записью элемента на платформе 8.2, событие ОбработкаПроверкиЗаполнения
		// отказывается от записи нового элемента.
		Наименование = "Наименование не заполнено";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// запись в регистр паспортных данных
	мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Физлицо = КонтактноеЛицо;
	Если ЗначениеЗаполнено(мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Период) тогда
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Физлицо.Использование   = Истина;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Физлицо.Значение        = мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Физлицо;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Период.Использование    = Истина;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Период.Значение         = мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Период;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Записать(Истина);
	КонецЕсли;
	
	НаборКонтактнойИнформации = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
	
	// Телефон контактного лица
	Если ЗначениеЗаполнено(ВидТелефонаКонтактногоЛица) И НЕ ПустаяСтрока(НомерТелефонаКонтактногоЛица) Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидТелефонаКонтактногоЛица;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Поле3  = НомерТелефонаКонтактногоЛица;
		НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаКонтактногоЛица;
		НоваяЗапись.Поле2  = КодГородаТелефонаКонтактногоЛица;
		
		УправлениеКонтактнойИнформацией.СформироватьПредставлениеТелефона(НоваяЗапись);
		
	КонецЕсли; 
	
	// Телефон 2 контактного лица
	Если ЗначениеЗаполнено(ВидТелефонаКонтактногоЛица2) И НЕ ПустаяСтрока(НомерТелефонаКонтактногоЛица2) И ВидТелефонаКонтактногоЛица2 <> ВидТелефонаКонтактногоЛица Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидТелефонаКонтактногоЛица2;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Поле3  = НомерТелефонаКонтактногоЛица2;
		НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаКонтактногоЛица2;
		НоваяЗапись.Поле2  = КодГородаТелефонаКонтактногоЛица2;
		
		УправлениеКонтактнойИнформацией.СформироватьПредставлениеТелефона(НоваяЗапись);
		
	КонецЕсли; 
	
	// Адрес электронной почты контактного лица
	Если ЗначениеЗаполнено(ВидЭлектроннойПочтыКонтактногоЛица) И НЕ ПустаяСтрока(АдресЭлектроннойПочтыКонтактногоЛица) Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидЭлектроннойПочтыКонтактногоЛица;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Представление = АдресЭлектроннойПочтыКонтактногоЛица;
		
	КонецЕсли;
	
	// Адрес электронной почты контактного лица
	Если ЗначениеЗаполнено(ВидЭлектроннойПочтыКонтактногоЛица2) И НЕ ПустаяСтрока(АдресЭлектроннойПочтыКонтактногоЛица2) И ВидЭлектроннойПочтыКонтактногоЛица2 <> ВидЭлектроннойПочтыКонтактногоЛица Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидЭлектроннойПочтыКонтактногоЛица2;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Представление = АдресЭлектроннойПочтыКонтактногоЛица2;
		
	КонецЕсли;
	
	Попытка
		НаборКонтактнойИнформации.Записать(Ложь);
	Исключение
		Отказ = Истина;
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
		Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсторияКонтактныхЛицКонтрагентов.КонтактноеЛицоКонтрагента
	|ИЗ
	|	РегистрСведений.ИсторияКонтактныхЛицКонтрагентов КАК ИсторияКонтактныхЛицКонтрагентов
	|ГДЕ
	|	ИсторияКонтактныхЛицКонтрагентов.КонтактноеЛицоКонтрагента = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		
		НаборЗаписей = РегистрыСведений.ИсторияКонтактныхЛицКонтрагентов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.КонтактноеЛицоКонтрагента.Использование = Истина;
		НаборЗаписей.Отбор.КонтактноеЛицоКонтрагента.Значение = Ссылка;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.КонтактноеЛицоКонтрагента = Ссылка;
		НоваяЗапись.КонтактноеЛицо = КонтактноеЛицо;
		НоваяЗапись.Контрагент = Владелец;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФамилияПриИзменении(Элемент)
	
	ПроверитьНаСуществующиеКонтактныеЛица();
	
КонецПроцедуры

Процедура ИмяПриИзменении(Элемент)
	
	ПроверитьНаСуществующиеКонтактныеЛица();
	
КонецПроцедуры

Процедура ОтчествоПриИзменении(Элемент)
	
	ПроверитьНаСуществующиеКонтактныеЛица();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.КонтактныеЛица") И ЗначениеЗаполнено(ЗначениеВыбора) Тогда
		КонтактноеЛицо = ЗначениеВыбора;
		ЗаполнитьДанныеИзКонтактногоЛица();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтчествоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.КонтактныеЛица.ПолучитьФормуВыбора(,ЭтаФорма);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ОтчествоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонтактноеЛицо = Справочники.КонтактныеЛица.ПустаяСсылка();
	ЗаполнитьДанныеИзКонтактногоЛица();

КонецПроцедуры

Процедура ОтчествоОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		КонтактноеЛицо.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура НомерТелефонаКонтактногоЛицаПриИзменении(Элемент)
	
	Элемент.Значение = УправлениеКонтактнойИнформацией.ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры

Процедура НомерТелефонаКонтактногоЛица2ПриИзменении(Элемент)
	
	Элемент.Значение = УправлениеКонтактнойИнформацией.ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры

Процедура ДатаРожденияПриИзменении(Элемент)
	
	Если ДатаРождения = '00010101000000' Тогда
		НапоминатьОДнеРождения = Ложь;
	КонецЕсли; 
	
	ДоступностьДанныхНапоминанияОДнеРождения();
	
КонецПроцедуры

// Процедура устанавливает свойства ReadOnly для элементоф формы, относящихся к дате рождения контактного
// лица и напоминаниям о дне рождения
//
// Параметры
//  НЕТ
//
// Возвращаемые значения
//  НЕТ
//
Процедура ДоступностьДанныхНапоминанияОДнеРождения()

	Если ДатаРождения = '00010101000000' Тогда
	
		ЭлементыФормы.НапоминатьОДнеРождения.Доступность      = Ложь;
		ЭлементыФормы.КоличествоДнейДоНапоминания.Доступность = Ложь;
		ЭлементыФормы.НадписьДней.Доступность                 = Ложь;
		
	Иначе
		
		ЭлементыФормы.НапоминатьОДнеРождения.Доступность      = Истина;
		ЭлементыФормы.КоличествоДнейДоНапоминания.Доступность = НапоминатьОДнеРождения;
		ЭлементыФормы.НадписьДней.Доступность                 = НапоминатьОДнеРождения;
		
	КонецЕсли; 

КонецПроцедуры

Процедура НапоминатьОДнеРожденияПриИзменении(Элемент)
	
	ДоступностьДанныхНапоминанияОДнеРождения();
	
КонецПроцедуры


мНаборЗаписейДокументаУдостоверяющегоЛичность = РегистрыСведений.ПаспортныеДанныеФизЛиц.СоздатьНаборЗаписей();
мНаборЗаписейДокументаУдостоверяющегоЛичность.Добавить();
