Перем мВопросыПриЗакрытии;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события "Нажатие" кнопки "ОК".
//
Процедура КнопкаВыполнитьНажатие(Кнопка)

	мВопросыПриЗакрытии = Ложь;
	ВладелецФормы.СохранитьНастройкуАвтоматически();
	Закрыть(Истина);

КонецПроцедуры // КнопкаВыполнитьНажатие()

// Обработчик события "Нажатие" кнопки "НастройкиПоУмолчанию" в нижней командной панели.
//
Процедура ОсновныеДействияФормыОсновныеДействияФормыНастройкиПоУмолчанию(Кнопка)

	Ответ = Вопрос("Восстановить настройки по умолчанию?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВладелецФормы.ТаблицаСтраниц = Неопределено;
		ВладелецФормы.ТаблицаРеквизитов = Неопределено;
		ВладелецФормы.ТаблицаЦенНоменклатуры = Неопределено;
		ВладелецФормы.ТаблицаСтраницНастройки = Неопределено;

		ВладелецФормы.ОбновитьСохраненныеНастройки();
		ВладелецФормы.УдалитьСтраницыФормыНастройки();
		ТаблицаСтраниц = ВладелецФормы.ТаблицаСтраницНастройки;
		ТаблицаРеквизитов = ВладелецФормы.ТаблицаРеквизитов;
		ТаблицаЦенНоменклатуры = ВладелецФормы.ТаблицаЦенНоменклатуры;

		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры // ОсновныеДействияФормыОсновныеДействияФормыНастройкиПоУмолчанию()

// Обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если мВопросыПриЗакрытии И Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			ВладелецФормы.ОбновитьНастройки();
			Закрыть(Истина);
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			Закрыть();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ СТРАНИЦЫ "НАСТРОЙКА СТРАНИЦ".

// Обработчик события "Нажатие" кнопки "ОтметитьВсеСтраницы" в командной панели настройки страниц.
//
Процедура КоманднаяПанельНастройкаСтраницДействиеОтметитьВсеСтраницы(Кнопка)

	ТаблицаСтраниц.ЗаполнитьЗначения(Истина, "Видимость");

КонецПроцедуры // КоманднаяПанельНастройкаСтраницДействиеОтметитьВсеСтраницы()

// Обработчик события "Нажатие" кнопки "СнятьВсеСтраницы" в командной панели настройки страниц.
//
Процедура КоманднаяПанельНастройкаСтраницДействиеСнятьВсеСтраницы(Кнопка)

	ТаблицаСтраниц.ЗаполнитьЗначения(Ложь, "Видимость");

КонецПроцедуры // КоманднаяПанельНастройкаСтраницДействиеСнятьВсеСтраницы()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ СТРАНИЦЫ "НАСТРОЙКА ОБЯЗАТЕЛЬНЫХ РЕКВИЗИТОВ".

// Обработчик события "ПриИзмененииФлажка" ТЧ "ТаблицаРеквизитов".
//
Процедура ТаблицаРеквизитовПриИзмененииФлажка(Элемент, Колонка)

	ТекущаяСтрока = Элемент.ТекущиеДанные;

	Если Не ТекущаяСтрока.Доступность Тогда
		ТекущаяСтрока.Обязательность = Ложь;
	КонецЕсли;

КонецПроцедуры // ТаблицаРеквизитовПриИзмененииФлажка()

// Обработчик события "ПриПриВыводеСтроки" ТЧ ТаблицаРеквизитов.
//
Процедура ТаблицаРеквизитовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	// Доступность флажка "Обязательность" в строке.
	Если ДанныеСтроки.Доступность И Не мСписокВозможныхРеквизитов[ДанныеСтроки.Имя] Тогда
		ОформлениеСтроки.Ячейки.Обязательность.ТолькоПросмотр = Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.Обязательность.ТолькоПросмотр = Истина;
	КонецЕсли;

	// Доступность флажка "Уникальность" в строке.
	Если ДанныеСтроки.Доступность И мРеквизитыКонтрольУникальности[ДанныеСтроки.Имя] <> Неопределено Тогда
		ОформлениеСтроки.Ячейки.Уникальность.ТолькоПросмотр = Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.Уникальность.ТолькоПросмотр = Истина;
	КонецЕсли;

КонецПроцедуры // ТаблицаРеквизитовПриВыводеСтроки()

// Обработчик события "Нажатие" кнопки "ОтметитьВсеДоступные" в командной панели настройки реквизитов.
//
Процедура НастройкаДоступныхРеквизитовОтметитьВсе(Кнопка)

	ТаблицаРеквизитов.ЗаполнитьЗначения(Истина, "Доступность");

КонецПроцедуры // НастройкаДоступныхРеквизитовОтметитьВсе()

// Обработчик события "Нажатие" кнопки "СнятьВсеДоступные" в командной панели настройки реквизитов.
//
Процедура НастройкаДоступныхРеквизитовСнятьВсе(Кнопка)

	ТаблицаРеквизитов.ЗаполнитьЗначения(Ложь, "Доступность, Обязательность");

КонецПроцедуры // НастройкаДоступныхРеквизитовСнятьВсе()

// Обработчик события "Нажатие" кнопки "ОтметитьВсеОбязательные" в командной панели настройки реквизитов.
//
Процедура НастройкаОбязательныхРеквизитовОтметитьВсе(Кнопка)

	Для Каждого Реквизит Из ТаблицаРеквизитов Цикл
		Если Реквизит.Доступность И Не мСписокВозможныхРеквизитов[Реквизит.Имя] Тогда
			Реквизит.Обязательность = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // НастройкаОбязательныхРеквизитовОтметитьВсе()

// Обработчик события "Нажатие" кнопки "СнятьВсеОбязательные" в командной панели настройки реквизитов.
//
Процедура НастройкаОбязательныхРеквизитовСнятьВсе(Кнопка)

	ТаблицаРеквизитов.ЗаполнитьЗначения(Ложь, "Обязательность");

КонецПроцедуры // НастройкаОбязательныхРеквизитовСнятьВсе()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ СТРАНИЦЫ "НАСТРОЙКА ЦЕН НОМЕНКЛАТУРЫ".

// Обработчик события "ПриПриВыводеСтроки" ТЧ ТаблицаЦенНоменклатуры.
//
Процедура ТаблицаЦенНоменклатурыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	// Доступность флажка "Обязательность" в строке.
	Если ДанныеСтроки.Доступность Тогда
		ОформлениеСтроки.Ячейки.Обязательность.ТолькоПросмотр = Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.Обязательность.ТолькоПросмотр = Истина;
	КонецЕсли;

КонецПроцедуры // ТаблицаЦенНоменклатурыПриВыводеСтроки()

// Обработчик события "ПриИзмененииФлажка" ТЧ ТаблицаЦенНоменклатуры.
//
Процедура ТаблицаЦенНоменклатурыПриИзмененииФлажка(Элемент, Колонка)

	ТекущаяСтрока = ЭлементыФормы.ТаблицаЦенНоменклатуры.ТекущиеДанные;

	Если Колонка.Имя = "Доступность" Тогда
		Если Не ТекущаяСтрока.Доступность Тогда
			ТекущаяСтрока.Обязательность = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ТаблицаЦенНоменклатурыПриИзмененииФлажка()

// Обработчик события "Нажатие" кнопки "ОтметитьВсеДоступные" в командной панели настройки цен.
//
Процедура НастройкаДоступныхТиповЦенОтметитьВсе(Кнопка)

	ТаблицаЦенНоменклатуры.ЗаполнитьЗначения(Истина, "Доступность");

КонецПроцедуры // НастройкаДоступныхТиповЦенОтметитьВсе()

// Обработчик события "Нажатие" кнопки "СнятьВсеДоступные" в командной панели настройки цен.
//
Процедура НастройкаДоступныхТиповЦенСнятьВсе(Кнопка)

	ТаблицаЦенНоменклатуры.ЗаполнитьЗначения(Ложь, "Доступность, Обязательность");

КонецПроцедуры // НастройкаДоступныхТиповЦенСнятьВсе()

// Обработчик события "Нажатие" кнопки "ОтметитьВсеОбязательные" в командной панели настройки цен.
//
Процедура НастройкаОбязательныхТиповЦенОтметитьВсе(Кнопка)

	Для Каждого ТипЦен Из ТаблицаЦенНоменклатуры Цикл
		Если ТипЦен.Доступность Тогда
			ТипЦен.Обязательность = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // НастройкаОбязательныхТиповЦенОтметитьВсе()

// Обработчик события "Нажатие" кнопки "СнятьВсеОбязательные" в командной панели настройки цен.
//
Процедура НастройкаОбязательныхТиповЦенСнятьВсе(Кнопка)

	ТаблицаЦенНоменклатуры.ЗаполнитьЗначения(Ложь, "Обязательность");

КонецПроцедуры // НастройкаОбязательныхТиповЦенСнятьВсе()

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Заголовок = "Настройка формы элемента Номенклатура";

КонецПроцедуры // ПриОткрытии()

// Обработчик события "Нажатие" кнопки "СохранитьНастройки".
//
Процедура КоманднаяПанельФормаНастройкиСохранитьНастройки(Кнопка)

	ВладелецФормы.СохранитьНастройки();

КонецПроцедуры // КоманднаяПанельФормаНастройкиСохранитьНастройки()

// Обработчик события "Нажатие" кнопки "ВосстановитьНастройки".
//
Процедура КоманднаяПанельФормаНастройкиВосстановитьНастройки(Кнопка)

	ВладелецФормы.ВосстановитьНастройки(,ЭтаФорма);

КонецПроцедуры // КоманднаяПанельФормаНастройкиВосстановитьНастройки()

мВопросыПриЗакрытии = Истина;