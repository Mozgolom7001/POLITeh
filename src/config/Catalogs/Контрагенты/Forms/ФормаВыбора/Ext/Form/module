
Перем мКнопкаПереключенияРежимов;

// объект для поиска данных
Перем мПоискОбъектовВСпискахДанных;

// Хранит значение функциональной опции "ИспользоватьОбменЭД"
Перем мИспользоватьОбменЭД;

// Процедура изменяет режим отображения списков выбора.
//
Процедура УстановитьРежимОтображенияСписка()

	Если мКнопкаПереключенияРежимов.Пометка Тогда
		ЭлементыФормы.ПанельТабличныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельТабличныхПолей.Страницы.СписокВыбораПоПользователю;
		ЭлементыФормы.ДействияФормы.ИсточникДействий = ЭлементыФормы.СправочникСписокПоПользователю;
	Иначе
		ЭлементыФормы.ПанельТабличныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельТабличныхПолей.Страницы.СписокВыбора;
		ЭлементыФормы.ДействияФормы.ИсточникДействий = ЭлементыФормы.СправочникСписок;
	КонецЕсли;
	ЭлементыФормы.ДействияФормы.ЦветФона = ЦветаСтиля.ЦветФонаКнопки;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события формы "ПриОткрытии".
//
Процедура ПриОткрытии()

	Если УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОткрыватьФормуВыбораСправочникаКонтрагентыСОтборомПоТекущемуПользователю") Тогда
		мКнопкаПереключенияРежимов.Пометка = Истина;
	КонецЕсли;
	
	СправочникСписокПоПользователю.Отбор.ОсновнойМенеджерПокупателя.Использование = Истина;
	СправочникСписокПоПользователю.Отбор.ОсновнойМенеджерПокупателя.ВидСравнения  = ВидСравнения.Равно;
	СправочникСписокПоПользователю.Отбор.ОсновнойМенеджерПокупателя.Значение      = глЗначениеПеременной("глТекущийПользователь");
	ЭлементыФормы.СправочникСписокПоПользователю.НастройкаОтбора.ОсновнойМенеджерПокупателя.Доступность = Ложь;
	
	УстановитьРежимОтображенияСписка();
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные <> Неопределено
	   И ЗначениеЗаполнено(ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка)
	   И НЕ ЭлементыФормы.СправочникСписок.ТекущиеДанные.ЭтоГруппа Тогда
		ЭлементыФормы.СправочникСписокПоПользователю.ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
	КонецЕсли; 

КонецПроцедуры

// Процедура - обработчик события формы "ПередОткрытием".
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мПоискОбъектовВСпискахДанных.ЗаполнитьСписокЗначенийОтборовДанных(ЭлементыФормы.ТипПоискаДанных.СписокВыбора);
	мПоискОбъектовВСпискахДанных.ВосстановитьНастройки(ЭлементыФормы.ТипПоискаДанных);
	мПоискОбъектовВСпискахДанных.ВосстановитьСписокОтбораДанных();
	
	мКнопкаПереключенияРежимов = ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ОтборПоМенеджеру;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик события "Нажатие" элемента формы "ДействияФормы.ОтборПоМенеджеру".
//
Процедура ДействияФормыОтборПоМенеджеру(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	
	УстановитьРежимОтображенияСписка();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "Выбор" элемента формы "СправочникСписокПоПользователю".
//
Процедура СправочникСписокПоПользователюВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриПолученииДанных" элементов формы "СправочникСписок" и "СправочникСписокПоПользователю"
//
Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	// ЭлектронныеДокументы
	ЭлектронныеДокументыПереопределяемый.УстановитьСтатусПодключенияК1СЭДО(Элемент, ОформленияСтрок);
	// Конец ЭлектронныеДокументы
КонецПроцедуры

// Обработчик события ОбработкаОповещения формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗакрытиеФормыПоиска"
		И Источник = ЭтаФорма Тогда
		
		// обновляем выпадающий список настроек отбора данных
		мПоискОбъектовВСпискахДанных.ЗаполнитьСписокЗначенийОтборовДанных(ЭлементыФормы.ТипПоискаДанных.СписокВыбора);
	
	КонецЕсли;
    		
КонецПроцедуры

// при закрытии формы
Процедура ПриЗакрытии()
	
	мПоискОбъектовВСпискахДанных.СохранитьНастройки();
	
КонецПроцедуры

//УНИВЕРСАЛЬНЫЙ ПОИСК ОБЪЕКТОВ
///////////////////////////////////////////////////////////////////////////////

// Процедура - обработчик события ПриИзменении элемента управления ЗначениеОтбораСпискаКонтрагентов.
//
Процедура ЗначениеОтбораСпискаКонтрагентовПриИзменении(Элемент)
	
	мПоискОбъектовВСпискахДанных.ЗначениеОтбораПоискаданныхПриИзменении(Элемент, ЗначениеОтбораСпискаКонтрагентов);
				
КонецПроцедуры

// Процедура - обработчик события АвтоПодборТекста элемента управления ЗначениеОтбораСпискаКонтрагентов.
//
Процедура ЗначениеОтбораСпискаКонтрагентовАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	мПоискОбъектовВСпискахДанных.АвтоПодборТекстаПоиска(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
			
КонецПроцедуры

Процедура ТипПоискаДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	// обработка выбора элемента из списка
	мПоискОбъектовВСпискахДанных.ОбработатьВыборТипаОграниченияИзСписка(ЭтаФорма, Элемент, ВыбранноеЗначение, 
		СтандартнаяОбработка, ЗначениеОтбораСпискаКонтрагентов);
	
КонецПроцедуры

// кнопка открытия настройки
Процедура ТипПоискаДанныхОткрытие(Элемент, СтандартнаяОбработка)
	
	мПоискОбъектовВСпискахДанных.НастройкаОтбораДанныхОткрытие(ЗначениеОтбораСпискаКонтрагентов, Элемент, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры


мПоискОбъектовВСпискахДанных = МодульПоискаВДанных.СоздатьОбъектПоискаДанныхДляКонтрагентов(ЭлементыФормы.ЗначениеОтбораСпискаКонтрагентов, 
	ЭлементыФормы.СправочникСписок, СправочникСписок);

мИспользоватьОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");

