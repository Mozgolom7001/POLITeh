////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ТекущийРаздел;

//Хранит область"R1C1" пустого табличного документа в качестве образца
Перем мОбластьОбразцовойЯчейки;

// Списки обязательных вопросов для проверки
Перем СписокОбязательныхВопросовФизическиеЛица;
Перем СписокОбязательныхВопросовКонтактныеЛица;
Перем СписокОбязательныхВопросовКонтрагенты;

Перем ЕстьФизическиеЛица;
Перем ЕстьКонтрагенты;
Перем ЕстьКонтактныеЛица;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура очищает макет печатной формы анкеты
//
Процедура ОчиститьМакет(ДокументМакет)
	
	ТекстВопроса = "Макет будет очищен. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокументМакет.Очистить();
	КонецЕсли;
	
КонецПроцедуры // ОчиститьМакет()

Функция ПроверкаПравильностиЗаполненияАнкеты(ВыводитьСообщения = Истина)
	
	ОбнаруженыОшибки = Ложь;
	
	Если ЗагружатьОбъекты и НЕ ЗначениеЗаполнено(ВидСправочникаДляЗагрузки) тогда
		Если ВыводитьСообщения тогда
			Сообщить("Для анкеты, загружаемой в справочники, обязательно надо указать в какой именно справочник следует загружать данные.");
		КонецЕсли;
		ОбнаруженыОшибки = Истина;
	КонецЕсли;
	
	Если ЗагружатьОбъекты Тогда
		ВидОбъектаКИ = Новый Соответствие;
		
		Если ЕстьФизическиеЛица Тогда
			ВидОбъектаКИ.Вставить(Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица,	Перечисления.ВидыОбъектовКонтактнойИнформации.ФизическиеЛица);
			
			Если ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица Тогда
				Для Каждого ОбязательныйВопрос Из СписокОбязательныхВопросовФизическиеЛица Цикл
					Если ОбязательныйВопрос.Значение > ВопросыАнкеты.Количество() Тогда
						Прервать;
					КонецЕсли;
					ТекущийВопрос = ВопросыАнкеты[ОбязательныйВопрос.Значение-1].Вопрос;
					Если СписокОбязательныхВопросовФизическиеЛица.Получить(ТекущийВопрос) <> ОбязательныйВопрос.Значение Тогда
						Если ВыводитьСообщения Тогда
							ОбщегоНазначения.СообщитьОбОшибке("Вопрос №" + ОбязательныйВопрос.Значение + " в анкете должен быть " + ОбязательныйВопрос.Ключ);
						КонецЕсли;
						ОбнаруженыОшибки = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьКонтактныеЛица Тогда
			ВидОбъектаКИ.Вставить(Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты,		Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты);
			
			Если ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица Тогда
				Для Каждого ОбязательныйВопрос Из СписокОбязательныхВопросовКонтактныеЛица Цикл
					Если ОбязательныйВопрос.Значение > ВопросыАнкеты.Количество() Тогда
						Прервать;
					КонецЕсли;
					ТекущийВопрос = ВопросыАнкеты[ОбязательныйВопрос.Значение-1].Вопрос;
					Если СписокОбязательныхВопросовКонтактныеЛица.Получить(ТекущийВопрос) <> ОбязательныйВопрос.Значение Тогда
						Если ВыводитьСообщения Тогда
							ОбщегоНазначения.СообщитьОбОшибке("Вопрос №" + ОбязательныйВопрос.Значение + " в анкете должен быть " + ОбязательныйВопрос.Ключ);
						КонецЕсли;
						ОбнаруженыОшибки = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьКонтрагенты Тогда
			ВидОбъектаКИ.Вставить(Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты,	Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты);
			
			Если ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты Тогда
				Для Каждого ОбязательныйВопрос Из СписокОбязательныхВопросовКонтрагенты Цикл
					Если ОбязательныйВопрос.Значение > ВопросыАнкеты.Количество() Тогда
						Прервать;
					КонецЕсли;
					ТекущийВопрос = ВопросыАнкеты[ОбязательныйВопрос.Значение-1].Вопрос;
					Если СписокОбязательныхВопросовКонтрагенты.Получить(ТекущийВопрос) <> ОбязательныйВопрос.Значение Тогда
						Если ВыводитьСообщения Тогда
							ОбщегоНазначения.СообщитьОбОшибке("Вопрос №" + ОбязательныйВопрос.Значение + " в анкете должен быть " + ОбязательныйВопрос.Ключ);
						КонецЕсли;
						ОбнаруженыОшибки = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ЗапросСоответствиеКИ = Новый Запрос();
		
		ЗапросСоответствиеКИ.УстановитьПараметр("ТиповаяАнкета",	Ссылка);
		ЗапросСоответствиеКИ.УстановитьПараметр("ВидОбъектаКИ",		ВидОбъектаКИ[ВидСправочникаДляЗагрузки]);
		
		ЗапросСоответствиеКИ.Текст =
		"ВЫБРАТЬ
		|	ТиповыеАнкетыВопросыАнкеты.Вопрос
		|ИЗ
		|	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
		|ГДЕ
		|	ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета
		|	И ТиповыеАнкетыВопросыАнкеты.Вопрос.ВидКонтактнойИнформации.ВидОбъектаКонтактнойИнформации <> &ВидОбъектаКИ";
		
		Выборка = ЗапросСоответствиеКИ.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбщегоНазначения.СообщитьОбОшибке("Вопрос """ + Выборка.Вопрос + """ предназначен для загрузки контактной информации не в тот справочник, который указан в анкете.");
		КонецЦикла;
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ВидСправочникаДляЗагрузки) Тогда
		Если Адресная Тогда
			Если ВыводитьСообщения Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Для адресной анкеты, необходимо указать вид справочника для загрузки.");
			КонецЕсли;
			ОбнаруженыОшибки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ ОбнаруженыОшибки;
	
КонецФункции // ПроверкаПравильностиЗаполненияАнкеты()

// Процедура - обрабочик ожидания для события РазделыАнкетыПриАктивизацииСтроки
// табличного поля РазделыАнкеты
//
Процедура ОбработчикОжиданияРазделыАнкетыПриАктивизацииСтроки()
	
	Элемент = ЭлементыФормы.РазделыАнкеты;
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ТекущийРаздел = Элемент.ТекущаяСтрока.Ссылка;
		ПервыйВопросРаздела = ЭлементыФормы.ВопросыАнкеты.Значение.Найти(ТекущийРаздел, "Раздел");
		Если ПервыйВопросРаздела <> Неопределено Тогда
			Если ЭлементыФормы.ВопросыАнкеты.ТекущаяСтрока.Раздел <> Элемент.ТекущаяСтрока Тогда
				Попытка
					ЭлементыФормы.ВопросыАнкеты.ТекущаяСтрока = ПервыйВопросРаздела;
				Исключение
				КонецПопытки
			КонецЕсли;
		КонецЕсли;
		Обновить();
	КонецЕсли;
	
КонецПроцедуры // ОбработчикОжиданияРазделыАнкетыПриАктивизацииСтроки

Процедура ОбработчикОжиданияВопросыАнкетыПриАктивизацииСтроки()
	
	Элемент = ЭлементыФормы.ВопросыАнкеты;
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийРаздел <> Элемент.ТекущиеДанные.Раздел Тогда
		ТекущийРаздел = Элемент.ТекущиеДанные.Раздел;
		ЭлементыФормы.РазделыАнкеты.ТекущаяСтрока = ТекущийРаздел;
		Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// У нового элемента не может быть ссылок на Раздел в ТЧ Вопросы анкеты
	Если ЭтоНовый() Тогда
		Для Каждого Строка Из ВопросыАнкеты Цикл
			Если ЗначениеЗаполнено(Строка.Раздел) Тогда
				Строка.Раздел = Справочники.РазделыАнкеты.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//Параметры макета по умолчанию 
	ЭлементыФормы.ДокументМакет.ОтображатьСетку		= Истина;
	ЭлементыФормы.ДокументМакет.ОтображатьЗаголовки	= Истина;
	ЭлементыФормы.ДокументМакет.Автомасштаб			= Истина;
	
	//Берем образец из пустого табличного документа
	ЭлементыФормы.ДокументМакет.Очистить();
	мОбластьОбразцовойЯчейки=ЭлементыФормы.ДокументМакет.Область(1,1);

	//Загружаем макет для редактирования
	ЭлементыФормы.ДокументМакет.ВставитьОбласть(ВосстановитьМакет().Область(), ЭлементыФормы.ДокументМакет.Область(),,Ложь);
	
	ЗагружатьОбъектыДоступность();
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.РазделыАнкеты.НастройкаПорядка.Код.Доступность = Истина;
	ЭлементыФормы.РазделыАнкеты.Значение.Порядок.Установить("Код ВОЗР");
	
	Если Не ЭтоНовый() Тогда
		МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СтраницаВопросы;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)
	
	СохранитьМакет(ЭлементыФормы.ДокументМакет);
	
	// проверка заполнение полей таблицы вопросов
	Для Каждого СтрокаАнкеты из ВопросыАнкеты Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаАнкеты.Вопрос) Тогда
			Предупреждение("В строке № "+СтрокаАнкеты.НомерСтроки+" не выбран вопрос!");
			Отказ = Истина;
		КонецЕсли;
		
		Если ЕстьФизическиеЛица И ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица Тогда
			Если СписокОбязательныхВопросовФизическиеЛица.Получить(СтрокаАнкеты.Вопрос) <> Неопределено Тогда
				СтрокаАнкеты.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению;
			КонецЕсли;
			
		ИначеЕсли ЕстьКонтактныеЛица И ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица Тогда
			Если СписокОбязательныхВопросовКонтактныеЛица.Получить(СтрокаАнкеты.Вопрос) <> Неопределено Тогда
				СтрокаАнкеты.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению;
			КонецЕсли;
			
		ИначеЕсли ЕстьКонтрагенты И ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты Тогда
			Если СписокОбязательныхВопросовКонтрагенты.Получить(СтрокаАнкеты.Вопрос) <> Неопределено Тогда
				СтрокаАнкеты.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению;
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписью()

Процедура ПослеЗаписи()
	
	ПроверкаПравильностиЗаполненияАнкеты();
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры

// Процедура выводит на экран печатную форму анкеты
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	Если Модифицированность() Тогда
		ТекстВопроса = "Перед печатью необходимо записать анкету. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ЗаписатьВФорме();
			
		Иначе
			Возврат;
			
		КонецЕсли;
	КонецЕсли;

	ПечатныйДокумент = Новый ТабличныйДокумент;
	ПечатныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТиповыеАнкеты";
	// если макет еще был заполнен - сформируем его по умолчанию
	Если ЭлементыФормы.ДокументМакет.ВысотаТаблицы = 0 Тогда
		СформироватьМакет(ЭлементыФормы.ДокументМакет);
		ПечатныйДокумент.Вывести(ЭлементыФормы.ДокументМакет);
		
	Иначе
		ПечатныйДокумент.Вывести(ЭлементыФормы.ДокументМакет);
		
	КонецЕсли;
	ПечатныйДокумент.Автомасштаб = Истина;
	УниверсальныеМеханизмы.НапечататьДокумент(ПечатныйДокумент, , , "Типовая анкета "+Наименование);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтправить(Кнопка)
	
	Отказ = НЕ ПроверкаПравильностиЗаполненияАнкеты();
	Если Отказ тогда
		Сообщить("В анкете обнаружены ошибки. Рекомендуется их исправить и только после этого приступать к рассылке.");
		
	Иначе
		Если Модифицированность() тогда
			Ответ = Вопрос("Перед рассылкой необходимо сохранить внесенные изменения. Записать анкету?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да тогда
				Отказ = НЕ ЗаписатьВФорме();
				
			Иначе
				Отказ = Истина;
				
			КонецЕсли;
		КонецЕсли;
		Если Не Отказ Тогда
			ФормаСпискаДокументовРассылки = Документы.ФормированиеАнкет.ПолучитьФормуСписка();
			ФормаСпискаДокументовРассылки.Отбор.Анкета.Установить(Ссылка);
			ФормаСпискаДокументовРассылки.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОсновныеДействияФормыОтправить()

Процедура ОсновныеДействияФормыПросмотрHTML(Кнопка)
	
	Если Модифицированность() Тогда
		ТекстВопроса = "Перед просмотром необходимо записать анкету. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ЗаписатьВФорме();
			
		Иначе
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	Анкетирование.ОткрытьВложение(Ссылка);
	
КонецПроцедуры // ОсновныеДействияФормыПросмотрHTML()

// Процедура - обработчик нажатия кнопки "Очистить" панели редактирования макета печатной формы анкеты
//
Процедура КоманднаяПанельМакетаДействиеОчистить(Кнопка)
	
	ОчиститьМакет(ЭлементыФормы.ДокументМакет);
	
КонецПроцедуры // КоманднаяПанельМакетаДействиеОчистить()

// Процедура - обработчик нажатия кнопки "Заполнить" панели редактирования макета печатной формы анкеты
//
Процедура КоманднаяПанельМакетаДействиеЗаполнитьМакет(Кнопка)

	Если Модифицированность() Тогда
		ТекстВопроса = "Для автоматического заполнения макета необходимо записать анкету. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ЗаписатьВФорме();
			
		Иначе
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.ДокументМакет.Очистить();
	СформироватьМакет(ЭлементыФормы.ДокументМакет);
	Модифицированность = Истина;
	
КонецПроцедуры // КоманднаяПанельМакетаДействиеЗаполнитьМакет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ЗагружатьОбъектыДоступность()
	
	ЭлементыФормы.ЗаполнятьАнкетуДанными.Доступность	= Адресная;
	
	Если НЕ ЗагружатьОбъекты И НЕ Адресная Тогда
		ЭлементыФормы.ВидСправочникаДляЗагрузки.Доступность	= Ложь;
		Если ЗначениеЗаполнено(ВидСправочникаДляЗагрузки) Тогда
			ВидСправочникаДляЗагрузки = "";
		КонецЕсли;
		
	Иначе
		ЭлементыФормы.ВидСправочникаДляЗагрузки.Доступность	= Истина;
		Если НЕ ЗначениеЗаполнено(ВидСправочникаДляЗагрузки) Тогда
			
			Если ЕстьФизическиеЛица Тогда
				ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица;
				
			ИначеЕсли ЕстьКонтрагенты Тогда
				ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты;
				
			ИначеЕсли ЕстьКонтактныеЛица Тогда
				ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица;
				
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПросмотрHTML.Доступность = НЕ Адресная;
	
КонецПроцедуры // ЗагружатьОбъектыДоступность()

Процедура ЗагружатьОбъектыПриИзменении(Элемент)
	
	ЗагружатьОбъектыДоступность();
	
КонецПроцедуры // ЗагружатьОбъектыПриИзменении()

Процедура РазделыАнкетыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияРазделыАнкетыПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры // РазделыАнкетыПриАктивизацииСтроки()

Процедура ВопросыАнкетыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ЦветТекущегоРаздела		= Новый Цвет(-1, -1, -1);
	ЦветНЕТекущегоРаздела	= ЦветаСтиля.ЦветФонаФормы;
	Если ДанныеСтроки.Раздел = ТекущийРаздел Тогда
		ОформлениеСтроки.ЦветФона = ЦветТекущегоРаздела;
		
	Иначе
		ОформлениеСтроки.ЦветФона = ЦветНЕТекущегоРаздела;
		
	КонецЕсли;
	
	Если ОформлениеСтроки.ДанныеСтроки.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.НеОбязателенКЗаполнению тогда
		ОформлениеСтроки.Ячейки.Обязательный.Текст = "";
		
	ИначеЕсли ОформлениеСтроки.ДанныеСтроки.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению тогда
		ОформлениеСтроки.Ячейки.Обязательный.Текст = "О";
		
	ИначеЕсли ОформлениеСтроки.ДанныеСтроки.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.УсловноОбязателенКЗаполнению тогда
		ОформлениеСтроки.Ячейки.Обязательный.Текст = "У";
		
	КонецЕсли;
	
КонецПроцедуры // ВопросыАнкетыПриВыводеСтроки()

Процедура ВопросыАнкетыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияВопросыАнкетыПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры // ВопросыАнкетыПриАктивизацииСтроки()

Процедура ВопросыАнкетыПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭтоНовый() И Элемент.ТекущаяКолонка.Имя = "Раздел" тогда
		ТекстВопроса = "Перед выбором раздела необходимо записать анкету. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Записать();
			
		Иначе
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущийРаздел <> Элемент.ТекущиеДанные.Раздел тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СортироватьВопросы(Элемент)
	
	// сделаем правильную сортировку по разделам
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаЗначенийВопросов = Элемент.Значение.Выгрузить();
	НомерРедСтроки = Элемент.Значение.Индекс(Элемент.ТекущаяСтрока);
	ТаблицаЗначенийВопросов.Колонки.Добавить("НомерРаздела",	Новый ОписаниеТипов("Число"));
	ТаблицаЗначенийВопросов.Колонки.Добавить("ИндСтр",			Новый ОписаниеТипов("Число"));
	ТаблицаЗначенийВопросов.Колонки.Добавить("СтрокаТаблицы");
	Для Каждого Вопрос из ТаблицаЗначенийВопросов Цикл
		Вопрос.НомерРаздела	= Вопрос.Раздел.Код;
		ИндСтроки			= ТаблицаЗначенийВопросов.Индекс(Вопрос);
		Вопрос.ИндСтр		= ИндСтроки;
		Вопрос.СтрокаТаблицы= Элемент.Значение[ИндСтроки];
	КонецЦикла;
	
	ТаблицаЗначенийВопросов.Сортировать("НомерРаздела возр, НомерСтроки возр");
	РедактируемаяСтрока		= ТаблицаЗначенийВопросов.Найти(НомерРедСтроки, "ИндСтр");
	ИндРедактируемойСтроки	= ТаблицаЗначенийВопросов.Индекс(РедактируемаяСтрока);
	инд = 0;
	Для Каждого СтрокаПослеСортировки Из ТаблицаЗначенийВопросов Цикл
		СтарыйИндекс	= Элемент.Значение.Индекс(СтрокаПослеСортировки.СтрокаТаблицы);
		НовыйИндекс		= ТаблицаЗначенийВопросов.Индекс(СтрокаПослеСортировки);
		Смещение		= НовыйИндекс - СтарыйИндекс;
		Элемент.Значение.Сдвинуть(СтрокаПослеСортировки.СтрокаТаблицы, Смещение);
		инд = инд + 1;
	КонецЦикла;
	Элемент.ТекущаяСтрока = Элемент.Значение[ИндРедактируемойСтроки];
	
КонецПроцедуры // СортироватьВопросы()

Процедура ВопросыАнкетыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СортироватьВопросы(Элемент)
	
КонецПроцедуры // ВопросыАнкетыПриОкончанииРедактирования()

Процедура ВопросыАнкетыПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока Тогда
		ДанныеСтроки = Элемент.ТекущиеДанные;
		ДанныеСтроки.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.НеОбязателенКЗаполнению;
		
		Если ЭлементыФормы.РазделыАнкеты.ТекущиеДанные <> Неопределено Тогда
			ДанныеСтроки.Раздел = ЭлементыФормы.РазделыАнкеты.ТекущиеДанные.Ссылка;
			ТекущийРаздел = ЭлементыФормы.РазделыАнкеты.ТекущиеДанные.Ссылка;
			Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ВопросыАнкетыПриНачалеРедактирования()

Процедура РазделыАнкетыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если ЭтоНовый() тогда
		ТекстВопроса = "Перед вводом раздела необходимо записать анкету. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Записать();
			
		Иначе
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // РазделыАнкетыПередНачаломДобавления()

Процедура РазделыАнкетыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элемент.ТекущаяСтрока <> Неопределено тогда
		ТекущийРаздел = Элемент.ТекущиеДанные.Ссылка;
	КонецЕсли;
	СортироватьВопросы(ЭлементыФормы.ВопросыАнкеты);
	
КонецПроцедуры

Процедура ВопросыАнкетыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийРаздел = Строка.Раздел;
	Для Каждого СтрокаИзЗначения Из ПараметрыПеретаскивания.Значение Цикл
		СтрокаИзЗначения.Раздел = ТекущийРаздел;
	КонецЦикла;
	Обновить();
	
КонецПроцедуры // ВопросыАнкетыПеретаскивание()

Процедура РазделыАнкетыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Выбор;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // РазделыАнкетыПроверкаПеретаскивания()

Процедура РазделыАнкетыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если Строка <> Неопределено и ПараметрыПеретаскивания.Значение <> Неопределено Тогда
		Для Каждого СтрокаИзЗначения Из ПараметрыПеретаскивания.Значение Цикл
			СтрокаИзЗначения.Раздел = Строка.Ссылка;
		КонецЦикла;
	КонецЕсли;
	СортироватьВопросы(ЭлементыФормы.ВопросыАнкеты);
	
КонецПроцедуры // РазделыАнкетыПеретаскивание()

Процедура УдалитьРаздел(УдаляемыйЭлемент)
	
		ВопросРаздела		= ВопросыАнкеты.Найти(УдаляемыйЭлемент, "Раздел");
		Если ВопросРаздела <> Неопределено Тогда
			ТекстВопроса = "Вы уверены, что хотите удалить раздел """ + Строка(УдаляемыйЭлемент) + """, включая его вопросы?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.Отмена);
			Если Ответ = КодВозвратаДиалога.ОК Тогда
				СтруктураПоиска = Новый Структура("Раздел");
				СтруктураПоиска.Раздел	= УдаляемыйЭлемент;
				МассивУдаляемыхСтрок	= ВопросыАнкеты.НайтиСтроки(СтруктураПоиска);
				Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
					ВопросыАнкеты.Удалить(УдаляемаяСтрока);
				КонецЦикла;
				Если Ответ = КодВозвратаДиалога.ОК Тогда
					УдаляемыйЭлемент.ПолучитьОбъект().Удалить();
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			ТекстВопроса = "Вы уверены, что хотите удалить раздел """ + Строка(УдаляемыйЭлемент) + """?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.Отмена);
			Если Ответ = КодВозвратаДиалога.ОК Тогда
				УдаляемыйЭлемент.ПолучитьОбъект().Удалить();
			КонецЕсли;
			
		КонецЕсли;
		
КонецПроцедуры // УдалитьРаздел()

Процедура РазделыАнкетыПередУстановкойПометкиУдаления(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		УдаляемыйЭлемент = Элемент.ТекущаяСтрока.Ссылка;
		УдалитьРаздел(УдаляемыйЭлемент);
	КонецЕсли;
	
КонецПроцедуры // РазделыАнкетыПередУстановкойПометкиУдаления()

Процедура КоманднаяПанель1УдалитьРаздел(Кнопка)
	
	Если ЭлементыФормы.РазделыАнкеты.ТекущаяСтрока <> Неопределено Тогда
		УдаляемыйЭлемент = ЭлементыФормы.РазделыАнкеты.ТекущиеДанные.Ссылка;
		УдалитьРаздел(УдаляемыйЭлемент);
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанель1УдалитьРаздел()

Процедура ВопросыАнкетыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка = Элемент.Колонки.Обязательный тогда
		ФормаОбязательногоВопроса				= ПолучитьФорму("ФормаОбязательногоВопроса");
		ФормаОбязательногоВопроса.Анкета		= ЭтотОбъект;
		ФормаОбязательногоВопроса.ВопросИсходный= ВыбраннаяСтрока.Вопрос;
		ФормаОбязательногоВопроса.ВопросУсловия	= ВыбраннаяСтрока.ВопросУсловия;
		ФормаОбязательногоВопроса.УсловиеОтвета	= ВыбраннаяСтрока.УсловиеОтвета;
		ФормаОбязательногоВопроса.Ответ			= ВыбраннаяСтрока.ОтветУсловия;
		ФормаОбязательногоВопроса.Обязательный	= ВыбраннаяСтрока.Обязательный;
		
		МассивВопросов = Элемент.Значение.ВыгрузитьКолонку("Вопрос");
		МассивВопросов.Удалить(ВыбраннаяСтрока.НомерСтроки - 1); // удаляем текущий вопрос из списка
		ФормаОбязательногоВопроса.СписокВопросовДляВыбора.ЗагрузитьЗначения(МассивВопросов);
		РезультатФормы = ФормаОбязательногоВопроса.ОткрытьМодально();
		
		Если РезультатФормы = "ОК" тогда
			ВыбраннаяСтрока.Вопрос			= ФормаОбязательногоВопроса.ВопросИсходный;
			ВыбраннаяСтрока.ВопросУсловия	= ФормаОбязательногоВопроса.ВопросУсловия;
			ВыбраннаяСтрока.УсловиеОтвета	= ФормаОбязательногоВопроса.УсловиеОтвета;
			ВыбраннаяСтрока.ОтветУсловия	= ФормаОбязательногоВопроса.Ответ;
			ВыбраннаяСтрока.Обязательный	= ФормаОбязательногоВопроса.Обязательный;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ВопросыАнкетыВыбор()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ЕстьФизическиеЛица	= Метаданные.Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ЗначенияПеречисления.Найти("ФизическиеЛица") <> Неопределено;
ЕстьКонтрагенты		= Метаданные.Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ЗначенияПеречисления.Найти("Контрагенты") <> Неопределено;
ЕстьКонтактныеЛица	= Метаданные.Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ЗначенияПеречисления.Найти("КонтактныеЛица") <> Неопределено;

Если ЕстьФизическиеЛица Тогда
	ЭлементыФормы.ВидСправочникаДляЗагрузки.СписокВыбора.Добавить(Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица);
	
	СписокОбязательныхВопросовФизическиеЛица	= Новый Соответствие;
	СписокОбязательныхВопросовФизическиеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Фамилия, 1);
	СписокОбязательныхВопросовФизическиеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Имя, 2);
	СписокОбязательныхВопросовФизическиеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Отчество, 3);
	СписокОбязательныхВопросовФизическиеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.ДатаРождения, 4);
КонецЕсли;

Если ЕстьКонтактныеЛица Тогда
	ЭлементыФормы.ВидСправочникаДляЗагрузки.СписокВыбора.Добавить(Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты);
		
	СписокОбязательныхВопросовКонтактныеЛица	= Новый Соответствие;
	СписокОбязательныхВопросовКонтактныеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.ИНН, 1);
	СписокОбязательныхВопросовКонтактныеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.НаименованиеКонтрагента, 2);
	СписокОбязательныхВопросовКонтактныеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Фамилия, 3);
	СписокОбязательныхВопросовКонтактныеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Имя, 4);
	СписокОбязательныхВопросовКонтактныеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Отчество, 5);
	СписокОбязательныхВопросовКонтактныеЛица.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.ДатаРождения, 6);
КонецЕсли;

Если ЕстьКонтрагенты Тогда
	ЭлементыФормы.ВидСправочникаДляЗагрузки.СписокВыбора.Добавить(Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты);
		
	СписокОбязательныхВопросовКонтрагенты		= Новый Соответствие;
	СписокОбязательныхВопросовКонтрагенты.Вставить(ПланыВидовХарактеристик.ВопросыДляАнкетирования.ИНН, 1);
КонецЕсли;

