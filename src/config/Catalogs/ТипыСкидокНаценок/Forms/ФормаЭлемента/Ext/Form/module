////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет заголовок элемента формы "ЕдиницаУсловия".
//
Процедура ЗаполнитьНадписьЕдиницаУсловия()

	Если Условие = Перечисления.УсловияСкидкиНаценки.ПоКоличествуТовара Тогда
		ЭлементыФормы.НадписьЕдиницаУсловия.Заголовок = "ед. хранения";
	ИначеЕсли Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента Тогда
		ЭлементыФормы.НадписьЕдиницаУсловия.Заголовок = "" + ?(Не ЗначениеЗаполнено(Валюта), "<валюта не выбрана>", Валюта);
	Иначе
		ЭлементыФормы.НадписьЕдиницаУсловия.Заголовок = "";
	КонецЕсли;

КонецПроцедуры // ЗаполнитьНадписьЕдиницаУсловия()

// Процедура заполняет время по табличной части "ВремяПоДнямНедели".
//
Процедура ИзменитьВремя(Элемент)

	Если ОбщееВремяНачала > ОбщееВремяОкончания Тогда
		Если Элемент.Данные = "ОбщееВремяОкончания" Тогда
			ОбщееВремяНачала = ОбщееВремяОкончания;
		Иначе
			ОбщееВремяОкончания = ОбщееВремяНачала;
		КонецЕсли;
	КонецЕсли;

	Для Каждого СтрокаДня Из ВремяПоДнямНедели Цикл
		СтрокаДня.ВремяНачала = ОбщееВремяНачала;
		СтрокаДня.ВремяОкончания = ОбщееВремяОкончания;
		СтрокаДня.Выбран = Истина;
	КонецЦикла;

КонецПроцедуры // ИзменитьВремя()

// Процедура изменяет тип элемента формы "ЗначениеУсловия".
//
Процедура ИзменитьТипЗначенияУсловия()

	Если Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуОплаты Тогда
		ЭлементыФормы.ЗначениеУсловия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ВидыОплатЧекаККМ");
	Иначе
		КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
		ЭлементыФормы.ЗначениеУсловия.ОграничениеТипа = Новый ОписаниеТипов("Число", КвалификаторыЧисла);
	КонецЕсли;

	ЗначениеУсловия = ЭлементыФормы.ЗначениеУсловия.ОграничениеТипа.ПривестиЗначение(ЗначениеУсловия);

	Если Условие = Перечисления.УсловияСкидкиНаценки.БезУсловий Тогда
		ЗначениеУсловия = 0;
		ЭлементыФормы.ЗначениеУсловия.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ЗначениеУсловия.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры // ИзменитьТипЗначенияУсловия()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ЭтоНовый() И НЕ мКопирование Тогда
		Для Сч = 0 По 6 Цикл
			СтрокаДень = ВремяПоДнямНедели.Добавить();
			СтрокаДень.ДеньНедели     = Перечисления.ДниНедели[Сч];
			СтрокаДень.ВремяНачала    = '00010101000000';
			СтрокаДень.ВремяОкончания = '00010101235959';
			СтрокаДень.Выбран         = Истина;
		КонецЦикла;

		ОбщееВремяНачала = '00010101000000';
		ОбщееВремяОкончания = '00010101235959';
		Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента;
		ВидСкидки = Перечисления.ВидыСкидок.Розничная;
	КонецЕсли;
	ИзменитьТипЗначенияУсловия();

	ЭлементыФормы.Условие.СписокВыбора.Добавить(Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента);
	ЭлементыФормы.Условие.СписокВыбора.Добавить(Перечисления.УсловияСкидкиНаценки.ПоКоличествуТовара);
	ЭлементыФормы.Условие.СписокВыбора.Добавить(Перечисления.УсловияСкидкиНаценки.ПоВидуОплаты);
	ЭлементыФормы.Условие.СписокВыбора.Добавить(Перечисления.УсловияСкидкиНаценки.БезУсловий);

КонецПроцедуры // ПередОткрытием()

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);

	ЗаполнитьНадписьЕдиницаУсловия();

КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриИзменении элемента формы ОбщееВремяНачало.
//
Процедура ОбщееВремяНачалоПриИзменении(Элемент)

	ИзменитьВремя(Элемент);

КонецПроцедуры // ОбщееВремяНачалоПриИзменении()

// Обработчик события ПриИзменении элемента формы ОбщееВремяОкончание.
//
Процедура ОбщееВремяОкончаниеПриИзменении(Элемент)

	ИзменитьВремя(Элемент);

КонецПроцедуры // ОбщееВремяОкончаниеПриИзменении()

// Обработчик события ПриИзменении элемента формы Условие.
//
Процедура УсловиеПриИзменении(Элемент)

	ИзменитьТипЗначенияУсловия();
	ЗаполнитьНадписьЕдиницаУсловия();

КонецПроцедуры // УсловиеПриИзменении()

// Обработчик события ПриИзменении элемента формы ВремяПоДнямНеделиВремяНачала.
//
Процедура ВремяПоДнямНеделиВремяНачалаПриИзменении(Элемент)

	ТекущаяСтрока = ЭлементыФормы.ВремяПоДнямНедели.ТекущиеДанные;

	Если ТекущаяСтрока.ВремяНачала > ТекущаяСтрока.ВремяОкончания Тогда
		ТекущаяСтрока.ВремяОкончания = ТекущаяСтрока.ВремяНачала;
	КонецЕсли;

КонецПроцедуры // ВремяПоДнямНеделиВремяНачалаПриИзменении()

// Обработчик события ПриИзменении элемента формы ВремяПоДнямНеделиВремяОкончания.
//
Процедура ВремяПоДнямНеделиВремяОкончанияПриИзменении(Элемент)

	ТекущаяСтрока = ЭлементыФормы.ВремяПоДнямНедели.ТекущиеДанные;

	Если ТекущаяСтрока.ВремяНачала > ТекущаяСтрока.ВремяОкончания Тогда
		ТекущаяСтрока.ВремяНачала = ТекущаяСтрока.ВремяОкончания;
	КонецЕсли;

КонецПроцедуры // ВремяПоДнямНеделиВремяОкончанияПриИзменении()

// Обработчик события ПриИзменении элемента формы ВалютаПриИзменении.
//
Процедура ВалютаПриИзменении(Элемент)

	ЗаполнитьНадписьЕдиницаУсловия();

КонецПроцедуры // ВалютаПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события Нажатие элемента формы КоманднаяПанельВремяПоДнямНедели.ОтметитьВсе.
//
Процедура КоманднаяПанельВремяПоДнямНеделиДействиеОтметитьВсе(Кнопка)

	Для Каждого День Из ВремяПоДнямНедели Цикл
		День.Выбран = Истина;
	КонецЦикла;

КонецПроцедуры // КоманднаяПанельВремяПоДнямНеделиДействиеОтметитьВсе()

// Обработчик события Нажатие элемента формы КоманднаяПанельВремяПоДнямНедели.СнятьВсе.
//
Процедура КоманднаяПанельВремяПоДнямНеделиДействиеСнятьВсе(Кнопка)

	Для Каждого День Из ВремяПоДнямНедели Цикл
		День.Выбран = Ложь;
	КонецЦикла;

КонецПроцедуры // КоманднаяПанельВремяПоДнямНеделиДействиеСнятьВсе()

// Обработчик события "ПриИзменении" реквизита "ВидСкидки".
//
Процедура ВидСкидкиПриИзменении(Элемент)

	Если ВидСкидки = Перечисления.ВидыСкидок.Оптовая Тогда
		Если Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуОплаты Тогда
			Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента;
			ИзменитьТипЗначенияУсловия();
		КонецЕсли;

		ЭлементСпискаКУдалению = ЭлементыФормы.Условие.СписокВыбора.НайтиПоЗначению(Перечисления.УсловияСкидкиНаценки.ПоВидуОплаты);
		Если ЭлементСпискаКУдалению <> Неопределено Тогда
			ЭлементыФормы.Условие.СписокВыбора.Удалить(ЭлементСпискаКУдалению);
		КонецЕсли;
	Иначе
		ЭлементСпискаКДобавлению = ЭлементыФормы.Условие.СписокВыбора.НайтиПоЗначению(Перечисления.УсловияСкидкиНаценки.ПоВидуОплаты);
		Если ЭлементСпискаКДобавлению = Неопределено Тогда
			ЭлементыФормы.Условие.СписокВыбора.Добавить(Перечисления.УсловияСкидкиНаценки.ПоВидуОплаты);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ВидСкидкиПриИзменении()

Процедура ПослеЗаписи()
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

